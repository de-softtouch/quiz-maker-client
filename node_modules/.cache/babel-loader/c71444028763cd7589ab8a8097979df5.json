{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\components\\\\grade\\\\GradeQuiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Box, Button, Center, Checkbox, Container, Divider, Flex, FormControl, FormLabel, GridItem, Heading, HStack, IconButton, Image, Progress, SimpleGrid, Switch, Text, Tooltip, VStack } from \"@chakra-ui/react\";\nimport { useParams } from \"react-router-dom\";\nimport SettingDialog from \"./SettingDialog\";\nimport { ArrowDownIcon, ArrowUpIcon, TimeIcon } from \"@chakra-ui/icons\";\nimport { useQuiz } from \"../../context/QuizProvider\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GradeQuiz = () => {\n  _s();\n\n  //get id in params\n  const {\n    id\n  } = useParams();\n  const pageRef = useRef(null);\n  const {\n    foundedQuiz,\n    setFoundedQuiz\n  } = useQuiz();\n  const [showSetting, setShowSetting] = useState(true);\n  const [userAnswers, setUserAnswers] = useState(new Map());\n  useEffect(() => {\n    setShowSetting(true);\n    fetchQuiz();\n  }, []);\n\n  const fetchQuiz = async () => {\n    try {\n      const resp = await axios.get(`http://localhost:8080/api/v1/public/quiz?code=${id}`);\n\n      if (resp.status == 200) {\n        setFoundedQuiz(resp.data);\n        return;\n      }\n    } catch (e) {}\n  };\n\n  function onSelectedOption(e, optionId, questionId) {\n    console.log(e.target.checked, optionId, questionId);\n    setUserAnswers(prevState => new Map([...prevState, []]));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: pageRef,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      minH: '100vh',\n      bg: 'gray.100',\n      p: 10,\n      align: 'center',\n      children: [showSetting && /*#__PURE__*/_jsxDEV(SettingDialog, {\n        setShow: setShowSetting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }, this), !showSetting && /*#__PURE__*/_jsxDEV(Box, {\n        m: 10,\n        bg: 'white',\n        borderRadius: 'md',\n        boxShadow: 'xl',\n        minH: '100vh',\n        maxW: '860px',\n        p: 10,\n        children: [/*#__PURE__*/_jsxDEV(VStack, {\n          position: 'relative',\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            pb: 10,\n            fontSize: 25,\n            children: foundedQuiz.title != null ? foundedQuiz.title : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: 'medium',\n            color: 'teal',\n            letterSpacing: 1,\n            fontStyle: 'italic',\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            m: 5,\n            children: [foundedQuiz.questions.length, \" Questions\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this), foundedQuiz.questions.map((question, i) => /*#__PURE__*/_jsxDEV(VStack, {\n            w: '100%',\n            align: 'start',\n            textAlign: 'start',\n            p: 2,\n            spacing: 5,\n            children: [/*#__PURE__*/_jsxDEV(Container, {\n              w: '100%',\n              maxW: \"4xl\",\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                maxW: \"4xl\",\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  fontWeight: 'medium',\n                  children: [i + 1, \". \", question.title]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n              w: '100%',\n              columns: 2,\n              spacing: 2,\n              align: 'start',\n              textAlign: 'start',\n              children: question.options.map((option, i) => /*#__PURE__*/_jsxDEV(Container, {\n                w: '100%',\n                minW: 300,\n                maxW: \"xl\",\n                align: 'start',\n                textAlign: 'start',\n                alignItems: 'start',\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  padding: \"1\",\n                  maxW: \"3xl\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    onChange: e => onSelectedOption(e, option.optionId, question.questionId),\n                    value: option.optionId,\n                    colorScheme: 'teal',\n                    size: 'md',\n                    children: option.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 65\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 61\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 57\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 45\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 41\n          }, this)), /*#__PURE__*/_jsxDEV(Box, {\n            py: 5,\n            align: 'end',\n            alignSelf: 'end',\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              alignSelf: 'end',\n              size: 'lg',\n              colorScheme: 'teal',\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n          zIndex: 100,\n          position: 'fixed',\n          bottom: 10,\n          right: 20,\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            label: \"Scroll to top\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => window.scrollTo(0, 0),\n              colorScheme: 'teal',\n              icon: /*#__PURE__*/_jsxDEV(ArrowUpIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            label: \"Scroll to bottom\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => {\n                pageRef.current.scrollIntoView({\n                  behavior: \"smooth\",\n                  block: \"end\",\n                  inline: \"nearest\"\n                });\n              },\n              colorScheme: 'teal',\n              icon: /*#__PURE__*/_jsxDEV(ArrowDownIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          p: 1,\n          position: 'fixed',\n          left: 0,\n          top: 0,\n          m: 10,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: 'md',\n            colorScheme: 'teal',\n            variant: 'outline',\n            leftIcon: /*#__PURE__*/_jsxDEV(TimeIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 104\n            }, this),\n            children: \"23:00 left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Progress, {\n          size: 'sm',\n          left: '50%',\n          transform: 'translateX(-50%)',\n          minW: '860px',\n          colorScheme: 'red',\n          maxW: '860px',\n          position: 'fixed',\n          bottom: 0,\n          value: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GradeQuiz, \"bnN2G9u18hQuOWriJQlnDhgrqq8=\", false, function () {\n  return [useParams, useQuiz];\n});\n\n_c = GradeQuiz;\nexport default GradeQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"GradeQuiz\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/components/grade/GradeQuiz.js"],"names":["React","useEffect","useRef","useState","Box","Button","Center","Checkbox","Container","Divider","Flex","FormControl","FormLabel","GridItem","Heading","HStack","IconButton","Image","Progress","SimpleGrid","Switch","Text","Tooltip","VStack","useParams","SettingDialog","ArrowDownIcon","ArrowUpIcon","TimeIcon","useQuiz","axios","GradeQuiz","id","pageRef","foundedQuiz","setFoundedQuiz","showSetting","setShowSetting","userAnswers","setUserAnswers","Map","fetchQuiz","resp","get","status","data","e","onSelectedOption","optionId","questionId","console","log","target","checked","prevState","title","questions","length","map","question","i","options","option","content","window","scrollTo","current","scrollIntoView","behavior","block","inline"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Center, Checkbox, Container,\r\n    Divider,\r\n    Flex, FormControl, FormLabel,\r\n    GridItem,\r\n    Heading,\r\n    HStack, IconButton,\r\n    Image, Progress,\r\n    SimpleGrid, Switch,\r\n    Text, Tooltip,\r\n    VStack\r\n} from \"@chakra-ui/react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport SettingDialog from \"./SettingDialog\";\r\nimport {ArrowDownIcon, ArrowUpIcon, TimeIcon} from \"@chakra-ui/icons\";\r\nimport {useQuiz} from \"../../context/QuizProvider\";\r\nimport axios from \"axios\";\r\n\r\nconst GradeQuiz = () => {\r\n\r\n    //get id in params\r\n    const {id} = useParams();\r\n    const pageRef = useRef(null);\r\n    const {foundedQuiz, setFoundedQuiz} = useQuiz();\r\n    const [showSetting, setShowSetting] = useState(true);\r\n\r\n    const [userAnswers, setUserAnswers] = useState(new Map());\r\n\r\n    useEffect(() => {\r\n        setShowSetting(true);\r\n        fetchQuiz();\r\n    }, []);\r\n    const fetchQuiz = async () => {\r\n        try {\r\n            const resp = await axios.get(`http://localhost:8080/api/v1/public/quiz?code=${id}`);\r\n            if (resp.status == 200) {\r\n                setFoundedQuiz(resp.data);\r\n                return;\r\n            }\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    function onSelectedOption(e, optionId, questionId) {\r\n        console.log(e.target.checked, optionId, questionId);\r\n        setUserAnswers(prevState => new Map([...prevState,[]]))\r\n    }\r\n\r\n    return (\r\n        <div ref={pageRef}>\r\n            <Box\r\n                minH={'100vh'}\r\n                bg={'gray.100'}\r\n                p={10}\r\n                align={'center'}>\r\n\r\n                {/*<Box minH={'80px'}></Box>*/}\r\n                {showSetting && <SettingDialog setShow={setShowSetting}/>}\r\n                {/*A4*/}\r\n                {\r\n                    !showSetting && (\r\n                        <Box\r\n                            m={10}\r\n                            bg={'white'}\r\n                            borderRadius={'md'}\r\n                            boxShadow={'xl'}\r\n                            minH={'100vh'}\r\n                            maxW={'860px'}\r\n                            p={10}>\r\n                            <VStack position={'relative'}>\r\n                                {/*\r\n                        QUIZ TITLE\r\n                        */}\r\n                                <Heading\r\n                                    pb={10}\r\n                                    fontSize={25}>\r\n                                    {foundedQuiz.title != null ? foundedQuiz.title : ''}\r\n                                </Heading>\r\n                                <Text\r\n                                    fontWeight={'medium'}\r\n                                    color={'teal'}\r\n                                    letterSpacing={1}\r\n                                    fontStyle={'italic'}\r\n                                    position={'absolute'}\r\n                                    top={0}\r\n                                    right={0}\r\n                                    m={5}>\r\n                                    {foundedQuiz.questions.length} Questions\r\n                                </Text>\r\n                                {/*QUESTIONS*/}\r\n                                {\r\n                                    foundedQuiz.questions.map((question, i) => (\r\n                                        <VStack\r\n                                            w={'100%'}\r\n                                            align={'start'}\r\n                                            textAlign={'start'\r\n                                            } key={i}\r\n                                            p={2}\r\n                                            spacing={5}>\r\n                                            {/*\r\n                                    QUESTION TITLE\r\n                                    */}\r\n                                            <Container w={'100%'} maxW=\"4xl\">\r\n                                                <Box maxW=\"4xl\">\r\n                                                    <Text fontWeight={'medium'}>\r\n                                                        {i + 1}. {question.title}\r\n                                                    </Text>\r\n                                                </Box>\r\n                                            </Container>\r\n                                            {/*OPTIONS*/}\r\n                                            <SimpleGrid\r\n                                                w={'100%'}\r\n                                                columns={2}\r\n                                                spacing={2}\r\n                                                align={'start'}\r\n                                                textAlign={'start'}>\r\n                                                {\r\n                                                    question.options.map((option, i) => (\r\n                                                        <Container\r\n                                                            w={'100%'}\r\n                                                            minW={300}\r\n                                                            key={i}\r\n                                                            maxW=\"xl\"\r\n                                                            align={'start'}\r\n                                                            textAlign={'start'}\r\n                                                            alignItems={'start'}\r\n                                                        >\r\n                                                            <Box padding=\"1\" maxW=\"3xl\">\r\n                                                                <Checkbox\r\n                                                                    onChange={(e) => onSelectedOption(e, option.optionId, question.questionId)}\r\n                                                                    value={option.optionId}\r\n                                                                    colorScheme={'teal'}\r\n                                                                    size={'md'}>\r\n                                                                    {option.content}\r\n                                                                </Checkbox>\r\n                                                            </Box>\r\n                                                        </Container>\r\n                                                    ))\r\n                                                }\r\n                                            </SimpleGrid>\r\n                                            <Divider/>\r\n                                        </VStack>\r\n                                    ))\r\n                                }\r\n                                {/* Submit button*/}\r\n                                <Box py={5} align={'end'} alignSelf={'end'}>\r\n                                    <Button alignSelf={'end'} size={'lg'} colorScheme={'teal'}>Submit</Button>\r\n                                </Box>\r\n                            </VStack>\r\n\r\n                            {/* FIXED CONTENTS*/}\r\n                            <HStack zIndex={100} position={'fixed'} bottom={10} right={20}>\r\n                                <Tooltip label={\"Scroll to top\"}>\r\n                                    <IconButton\r\n                                        onClick={() => window.scrollTo(0, 0)}\r\n                                        colorScheme={'teal'}\r\n                                        icon={<ArrowUpIcon/>}/>\r\n                                </Tooltip>\r\n                                <Tooltip label={\"Scroll to bottom\"}>\r\n                                    <IconButton\r\n                                        onClick={() => {\r\n                                            pageRef.current.scrollIntoView({\r\n                                                behavior: \"smooth\",\r\n                                                block: \"end\",\r\n                                                inline: \"nearest\"\r\n                                            })\r\n                                        }}\r\n                                        colorScheme={'teal'}\r\n                                        icon={<ArrowDownIcon/>}/>\r\n                                </Tooltip>\r\n                            </HStack>\r\n                            <Flex p={1} position={'fixed'} left={0} top={0} m={10}>\r\n                                <Button size={'md'} colorScheme={'teal'} variant={'outline'} leftIcon={<TimeIcon/>}>23:00\r\n                                    left</Button>\r\n                            </Flex>\r\n                            <Progress\r\n                                size={'sm'}\r\n                                left={'50%'}\r\n                                transform={'translateX(-50%)'}\r\n                                minW={'860px'}\r\n                                colorScheme={'red'}\r\n                                maxW={'860px'}\r\n                                position={'fixed'}\r\n                                bottom={0}\r\n                                value={100}/>\r\n                        </Box>\r\n\r\n\r\n                    )\r\n                }\r\n\r\n\r\n            </Box>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GradeQuiz;"]},"metadata":{},"sourceType":"module"}