{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\pages\\\\admin\\\\quiz_edit\\\\QuizEditor.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Checkbox, Container, Heading, HStack, IconButton, Select, SimpleGrid, Spacer, Stack, Text, Tooltip, VStack } from \"@chakra-ui/react\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { useAdmin } from \"../../../hooks/useAuth\";\nimport { AddIcon, CopyIcon, DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\nimport { QuizEditContext } from \"../../../providers/QuizEditProvider\";\nimport { AiOutlineTag, BsPen, MdArrowDropDown } from \"react-icons/all\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuizEditor = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    quiz,\n    setQuiz\n  } = useContext(QuizEditContext);\n  const {\n    setFullMode\n  } = useAdmin();\n  const [sort, setSort] = useState('newest');\n  useEffect(() => {\n    const fetchQuizDetails = async () => {\n      const url = `http://localhost:8080/api/v1/admin/quiz-management/managed-quizzes/${id}`;\n\n      try {\n        const resp = await axios.get(url, {\n          headers: {\n            \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        resp.status === 200 && setQuiz(resp.data);\n        console.log(resp.data);\n      } catch (e) {\n        console.log(\"Failed to get quiz details with id \" + id);\n      }\n    };\n\n    fetchQuizDetails();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    align: 'start',\n    w: '100%',\n    minH: '100vh',\n    children: [/*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 4,\n      color: 'white',\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        px: 4,\n        colorScheme: 'teal',\n        leftIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 63\n        }, this),\n        children: quiz && quiz.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        px: 4,\n        colorScheme: 'linkedin',\n        leftIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 67\n        }, this),\n        children: \"New Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        px: 4,\n        colorScheme: 'purple',\n        leftIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 65\n        }, this),\n        children: \"Quiz title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        px: 4,\n        colorScheme: 'messenger',\n        leftIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 68\n        }, this),\n        children: \"Quiz title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        bg: \"tomato\",\n        onChange: e => {\n          setSort(e.target.value);\n          const reversed = quiz.questions.reverse();\n          setQuiz(prevState => ({ ...prevState,\n            questions: reversed\n          }));\n        },\n        borderColor: \"tomato\",\n        maxW: 20,\n        colorScheme: 'teal',\n        icon: /*#__PURE__*/_jsxDEV(MdArrowDropDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 62\n        }, this),\n        variant: \"filled\",\n        placeholder: \"Sort by\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: 'newest',\n          children: \"Newest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: 'oldest',\n          children: \"Oldest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), quiz && quiz.questions.map((question, index) => /*#__PURE__*/_jsxDEV(Box, {\n      boxShadow: \"sm\",\n      my: 5,\n      borderRadius: \"md\",\n      align: \"start\",\n      textAlign: \"start\",\n      h: \"100%\",\n      bg: \"white\",\n      maxW: \"600px\",\n      minW: \"600px\",\n      children: [/*#__PURE__*/_jsxDEV(HStack, {\n        p: 2,\n        bg: \"gray.200\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Question \", sort === \"newest\" ? question.options.length : index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          label: \"edit\",\n          color: \"teal.200\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            icon: /*#__PURE__*/_jsxDEV(BsPen, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          color: \"red.500\",\n          label: \"remove\",\n          children: /*#__PURE__*/_jsxDEV(IconButton // onClick={onDeleteQuestion}\n          , {\n            icon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          label: \"duplicate\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            icon: /*#__PURE__*/_jsxDEV(CopyIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(VStack, {\n        align: \"start\",\n        p: 2,\n        spacing: 5,\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          maxW: \"3xl\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            maxW: \"3xl\",\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              fontWeight: \"medium\",\n              children: question.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n          w: \"100%\",\n          align: \"start\",\n          columns: 2,\n          spacing: 2,\n          children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(Container, {\n            maxW: \"xl\",\n            centerContent: true,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              py: 4,\n              w: \"100%\",\n              maxW: \"3xl\",\n              align: \"start\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                w: \"100%\",\n                size: \"md\",\n                disabled: true // isChecked={option.isChecked}\n                ,\n                children: option.content\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 41\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        bg: \"gray.200\",\n        p: 1,\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          size: \"sm\",\n          maxW: \"100\",\n          bg: \"white\",\n          name: \"queston seconds\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"option1\",\n            children: \"30 secs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"option2\",\n            children: \"15 secs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"option3\",\n            children: \"45 secs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"sm\",\n          colorScheme: \"white\",\n          variant: \"ghost\",\n          leftIcon: /*#__PURE__*/_jsxDEV(AiOutlineTag, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 43\n          }, this),\n          children: \"Tag topics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuizEditor, \"Lr9KCFLIORjvx3zcj9Kydhq72bI=\", false, function () {\n  return [useParams, useAdmin];\n});\n\n_c = QuizEditor;\nexport default QuizEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizEditor\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/pages/admin/quiz_edit/QuizEditor.js"],"names":["Box","Button","Checkbox","Container","Heading","HStack","IconButton","Select","SimpleGrid","Spacer","Stack","Text","Tooltip","VStack","React","useContext","useEffect","useState","axios","useParams","useAdmin","AddIcon","CopyIcon","DeleteIcon","EditIcon","QuizEditContext","AiOutlineTag","BsPen","MdArrowDropDown","QuizEditor","id","quiz","setQuiz","setFullMode","sort","setSort","fetchQuizDetails","url","resp","get","headers","localStorage","getItem","status","data","console","log","e","title","target","value","reversed","questions","reverse","prevState","map","question","index","options","length","option","content"],"mappings":"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","sourcesContent":["import {\r\n    Box,\r\n    Button, Checkbox,\r\n    Container,\r\n    Heading,\r\n    HStack,\r\n    IconButton, Select,\r\n    SimpleGrid,\r\n    Spacer, Stack,\r\n    Text,\r\n    Tooltip,\r\n    VStack\r\n} from \"@chakra-ui/react\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useAdmin} from \"../../../hooks/useAuth\";\r\nimport {AddIcon, CopyIcon, DeleteIcon, EditIcon} from \"@chakra-ui/icons\";\r\nimport {QuizEditContext} from \"../../../providers/QuizEditProvider\";\r\nimport {AiOutlineTag, BsPen, MdArrowDropDown} from \"react-icons/all\";\r\n\r\nconst QuizEditor = () => {\r\n\r\n    const {id} = useParams();\r\n    const {quiz, setQuiz} = useContext(QuizEditContext);\r\n    const {setFullMode} = useAdmin();\r\n    const [sort, setSort] = useState('newest');\r\n    useEffect(() => {\r\n        const fetchQuizDetails = async () => {\r\n            const url = `http://localhost:8080/api/v1/admin/quiz-management/managed-quizzes/${id}`;\r\n            try {\r\n                const resp = await axios.get(url, {\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\r\n                    }\r\n                })\r\n                resp.status === 200 && setQuiz(resp.data);\r\n                console.log(resp.data)\r\n            } catch (e) {\r\n                console.log(\"Failed to get quiz details with id \" + id);\r\n            }\r\n        }\r\n        fetchQuizDetails();\r\n    }, [])\r\n    return (\r\n        <VStack align={'start'} w={'100%'} minH={'100vh'}>\r\n\r\n            <HStack spacing={4} color={'white'}>\r\n                <Button px={4} colorScheme={'teal'} leftIcon={<EditIcon/>}>\r\n                    {quiz && quiz.title}\r\n                </Button>\r\n                <Button px={4} colorScheme={'linkedin'} leftIcon={<AddIcon/>}>New Question</Button>\r\n                <Button px={4} colorScheme={'purple'} leftIcon={<EditIcon/>}>Quiz title</Button>\r\n                <Button px={4} colorScheme={'messenger'} leftIcon={<EditIcon/>}>Quiz title</Button>\r\n                <Select bg=\"tomato\"\r\n                        onChange={(e) => {\r\n                            setSort(e.target.value);\r\n                            const reversed = quiz.questions.reverse();\r\n                            setQuiz((prevState) => ({\r\n                                ...prevState,\r\n                                questions: reversed,\r\n                            }))\r\n                            ;\r\n                        }}\r\n                        borderColor=\"tomato\"\r\n                        maxW={20} colorScheme={'teal'} icon={<MdArrowDropDown/>}\r\n                        variant=\"filled\"\r\n                        placeholder=\"Sort by\">\r\n                    <option value={'newest'}>Newest</option>\r\n                    <option value={'oldest'}>Oldest</option>\r\n                </Select>\r\n            </HStack>\r\n\r\n            {/*    QUESTION*/}\r\n            {\r\n                quiz && quiz.questions.map((question, index) => (\r\n                    <Box\r\n                        key={index}\r\n                        boxShadow={\"sm\"}\r\n                        my={5}\r\n                        borderRadius={\"md\"}\r\n                        align={\"start\"}\r\n                        textAlign={\"start\"}\r\n                        h={\"100%\"}\r\n                        bg={\"white\"}\r\n                        maxW={\"600px\"}\r\n                        minW={\"600px\"}\r\n                    >\r\n                        <HStack p={2} bg={\"gray.200\"}>\r\n                            {/*QUESTION INDEX*/}\r\n                            <Text>Question {sort === \"newest\" ? question.options.length : index + 1}</Text>\r\n                            <Spacer/>\r\n                            <Tooltip label={\"edit\"} color={\"teal.200\"}>\r\n                                <IconButton icon={<BsPen/>}/>\r\n                            </Tooltip>\r\n                            <Tooltip color={\"red.500\"} label={\"remove\"}>\r\n                                <IconButton\r\n                                    // onClick={onDeleteQuestion}\r\n                                    icon={<DeleteIcon/>}\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip label={\"duplicate\"}>\r\n                                <IconButton icon={<CopyIcon/>}/>\r\n                            </Tooltip>\r\n                        </HStack>\r\n                        <VStack align={\"start\"} p={2} spacing={5}>\r\n                            {/*QUESTION TITLE*/}\r\n                            <Container maxW=\"3xl\">\r\n                                <Box maxW=\"3xl\">\r\n                                    <Text fontWeight={\"medium\"}>{question.title}</Text>\r\n                                </Box>\r\n                            </Container>\r\n                            <SimpleGrid\r\n                                w={\"100%\"}\r\n                                align={\"start\"}\r\n                                columns={2}\r\n                                spacing={2}\r\n                            >\r\n                                {\r\n                                    question.options.map((option, index) => (\r\n                                        <Container maxW=\"xl\" centerContent>\r\n                                            <Box\r\n                                                py={4}\r\n                                                w={\"100%\"}\r\n                                                maxW=\"3xl\"\r\n                                                align={\"start\"}\r\n                                            >\r\n\r\n                                                <Checkbox\r\n                                                    key={index}\r\n                                                    w={\"100%\"}\r\n                                                    size={\"md\"}\r\n                                                    disabled={true}\r\n                                                    // isChecked={option.isChecked}\r\n                                                >\r\n                                                    {option.content}\r\n                                                </Checkbox>\r\n\r\n\r\n                                            </Box>\r\n                                        </Container>\r\n                                    ))\r\n                                }\r\n                            </SimpleGrid>\r\n                        </VStack>\r\n                        <HStack bg={\"gray.200\"} p={1}>\r\n                            <Select\r\n                                size={\"sm\"}\r\n                                maxW={\"100\"}\r\n                                bg={\"white\"}\r\n                                name={\"queston seconds\"}\r\n                            >\r\n                                <option value=\"option1\">30 secs</option>\r\n                                <option value=\"option2\">15 secs</option>\r\n                                <option value=\"option3\">45 secs</option>\r\n                            </Select>\r\n                            <Button\r\n                                size={\"sm\"}\r\n                                colorScheme={\"white\"}\r\n                                variant={\"ghost\"}\r\n                                leftIcon={<AiOutlineTag/>}\r\n                            >\r\n                                Tag topics\r\n                            </Button>\r\n                        </HStack>\r\n                    </Box>\r\n\r\n                ))\r\n            }\r\n        </VStack>\r\n    );\r\n}\r\n\r\nexport default QuizEditor;"]},"metadata":{},"sourceType":"module"}