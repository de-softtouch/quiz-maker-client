{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\components\\\\admin\\\\quiz_edit\\\\QuizEditor.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Heading } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuizEditor = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [quiz, setQuiz] = useState(null);\n  useEffect(() => {\n    const fetchQuizDetails = async () => {\n      const url = `http://localhost:8080/api/v1/admin/quiz-management/managed-quizzes/${id}`;\n\n      try {\n        const resp = await axios.get(url, {\n          headers: {\n            \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        resp.status === 200 && setQuiz(resp.data);\n        console.log(resp.data);\n      } catch (e) {\n        console.log(\"Failed to get quiz details with id \" + id);\n      }\n    };\n\n    fetchQuizDetails();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      children: \"fullmode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(QuizEditor, \"Wc41KvxTkIHCJRRWRGHViKbhP4I=\", false, function () {\n  return [useParams];\n});\n\n_c = QuizEditor;\nexport default QuizEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizEditor\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/components/admin/quiz_edit/QuizEditor.js"],"names":["Button","Heading","useEffect","useState","axios","useParams","QuizEditor","id","quiz","setQuiz","fetchQuizDetails","url","resp","get","headers","localStorage","getItem","status","data","console","log","e"],"mappings":";;;AAAA,SAAQA,MAAR,EAAgBC,OAAhB,QAA8B,kBAA9B;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM;AAACC,IAAAA;AAAD,MAAOF,SAAS,EAAtB;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,gBAAgB,GAAG,YAAY;AACjC,YAAMC,GAAG,GAAI,sEAAqEJ,EAAG,EAArF;;AACA,UAAI;AACA,cAAMK,IAAI,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUF,GAAV,EAAe;AAC9BG,UAAAA,OAAO,EAAE;AACL,6BAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;AAD1D;AADqB,SAAf,CAAnB;AAKAJ,QAAAA,IAAI,CAACK,MAAL,KAAgB,GAAhB,IAAuBR,OAAO,CAACG,IAAI,CAACM,IAAN,CAA9B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACM,IAAjB;AACH,OARD,CAQE,OAAOG,CAAP,EAAU;AACRF,QAAAA,OAAO,CAACC,GAAR,CAAY,wCAAwCb,EAApD;AACH;AACJ,KAbD;;AAcAG,IAAAA,gBAAgB;AACnB,GAhBQ,EAgBN,EAhBM,CAAT;AAiBA,sBAAO;AAAA,2BACP,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADO,mBAAP;AAMH,CA5BD;;GAAMJ,U;UAEWD,S;;;KAFXC,U;AA8BN,eAAeA,UAAf","sourcesContent":["import {Button, Heading} from \"@chakra-ui/react\";\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nconst QuizEditor = () => {\r\n\r\n    const {id} = useParams();\r\n    const [quiz, setQuiz] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchQuizDetails = async () => {\r\n            const url = `http://localhost:8080/api/v1/admin/quiz-management/managed-quizzes/${id}`;\r\n            try {\r\n                const resp = await axios.get(url, {\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\r\n                    }\r\n                })\r\n                resp.status === 200 && setQuiz(resp.data);\r\n                console.log(resp.data)\r\n            } catch (e) {\r\n                console.log(\"Failed to get quiz details with id \" + id);\r\n            }\r\n        }\r\n        fetchQuizDetails();\r\n    }, [])\r\n    return <>\r\n    <Button>\r\n        fullmode\r\n    </Button>\r\n\r\n    </>\r\n}\r\n\r\nexport default QuizEditor;"]},"metadata":{},"sourceType":"module"}