{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\quiz maker client\\\\src\\\\pages\\\\admin\\\\assigment\\\\AssignmentQuizzes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AdminContext } from \"../../../providers/AdminSettingProvider\";\nimport UserService from \"../../../service/UserService\";\nimport { Badge, Flex, HStack, Text, VStack } from \"@chakra-ui/react\";\nimport dateFormat from \"dateformat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AssignmentQuizzes = () => {\n  _s();\n\n  const {\n    isLoading,\n    setLoading\n  } = useContext(AdminContext);\n  const [assignments, setAssignments] = useState();\n  useEffect(() => {\n    getAssignmentsInfo();\n  }, []);\n\n  const getAssignmentsInfo = async () => {\n    try {\n      setLoading(true);\n      const resp = await UserService.getAssignmentsInfo();\n      setAssignments(resp.data);\n      console.log(resp);\n    } catch (e) {} finally {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      direction: 'column',\n      children: [/*#__PURE__*/_jsxDEV(HStack, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Assignment Infos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), !isLoading && assignments && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(VStack, {\n          spacing: 5,\n          children: assignments.map((a, i) => /*#__PURE__*/_jsxDEV(Flex, {\n            bg: 'teal.100',\n            p: '5',\n            w: '100%',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n            children: [/*#__PURE__*/_jsxDEV(VStack, {\n              align: 'start',\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                children: a.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                children: a.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 45\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(HStack, {\n              children: [/*#__PURE__*/_jsxDEV(Badge, {\n                children: dateFormat(a.startDate, 'dd-mm-yyyy hh:MM')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 45\n              }, this), '-', /*#__PURE__*/_jsxDEV(Badge, {\n                children: dateFormat(a.finishDate, 'dd-mm-yyyy hh:MM')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 41\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AssignmentQuizzes, \"PDkU4Nfw4ez585JTDlOf+XY1S8Q=\");\n\n_c = AssignmentQuizzes;\nexport default AssignmentQuizzes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignmentQuizzes\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/quiz maker client/src/pages/admin/assigment/AssignmentQuizzes.js"],"names":["React","useContext","useEffect","useState","AdminContext","UserService","Badge","Flex","HStack","Text","VStack","dateFormat","AssignmentQuizzes","isLoading","setLoading","assignments","setAssignments","getAssignmentsInfo","resp","data","console","log","e","map","a","i","title","description","startDate","finishDate"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAAQC,YAAR,QAA2B,yCAA3B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAAQC,KAAR,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,IAA7B,EAAmCC,MAAnC,QAAgD,kBAAhD;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC5B,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAA0Bb,UAAU,CAACG,YAAD,CAA1C;AAEA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,EAA9C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,kBAAkB;AACrB,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMA,kBAAkB,GAAG,YAAY;AAEnC,QAAI;AACAH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMI,IAAI,GAAG,MAAMb,WAAW,CAACY,kBAAZ,EAAnB;AACAD,MAAAA,cAAc,CAACE,IAAI,CAACC,IAAN,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH,KALD,CAKE,OAAOI,CAAP,EAAU,CAEX,CAPD,SAOU;AACNR,MAAAA,UAAU,CAAC,KAAD,CAAV;AAEH;AACJ,GAbD;;AAcA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAE,QAAjB;AAAA,8BACI,QAAC,MAAD;AAAA,+BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAIK,CAACD,SAAD,IAAcE,WAAd,iBACG;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,CAAjB;AAAA,oBAEQA,WAAW,CAACQ,GAAZ,CAAgB,CAACC,CAAD,EAAIC,CAAJ,kBACZ,QAAC,IAAD;AAAM,YAAA,EAAE,EAAE,UAAV;AAAsB,YAAA,CAAC,EAAE,GAAzB;AAA8B,YAAA,CAAC,EAAE,MAAjC;AAAiD,YAAA,UAAU,EAAE,QAA7D;AACM,YAAA,cAAc,EAAE,eADtB;AAAA,oCAEI,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAE,OAAf;AAAA,sCACI,QAAC,IAAD;AAAA,0BAAOD,CAAC,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,IAAD;AAAA,0BAAOF,CAAC,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA,eAA6BF,CAA7B;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAMI,QAAC,MAAD;AAAA,sCACI,QAAC,KAAD;AAAA,0BACKd,UAAU,CAACa,CAAC,CAACI,SAAH,EAAc,kBAAd;AADf;AAAA;AAAA;AAAA;AAAA,sBADJ,EAIK,GAJL,eAKI,QAAC,KAAD;AAAA,0BACKjB,UAAU,CAACa,CAAC,CAACK,UAAH,EAAe,kBAAf;AADf;AAAA;AAAA;AAAA;AAAA,sBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA,aAA8CJ,CAA9C;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ,uBALR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAqCH,CA1DD;;GAAMb,iB;;KAAAA,iB;AA4DN,eAAeA,iBAAf","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {AdminContext} from \"../../../providers/AdminSettingProvider\";\r\nimport UserService from \"../../../service/UserService\";\r\nimport {Badge, Flex, HStack, Text, VStack} from \"@chakra-ui/react\";\r\nimport dateFormat from \"dateformat\";\r\n\r\nconst AssignmentQuizzes = () => {\r\n    const {isLoading, setLoading} = useContext(AdminContext);\r\n\r\n    const [assignments, setAssignments] = useState();\r\n    useEffect(() => {\r\n        getAssignmentsInfo();\r\n    }, [])\r\n    const getAssignmentsInfo = async () => {\r\n\r\n        try {\r\n            setLoading(true);\r\n            const resp = await UserService.getAssignmentsInfo();\r\n            setAssignments(resp.data);\r\n            console.log(resp);\r\n        } catch (e) {\r\n\r\n        } finally {\r\n            setLoading(false);\r\n\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Flex direction={'column'}>\r\n                <HStack>\r\n                    <Text>Assignment Infos</Text>\r\n                </HStack>\r\n                {!isLoading && assignments && (\r\n                    <>\r\n                        <VStack spacing={5}>\r\n                            {\r\n                                assignments.map((a, i) => (\r\n                                    <Flex bg={'teal.100'} p={'5'} w={'100%'} key={i} alignItems={'center'}\r\n                                          justifyContent={'space-between'}>\r\n                                        <VStack align={'start'} key={i}>\r\n                                            <Text>{a.title}</Text>\r\n                                            <Text>{a.description}</Text>\r\n                                        </VStack>\r\n                                        <HStack>\r\n                                            <Badge>\r\n                                                {dateFormat(a.startDate, 'dd-mm-yyyy hh:MM')}\r\n                                            </Badge>\r\n                                            {'-'}\r\n                                            <Badge>\r\n                                                {dateFormat(a.finishDate, 'dd-mm-yyyy hh:MM')}\r\n                                            </Badge>\r\n                                        </HStack>\r\n                                    </Flex>\r\n                                ))\r\n                            }\r\n                        </VStack>\r\n\r\n                    </>\r\n                )}\r\n\r\n            </Flex>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AssignmentQuizzes;"]},"metadata":{},"sourceType":"module"}