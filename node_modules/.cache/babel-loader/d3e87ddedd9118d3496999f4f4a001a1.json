{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\quiz maker client\\\\src\\\\pages\\\\admin\\\\assigment\\\\EditAssignment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { QuizEditContext } from \"../../../providers/QuizEditProvider\";\nimport { AdminContext } from \"../../../providers/AdminSettingProvider\";\nimport UserService from \"../../../service/UserService\";\nimport { forwardRef, useToast } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditAssignment = () => {\n  _s();\n\n  const {\n    getQuizDetail,\n    quiz\n  } = useContext(QuizEditContext);\n  const {\n    isLoading,\n    setLoading\n  } = useContext(AdminContext);\n  const {\n    id\n  } = useParams();\n  const [email, setEmail] = useState(\"\");\n  const [err, setErr] = useState('');\n  const [assignment, setAssignment] = useState({\n    quizId: id,\n    emails: [],\n    startDate: new Date()\n  });\n  const history = useHistory();\n  useEffect(async () => {\n    var _history$location$sta;\n\n    const data = (_history$location$sta = history.location.state) === null || _history$location$sta === void 0 ? void 0 : _history$location$sta.data;\n    await getQuizDetail(data.id); // const resp = await UserService.getAssignmentReport(id);\n  }, []);\n  const toast = useToast();\n  const ExampleCustomInput = forwardRef(({\n    value,\n    onClick\n  }, ref) => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"example-custom-input\",\n    onClick: onClick,\n    ref: ref,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this));\n\n  const assignToUsers = async () => {\n    if (assignment.startDate != null && assignment.finishDate != null && assignment.title != null) {\n      setLoading(true);\n      console.log('assigning....');\n\n      try {\n        const data = await UserService.assignToUsers(assignment);\n        console.log(\"assign success\");\n      } catch (e) {\n        console.log(\"Could not assign quiz to users! \", e);\n      } finally {\n        setLoading(false);\n      }\n    } else {\n      toast(\"Please select finish date!\");\n    }\n\n    console.log(assignment);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"edit\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditAssignment, \"Ry+j1MQb5mjfkR4B7Pa5mWuh98I=\", false, function () {\n  return [useParams, useHistory, useToast];\n});\n\n_c = EditAssignment;\nexport default EditAssignment;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAssignment\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/quiz maker client/src/pages/admin/assigment/EditAssignment.js"],"names":["React","useContext","useEffect","useState","useHistory","useParams","QuizEditContext","AdminContext","UserService","forwardRef","useToast","EditAssignment","getQuizDetail","quiz","isLoading","setLoading","id","email","setEmail","err","setErr","assignment","setAssignment","quizId","emails","startDate","Date","history","data","location","state","toast","ExampleCustomInput","value","onClick","ref","assignToUsers","finishDate","title","console","log","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAAQC,UAAR,EAAoBC,SAApB,QAAoC,kBAApC;AACA,SAAQC,eAAR,QAA8B,qCAA9B;AACA,SAAQC,YAAR,QAA2B,yCAA3B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAAQC,UAAR,EAAoBC,QAApB,QAAmC,kBAAnC;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM;AAACC,IAAAA,aAAD;AAAgBC,IAAAA;AAAhB,MAAwBZ,UAAU,CAACK,eAAD,CAAxC;AACA,QAAM;AAACQ,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAA0Bd,UAAU,CAACM,YAAD,CAA1C;AACA,QAAM;AAACS,IAAAA;AAAD,MAAOX,SAAS,EAAtB;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,GAAD,EAAMC,MAAN,IAAgBjB,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACkB,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC;AACzCoB,IAAAA,MAAM,EAAEP,EADiC;AAEzCQ,IAAAA,MAAM,EAAE,EAFiC;AAGzCC,IAAAA,SAAS,EAAE,IAAIC,IAAJ;AAH8B,GAAD,CAA5C;AAMA,QAAMC,OAAO,GAAGvB,UAAU,EAA1B;AACAF,EAAAA,SAAS,CAAC,YAAY;AAAA;;AAClB,UAAM0B,IAAI,4BAAGD,OAAO,CAACE,QAAR,CAAiBC,KAApB,0DAAG,sBAAwBF,IAArC;AACA,UAAMhB,aAAa,CAACgB,IAAI,CAACZ,EAAN,CAAnB,CAFkB,CAGlB;AACH,GAJQ,EAIN,EAJM,CAAT;AAKA,QAAMe,KAAK,GAAGrB,QAAQ,EAAtB;AACA,QAAMsB,kBAAkB,GAAGvB,UAAU,CAAC,CAAC;AAACwB,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAD,EAAmBC,GAAnB,kBAClC;AAAQ,IAAA,SAAS,EAAC,sBAAlB;AAAyC,IAAA,OAAO,EAAED,OAAlD;AAA2D,IAAA,GAAG,EAAEC,GAAhE;AAAA,cACKF;AADL;AAAA;AAAA;AAAA;AAAA,UADiC,CAArC;;AAKA,QAAMG,aAAa,GAAG,YAAY;AAC9B,QAAIf,UAAU,CAACI,SAAX,IAAwB,IAAxB,IAAgCJ,UAAU,CAACgB,UAAX,IAAyB,IAAzD,IAAiEhB,UAAU,CAACiB,KAAX,IAAoB,IAAzF,EAA+F;AAC3FvB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAwB,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;;AACA,UAAI;AACA,cAAMZ,IAAI,GAAG,MAAMpB,WAAW,CAAC4B,aAAZ,CAA0Bf,UAA1B,CAAnB;AACAkB,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,OAHD,CAGE,OAAOC,CAAP,EAAU;AACRF,QAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDC,CAAhD;AACH,OALD,SAKU;AACN1B,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,KAXD,MAWK;AACDgB,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACH;;AACDQ,IAAAA,OAAO,CAACC,GAAR,CAAYnB,UAAZ;AACH,GAhBD;;AAiBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA9CD;;GAAMV,c;UAGWN,S,EASGD,U,EAMFM,Q;;;KAlBZC,c;AAgDN,eAAeA,cAAf","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {QuizEditContext} from \"../../../providers/QuizEditProvider\";\r\nimport {AdminContext} from \"../../../providers/AdminSettingProvider\";\r\nimport UserService from \"../../../service/UserService\";\r\nimport {forwardRef, useToast} from \"@chakra-ui/react\";\r\n\r\nconst EditAssignment = () => {\r\n    const {getQuizDetail, quiz} = useContext(QuizEditContext);\r\n    const {isLoading, setLoading} = useContext(AdminContext);\r\n    const {id} = useParams();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [err, setErr] = useState('');\r\n    const [assignment, setAssignment] = useState({\r\n        quizId: id,\r\n        emails: [],\r\n        startDate: new Date(),\r\n\r\n    })\r\n    const history = useHistory();\r\n    useEffect(async () => {\r\n        const data = history.location.state?.data\r\n        await getQuizDetail(data.id);\r\n        // const resp = await UserService.getAssignmentReport(id);\r\n    }, []);\r\n    const toast = useToast();\r\n    const ExampleCustomInput = forwardRef(({value, onClick}, ref) => (\r\n        <button className=\"example-custom-input\" onClick={onClick} ref={ref}>\r\n            {value}\r\n        </button>\r\n    ));\r\n    const assignToUsers = async () => {\r\n        if (assignment.startDate != null && assignment.finishDate != null && assignment.title != null) {\r\n            setLoading(true);\r\n            console.log('assigning....')\r\n            try {\r\n                const data = await UserService.assignToUsers(assignment);\r\n                console.log(\"assign success\")\r\n            } catch (e) {\r\n                console.log(\"Could not assign quiz to users! \", e)\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }else{\r\n            toast(\"Please select finish date!\")\r\n        }\r\n        console.log(assignment)\r\n    }\r\n    return (\r\n        <div>\r\n            edit\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditAssignment;"]},"metadata":{},"sourceType":"module"}