{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\components\\\\admin\\\\setting\\\\SettingPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { Avatar, Box, Button, Divider, Flex, FormControl, FormHelperText, FormLabel, Heading, HStack, Icon, Input, Select, Text, VStack } from \"@chakra-ui/react\";\nimport { MdAccountCircle } from \"react-icons/all\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nimport { EditIcon } from \"@chakra-ui/icons\";\nimport UserService from \"../../../service/UserService\";\nimport AppService from \"../../../service/AppService\";\nimport QuizService from \"../../../service/QuizService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SettingPage = () => {\n  _s();\n\n  const {\n    user,\n    setUser\n  } = useAuth();\n  const [image, setImage] = useState(null);\n  const [err, setErr] = useState('');\n\n  const handleEditAvt = async e => {\n    const file = e.target.files[0];\n    const fileType = file['type'];\n    console.log(fileType);\n\n    if (fileType === \"image/jpeg\" || fileType === \"image/png\") {\n      setImage(file);\n      console.log(\"Updating avt...\");\n\n      try {\n        const resp = await UserService.updateAvt(file);\n        console.log(resp.data.avt);\n      } catch (e) {\n        console.log(\"Update avt failed: \", e.response.data.message);\n      }\n    } else {\n      alert(\"Please select image file types: jpeg or png\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    w: '100%',\n    bg: 'gray.100',\n    justifyContent: 'center',\n    direction: 'column',\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mb: 5,\n      bg: 'white',\n      p: 8,\n      align: 'start',\n      w: '630px',\n      children: /*#__PURE__*/_jsxDEV(HStack, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          position: 'relative',\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: AppService.getImage(user.avt),\n            size: 'xl',\n            name: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n            htmlFor: 'avtPicker',\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              position: 'absolute',\n              bottom: 0,\n              right: 0,\n              as: EditIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => handleEditAvt(e),\n              id: 'avtPicker',\n              display: 'none',\n              type: 'file'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          align: 'start',\n          px: '5',\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: '22px',\n            fontWeight: 'medium',\n            children: user.username || ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"15px\",\n            children: [\" \", user.fullName || '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      p: 8,\n      bg: 'white',\n      align: 'start',\n      minH: '1000px',\n      w: '630px',\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        align: 'start',\n        spacing: 10,\n        align: 'start',\n        w: '100%',\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          fontSize: 25,\n          children: \"Setting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          align: 'start',\n          w: '100%',\n          children: [/*#__PURE__*/_jsxDEV(HStack, {\n            children: [/*#__PURE__*/_jsxDEV(MdAccountCircle, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              fontWeight: 'medium',\n              fontSize: 18,\n              children: \"Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            w: '100%',\n            colorScheme: 'teal'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          w: '100%',\n          spacing: 5,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              color: 'gray.700',\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              isDisabled: true,\n              value: user.email,\n              focusBorderColor: 'teal',\n              colorScheme: 'teal',\n              borderColor: 'teal',\n              type: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"username\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              color: 'gray.700',\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onBlur: async () => {\n                try {\n                  await UserService.validateInput(\"username\", user.username);\n                } catch (e) {\n                  setErr(e.response.data.message);\n                }\n              },\n              onChange: e => {\n                setUser(prev => ({ ...prev,\n                  username: e.target.value\n                }));\n              },\n              value: user.username,\n              focusBorderColor: 'teal',\n              type: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"fullName\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              color: 'gray.700',\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => {\n                setUser(prev => ({ ...prev,\n                  fullName: e.target.value\n                }));\n              },\n              value: user.fullName || '',\n              focusBorderColor: 'teal'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"phone\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              color: 'gray.700',\n              children: \"Phone Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => {\n                setUser(prev => ({ ...prev,\n                  phone: e.target.value\n                }));\n              },\n              value: user.phone || '',\n              focusBorderColor: 'teal'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"school\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"School\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: \"Select school\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Nong Lam University\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"UTE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"UTH\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            w: '100%',\n            colorScheme: 'teal',\n            children: \"Save Change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SettingPage, \"mWiEzZl2RxXglzP7BL2yOeouqC0=\", false, function () {\n  return [useAuth];\n});\n\n_c = SettingPage;\nexport default SettingPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingPage\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/components/admin/setting/SettingPage.js"],"names":["React","Component","useState","Avatar","Box","Button","Divider","Flex","FormControl","FormHelperText","FormLabel","Heading","HStack","Icon","Input","Select","Text","VStack","MdAccountCircle","useAuth","EditIcon","UserService","AppService","QuizService","SettingPage","user","setUser","image","setImage","err","setErr","handleEditAvt","e","file","target","files","fileType","console","log","resp","updateAvt","data","avt","response","message","alert","getImage","username","fullName","email","validateInput","prev","value","phone"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\r\nimport {\r\n    Avatar,\r\n    Box, Button,\r\n    Divider,\r\n    Flex,\r\n    FormControl,\r\n    FormHelperText,\r\n    FormLabel,\r\n    Heading,\r\n    HStack, Icon,\r\n    Input, Select,\r\n    Text,\r\n    VStack\r\n} from \"@chakra-ui/react\";\r\nimport {MdAccountCircle} from \"react-icons/all\";\r\nimport {useAuth} from \"../../../hooks/useAuth\";\r\nimport {EditIcon} from \"@chakra-ui/icons\";\r\nimport UserService from \"../../../service/UserService\";\r\nimport AppService from \"../../../service/AppService\";\r\nimport QuizService from \"../../../service/QuizService\";\r\n\r\nconst SettingPage = () => {\r\n\r\n    const {user, setUser} = useAuth();\r\n    const [image, setImage] = useState(null);\r\n    const [err, setErr] = useState('');\r\n    const handleEditAvt = async (e) => {\r\n        const file = e.target.files[0];\r\n\r\n        const fileType = file['type'];\r\n\r\n        console.log(fileType)\r\n        if (fileType === \"image/jpeg\" || fileType === \"image/png\") {\r\n            setImage(file);\r\n\r\n            console.log(\"Updating avt...\")\r\n            try {\r\n                const resp = await UserService.updateAvt(file);\r\n                console.log(resp.data.avt);\r\n            } catch (e) {\r\n                console.log(\"Update avt failed: \", e.response.data.message);\r\n            }\r\n\r\n        } else {\r\n            alert(\"Please select image file types: jpeg or png\")\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n\r\n        <Flex w={'100%'} bg={'gray.100'} justifyContent={'center'} direction={'column'}>\r\n            <Box mb={5} bg={'white'} p={8} align={'start'} w={'630px'}>\r\n                <HStack>\r\n                    <Box position={'relative'}>\r\n                        {/*<Avatar src={(AppService.getImage(user.avt) || image && URL.createObjectURL(image))} size={'xl'}*/}\r\n                        {/*        name={user.username}/>*/}\r\n\r\n                        <Avatar\r\n                            src={AppService.getImage(user.avt)}\r\n                            size={'xl'}\r\n                            name={user.username}\r\n                        />\r\n\r\n                        <FormLabel htmlFor={'avtPicker'}>\r\n                            <Icon\r\n                                position={'absolute'}\r\n                                bottom={0}\r\n                                right={0}\r\n                                as={EditIcon}/>\r\n                            <Input onChange={(e) => handleEditAvt(e)}\r\n                                   id={'avtPicker'} display={'none'} type={'file'}/>\r\n                        </FormLabel>\r\n\r\n                    </Box>\r\n                    <VStack align={'start'} px={'5'}>\r\n                        <Text fontSize={'22px'} fontWeight={'medium'}>{user.username || ''}</Text>\r\n                        <Text fontSize='15px'> {user.fullName || ''}</Text>\r\n                    </VStack>\r\n                </HStack>\r\n            </Box>\r\n            <Box p={8} bg={'white'} align={'start'} minH={'1000px'} w={'630px'}>\r\n\r\n                <VStack align={'start'} spacing={10} align={'start'} w={'100%'}>\r\n                    <Heading fontSize={25}>Setting</Heading>\r\n\r\n                    <VStack align={'start'} w={'100%'}>\r\n                        <HStack>\r\n                            <MdAccountCircle size={20}/>\r\n                            <Text fontWeight={'medium'} fontSize={18}>Account</Text>\r\n                        </HStack>\r\n                        <Divider w={'100%'} colorScheme={'teal'}/>\r\n                    </VStack>\r\n                    <VStack w={'100%'} spacing={5}>\r\n\r\n                        <FormControl id=\"email\">\r\n                            <FormLabel color={'gray.700'}>Email address</FormLabel>\r\n                            <Input\r\n                                isDisabled\r\n                                value={user.email}\r\n                                focusBorderColor={'teal'} colorScheme={'teal'} borderColor={'teal'} type=\"email\"/>\r\n                            {/*<FormHelperText>We'll never share your email.</FormHelperText>*/}\r\n                        </FormControl>\r\n\r\n                        <FormControl id=\"username\">\r\n                            <FormLabel color={'gray.700'}>Username</FormLabel>\r\n                            <Input\r\n                                onBlur={async () => {\r\n                                    try {\r\n                                        await UserService.validateInput(\"username\", user.username);\r\n                                    } catch (e) {\r\n                                        setErr(e.response.data.message)\r\n                                    }\r\n                                }}\r\n                                onChange={(e) => {\r\n                                    setUser((prev) => ({\r\n                                        ...prev,\r\n                                        username: e.target.value\r\n                                    }))\r\n                                }}\r\n                                value={user.username}\r\n                                focusBorderColor={'teal'} type=\"username\"/>\r\n                            {/*<FormHelperText>We'll never share your email.</FormHelperText>*/}\r\n                        </FormControl>\r\n\r\n                        <FormControl id=\"fullName\">\r\n                            <FormLabel color={'gray.700'}>Full Name</FormLabel>\r\n                            <Input\r\n                                onChange={(e) => {\r\n                                    setUser((prev) => ({\r\n                                        ...prev,\r\n                                        fullName: e.target.value\r\n                                    }))\r\n                                }}\r\n                                value={user.fullName || ''}\r\n                                focusBorderColor={'teal'}/>\r\n                            {/*<FormHelperText>We'll never share your email.</FormHelperText>*/}\r\n                        </FormControl>\r\n\r\n                        <FormControl id=\"phone\">\r\n                            <FormLabel color={'gray.700'}>Phone Number</FormLabel>\r\n                            <Input\r\n                                onChange={(e) => {\r\n                                    setUser((prev) => ({\r\n                                        ...prev,\r\n                                        phone: e.target.value\r\n                                    }))\r\n                                }}\r\n                                value={user.phone || ''}\r\n                                focusBorderColor={'teal'}/>\r\n                            {/*<FormHelperText>We'll never share your email.</FormHelperText>*/}\r\n                        </FormControl>\r\n\r\n\r\n                        <FormControl id=\"school\">\r\n                            <FormLabel>School</FormLabel>\r\n                            <Select placeholder=\"Select school\">\r\n                                <option>Nong Lam University</option>\r\n                                <option>UTE</option>\r\n                                <option>UTH</option>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <Button w={'100%'} colorScheme={'teal'}>\r\n                            Save Change\r\n                        </Button>\r\n                    </VStack>\r\n                </VStack>\r\n            </Box>\r\n\r\n        </Flex>\r\n    );\r\n};\r\n\r\nexport default SettingPage;"]},"metadata":{},"sourceType":"module"}