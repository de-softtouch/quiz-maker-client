{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\quiz maker client\\\\src\\\\pages\\\\admin\\\\assigment\\\\AssignmentReport.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AdminContext } from \"../../../providers/AdminSettingProvider\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport UserService from \"../../../service/UserService\";\nimport { Box, Button, Flex, HStack, Text, VStack } from \"@chakra-ui/react\";\nimport { EditIcon } from \"@chakra-ui/icons\";\nimport { GrGroup } from \"react-icons/all\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AssignmentReport = () => {\n  _s();\n\n  const {\n    isLoading,\n    setLoading\n  } = useContext(AdminContext);\n  const [report, setReport] = useState(null);\n  const [isOpen, setOpen] = useState(false);\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    getReport();\n  }, []);\n\n  const getReport = async () => {\n    // setLoading(true);\n    // try {\n    //     const resp = await UserService.getAssignmentReport(id);\n    //     setReport(resp.data)\n    //     console.log(resp.data);\n    //\n    // } catch (e) {\n    //\n    // } finally {\n    //     setLoading(false);\n    // }\n    setOpen(true);\n  };\n\n  const showUsers = async () => {\n    try {\n      const resp = await UserService.getAssignedUsers(id);\n      console.log(resp.data);\n    } catch (e) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      direction: 'column',\n      children: [/*#__PURE__*/_jsxDEV(HStack, {\n        align: 'end',\n        w: '100%',\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            history.push(`/admin/quiz/assigment/quizzes/${id}`, {\n              data: report.assignmentInfo.quiz\n            });\n          },\n          align: 'end',\n          rightIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 50\n          }, this),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VStack, {\n        bg: 'white',\n        p: '5',\n        align: 'start',\n        children: [\" \", /*#__PURE__*/_jsxDEV(HStack, {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: report && report.assignmentInfo.quiz.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 63\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          align: 'start',\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: report && report.assignmentInfo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: report && report.assignmentInfo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        align: 'end',\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: showUsers,\n          rightIcon: /*#__PURE__*/_jsxDEV(GrGroup, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 36\n          }, this),\n          children: [\"Participant (\", report && report.users && report.users.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        height: '5vh'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: 'medium',\n          fontSize: '25px',\n          children: \"Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), !isLoading && report && /*#__PURE__*/_jsxDEV(HStack, {\n        children: /*#__PURE__*/_jsxDEV(VStack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this), report && report.users.map(user => /*#__PURE__*/_jsxDEV(VStack, {\n        bg: 'white',\n        p: '5',\n        align: 'start',\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [\" Username : \", user.userInfo.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Score : \", user.score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Questions :\", user.completeCount, '/', \" \", report.assignmentInfo.quiz.numOfQuestions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), isOpen && report && /*#__PURE__*/_jsxDEV(AssignmentReport, {\n      isOpen: isOpen,\n      setOpen: setOpen,\n      users: report.users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AssignmentReport, \"f7ocsUd+t+hkfb/PVuVWVrKSXt4=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = AssignmentReport;\nexport default AssignmentReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignmentReport\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/quiz maker client/src/pages/admin/assigment/AssignmentReport.js"],"names":["React","useContext","useEffect","useState","AdminContext","useHistory","useParams","UserService","Box","Button","Flex","HStack","Text","VStack","EditIcon","GrGroup","AssignmentReport","isLoading","setLoading","report","setReport","isOpen","setOpen","id","history","getReport","showUsers","resp","getAssignedUsers","console","log","data","e","push","assignmentInfo","quiz","title","description","users","length","map","user","userInfo","username","score","completeCount","numOfQuestions"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {AdminContext} from \"../../../providers/AdminSettingProvider\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport UserService from \"../../../service/UserService\";\r\nimport {Box, Button, Flex, HStack, Text, VStack} from \"@chakra-ui/react\";\r\nimport {EditIcon} from \"@chakra-ui/icons\";\r\nimport {GrGroup} from \"react-icons/all\";\r\n\r\nconst AssignmentReport = () => {\r\n    const {isLoading, setLoading} = useContext(AdminContext);\r\n    const [report, setReport] = useState(null);\r\n    const [isOpen, setOpen] = useState(false);\r\n    const {id} = useParams();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        getReport();\r\n    }, []);\r\n    const getReport = async () => {\r\n        // setLoading(true);\r\n        // try {\r\n        //     const resp = await UserService.getAssignmentReport(id);\r\n        //     setReport(resp.data)\r\n        //     console.log(resp.data);\r\n        //\r\n        // } catch (e) {\r\n        //\r\n        // } finally {\r\n        //     setLoading(false);\r\n        // }\r\n        setOpen(true);\r\n    }\r\n\r\n    const showUsers = async () => {\r\n        try {\r\n            const resp = await UserService.getAssignedUsers(id);\r\n            console.log(resp.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Flex direction={'column'}>\r\n                <HStack align={'end'} w={'100%'}>\r\n                    <Button\r\n\r\n                        onClick={() => {\r\n                            history.push(`/admin/quiz/assigment/quizzes/${id}`, {\r\n                                data: report.assignmentInfo.quiz\r\n                            })\r\n                        }}\r\n                        align={'end'} rightIcon={<EditIcon/>}>Edit</Button>\r\n                </HStack>\r\n\r\n                <VStack bg={'white'} p={'5'} align={'start'}> <HStack>\r\n                    <Text>{report && report.assignmentInfo.quiz.title}</Text>\r\n                </HStack>\r\n                    <VStack align={'start'}>\r\n                        <Text>{report && report.assignmentInfo.title}</Text>\r\n                        <Text>{report && report.assignmentInfo.description}</Text>\r\n                    </VStack>\r\n                </VStack>\r\n                <HStack align={'end'}>\r\n                    <Button\r\n                        onClick={showUsers}\r\n                        rightIcon={<GrGroup/>}>Participant\r\n                        ({report && report.users && report.users.length})</Button>\r\n                </HStack>\r\n                <Box height={'5vh'}/>\r\n                <HStack> <Text fontWeight={'medium'} fontSize={'25px'}>Result</Text></HStack>\r\n                {\r\n                    !isLoading && report && (\r\n                        <HStack>\r\n                            <VStack>\r\n\r\n                            </VStack>\r\n                        </HStack>\r\n                    )\r\n                }\r\n                {report && report.users.map((user) => (\r\n                    <VStack bg={'white'} p={'5'} align={'start'}>\r\n                        <Text> Username : {user.userInfo.username}</Text>\r\n                        <Text>Score : {user.score}</Text>\r\n                        <Text>Questions :{user.completeCount}{'/'} {report.assignmentInfo.quiz.numOfQuestions}</Text>\r\n                    </VStack>\r\n\r\n                ))}\r\n            </Flex>\r\n            {isOpen && report && <AssignmentReport isOpen={isOpen} setOpen={setOpen} users={report.users}/>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AssignmentReport;"]},"metadata":{},"sourceType":"module"}