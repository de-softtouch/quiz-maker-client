{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\pages\\\\public\\\\register\\\\VerificationPage.js\",\n    _s = $RefreshSig$();\n\nimport { Button, FormControl, Flex, Heading, Input, Stack, Text, useColorModeValue, FormErrorMessage } from '@chakra-ui/react';\nimport { useAuth } from \"../../../hooks/useAuth\";\nimport axiosClient from \"../../../api/axiosClient\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VerificationPage() {\n  _s();\n\n  const [code, setCode] = useState('');\n  const [err, setErr] = useState('');\n  const {\n    getUserDetails\n  } = useAuth();\n\n  const verification = async () => {\n    const url = `${process.env.REACT_APP_BASE_URL}+\"/auth/verification`;\n\n    try {\n      const resp = await axiosClient.get(url, {\n        headers: {\n          \"code\": code\n        }\n      });\n      console.log(resp.data);\n    } catch (e) {\n      console.log(e.response.data.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    minH: '100vh',\n    align: 'center',\n    justify: 'center',\n    bg: useColorModeValue('gray.50', 'gray.800'),\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 4,\n      w: 'full',\n      maxW: 'md',\n      bg: useColorModeValue('white', 'gray.700'),\n      rounded: 'xl',\n      boxShadow: 'lg',\n      p: 6,\n      my: 12,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        lineHeight: 1.1,\n        fontSize: {\n          base: '2xl',\n          md: '3xl'\n        },\n        children: \"Forgot your password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: {\n          base: 'sm',\n          sm: 'md'\n        },\n        color: useColorModeValue('gray.800', 'gray.400'),\n        children: \"You'll get an email with a reset link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        id: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          isInvalid: err,\n          errorBorderColor: 'red',\n          value: code,\n          onChange: e => setCode(e.target.value),\n          placeholder: \"your-email@example.com\",\n          _placeholder: {\n            color: 'gray.500'\n          },\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), err && /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n          children: err\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 6,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => verification(),\n          bg: 'blue.400',\n          color: 'white',\n          _hover: {\n            bg: 'blue.500'\n          },\n          children: \"Request Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(VerificationPage, \"6TT98HTdq3n81NgZBjeUrsz8/L0=\", false, function () {\n  return [useAuth, useColorModeValue, useColorModeValue, useColorModeValue];\n});\n\n_c = VerificationPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerificationPage\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/pages/public/register/VerificationPage.js"],"names":["Button","FormControl","Flex","Heading","Input","Stack","Text","useColorModeValue","FormErrorMessage","useAuth","axiosClient","useState","VerificationPage","code","setCode","err","setErr","getUserDetails","verification","url","process","env","REACT_APP_BASE_URL","resp","get","headers","console","log","data","e","response","message","base","md","sm","target","value","color","bg"],"mappings":"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","sourcesContent":["import {\r\n    Button,\r\n    FormControl,\r\n    Flex,\r\n    Heading,\r\n    Input,\r\n    Stack,\r\n    Text,\r\n    useColorModeValue, FormErrorMessage,\r\n} from '@chakra-ui/react';\r\nimport {useAuth} from \"../../../hooks/useAuth\";\r\nimport axiosClient from \"../../../api/axiosClient\";\r\nimport {useState} from \"react\";\r\n\r\n\r\nexport default function VerificationPage() {\r\n    const [code, setCode] = useState('');\r\n    const [err, setErr] = useState('');\r\n    const {getUserDetails} = useAuth();\r\n\r\n    const verification = async () => {\r\n        const url = `${process.env.REACT_APP_BASE_URL}+\"/auth/verification`;\r\n        try {\r\n            const resp = await axiosClient.get(url, {\r\n                headers: {\r\n                    \"code\": code\r\n                }\r\n            });\r\n            console.log(resp.data);\r\n        } catch (e) {\r\n            console.log(e.response.data.message);\r\n        }\r\n    }\r\n    return (\r\n        <Flex\r\n            minH={'100vh'}\r\n            align={'center'}\r\n            justify={'center'}\r\n            bg={useColorModeValue('gray.50', 'gray.800')}>\r\n            <Stack\r\n                spacing={4}\r\n                w={'full'}\r\n                maxW={'md'}\r\n                bg={useColorModeValue('white', 'gray.700')}\r\n                rounded={'xl'}\r\n                boxShadow={'lg'}\r\n                p={6}\r\n                my={12}>\r\n                <Heading lineHeight={1.1} fontSize={{base: '2xl', md: '3xl'}}>\r\n                    Forgot your password?\r\n                </Heading>\r\n                <Text\r\n                    fontSize={{base: 'sm', sm: 'md'}}\r\n                    color={useColorModeValue('gray.800', 'gray.400')}>\r\n                    You&apos;ll get an email with a reset link\r\n                </Text>\r\n                <FormControl id=\"email\">\r\n                    <Input\r\n                        isInvalid={err}\r\n                        errorBorderColor={'red'}\r\n                        value={code}\r\n                        onChange={(e) => setCode(e.target.value)}\r\n                        placeholder=\"your-email@example.com\"\r\n                        _placeholder={{color: 'gray.500'}}\r\n                        type=\"email\"\r\n                    />\r\n                    {err && <FormErrorMessage>{err}</FormErrorMessage>}\r\n                </FormControl>\r\n                <Stack spacing={6}>\r\n                    <Button\r\n                        onClick={() => verification()}\r\n                        bg={'blue.400'}\r\n                        color={'white'}\r\n                        _hover={{\r\n                            bg: 'blue.500',\r\n                        }}>\r\n                        Request Reset\r\n                    </Button>\r\n                </Stack>\r\n            </Stack>\r\n        </Flex>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}