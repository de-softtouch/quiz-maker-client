{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\components\\\\login\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport { Flex, Box, FormControl, FormLabel, Input, Checkbox, Stack, Link, Button, Heading, Text, useColorModeValue, FormHelperText } from \"@chakra-ui/react\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { Link as RRLink } from 'react-router-dom';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n\n  const {\n    isAuthenticated,\n    setAuthenticated,\n    login\n  } = useAuth();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [remember, setRemember] = useState(false);\n  const [error, setError] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    minH: \"100vh\",\n    align: \"center\",\n    justify: \"center\",\n    bg: useColorModeValue(\"gray.50\", \"gray.800\"),\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 8,\n      mx: \"auto\",\n      maxW: \"lg\",\n      py: 12,\n      px: 6,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          fontSize: \"4xl\",\n          children: \"Sign in to your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"lg\",\n          color: \"gray.600\",\n          children: [\"to enjoy all of our cool\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            color: \"blue.400\",\n            children: \"features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), \" \\u270C\\uFE0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        rounded: \"lg\",\n        bg: useColorModeValue(\"white\", \"gray.700\"),\n        boxShadow: \"lg\",\n        p: 8,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              isInvalid: error,\n              errorBorderColor: \"crimson\",\n              onChange: e => {\n                setError(false);\n                setUsername(e.target.value);\n              },\n              type: \"email|text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), error && /*#__PURE__*/_jsxDEV(FormHelperText, {\n              color: 'crimson',\n              children: \"Username or password is not correct!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => setPassword(e.target.value),\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            spacing: 10,\n            children: [/*#__PURE__*/_jsxDEV(Stack, {\n              direction: {\n                base: \"column\",\n                sm: \"row\"\n              },\n              align: \"start\",\n              justify: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                onChange: e => {},\n                children: \"Remember me\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                color: \"blue.400\",\n                children: \"Forgot password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: username.length === 0 || password.length === 0,\n              bg: \"blue.400\",\n              color: \"white\",\n              _hover: {\n                bg: \"blue.500\"\n              },\n              onClick: async e => {\n                e.preventDefault();\n                let s = await login(username, password);\n\n                if (s) {\n                  console.log(\"LoginPage success\");\n                } else {\n                  setError(true);\n                  setPassword('');\n                }\n              },\n              children: \"Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPage, \"Y1s2P5FgAFTw0WkVQl4ODezIxLw=\", false, function () {\n  return [useAuth, useColorModeValue, useColorModeValue];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/components/login/LoginPage.js"],"names":["Flex","Box","FormControl","FormLabel","Input","Checkbox","Stack","Link","Button","Heading","Text","useColorModeValue","FormHelperText","useAuth","RRLink","useState","LoginPage","isAuthenticated","setAuthenticated","login","username","setUsername","password","setPassword","remember","setRemember","error","setError","e","target","value","base","sm","length","bg","preventDefault","s","console","log"],"mappings":"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","sourcesContent":["import {\r\n    Flex,\r\n    Box,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Checkbox,\r\n    Stack,\r\n    Link,\r\n    Button,\r\n    Heading,\r\n    Text,\r\n    useColorModeValue, FormHelperText,\r\n} from \"@chakra-ui/react\";\r\nimport {useAuth} from \"../../hooks/useAuth\";\r\nimport {Link as RRLink} from 'react-router-dom';\r\nimport {useState} from \"react\";\r\n\r\nexport default function LoginPage() {\r\n    const {isAuthenticated, setAuthenticated, login} = useAuth();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [remember, setRemember] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    return (\r\n        <Flex\r\n            minH={\"100vh\"}\r\n            align={\"center\"}\r\n            justify={\"center\"}\r\n            bg={useColorModeValue(\"gray.50\", \"gray.800\")}\r\n        >\r\n            <Stack spacing={8} mx={\"auto\"} maxW={\"lg\"} py={12} px={6}>\r\n                <Stack align={\"center\"}>\r\n                    <Heading fontSize={\"4xl\"}>Sign in to your account</Heading>\r\n                    <Text fontSize={\"lg\"} color={\"gray.600\"}>\r\n                        to enjoy all of our cool{\" \"}\r\n                        <Link color={\"blue.400\"}>features</Link> ✌️\r\n                    </Text>\r\n                </Stack>\r\n                <Box\r\n                    rounded={\"lg\"}\r\n                    bg={useColorModeValue(\"white\", \"gray.700\")}\r\n                    boxShadow={\"lg\"}\r\n                    p={8}\r\n                >\r\n                    {/*Form*/}\r\n                    <Stack spacing={4}>\r\n                        {/*Email*/}\r\n                        <FormControl id=\"email\">\r\n                            <FormLabel>Email address</FormLabel>\r\n                            <Input\r\n                                isInvalid={error}\r\n                                errorBorderColor=\"crimson\"\r\n                                onChange={(e) => {\r\n                                    setError(false);\r\n                                    setUsername(e.target.value);\r\n                                }}\r\n                                type='email|text'/>\r\n                            {\r\n                                error &&\r\n                                <FormHelperText color={'crimson'}>Username or password is not correct!</FormHelperText>\r\n                            }\r\n                        </FormControl>\r\n                        {/*Password*/}\r\n                        <FormControl id=\"password\">\r\n                            <FormLabel>Password</FormLabel>\r\n                            <Input\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                type=\"password\"/>\r\n                        </FormControl>\r\n                        <Stack spacing={10}>\r\n                            <Stack\r\n                                direction={{base: \"column\", sm: \"row\"}}\r\n                                align={\"start\"}\r\n                                justify={\"space-between\"}\r\n                            >\r\n                                {/*Remember me*/}\r\n\r\n                                <Checkbox\r\n                                    onChange={(e) => {\r\n                                    }}>\r\n                                    Remember me\r\n                                </Checkbox>\r\n                                <Link color={\"blue.400\"}>Forgot password?</Link>\r\n                            </Stack>\r\n                            <Button\r\n                                disabled={\r\n                                    (username.length === 0 || password.length === 0)\r\n                                }\r\n                                bg={\"blue.400\"}\r\n                                color={\"white\"}\r\n                                _hover={{\r\n                                    bg: \"blue.500\",\r\n                                }}\r\n                                onClick={async (e) => {\r\n                                    e.preventDefault();\r\n                                    let s = await login(username, password);\r\n                                    if (s) {\r\n                                        console.log(\"LoginPage success\")\r\n                                    } else {\r\n                                        setError(true);\r\n                                        setPassword('');\r\n                                    }\r\n                                }}\r\n                            >\r\n                                Sign in\r\n                            </Button>\r\n                        </Stack>\r\n                    </Stack>\r\n                </Box>\r\n            </Stack>\r\n        </Flex>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}