{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\pages\\\\admin\\\\library\\\\LibraryPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Box, Button, Flex, Heading, HStack, IconButton, Image, ListIcon, Menu, MenuButton, MenuItem, MenuList, Text, Tooltip, useDisclosure, VStack } from \"@chakra-ui/react\";\nimport { AddIcon, ChevronDownIcon, DeleteIcon, EditIcon, TimeIcon } from \"@chakra-ui/icons\";\nimport { BiShare, BsListCheck, BsPlay, MdAssignment } from \"react-icons/all\";\nimport ShareDialog from \"../../../components/admin/setting/ShareDialog\";\nimport quizApi from \"../../../api/quizApi\";\nimport dateFormat from \"dateformat\";\nimport AssignedUsers from \"./AssignedUsers\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LibraryPage = () => {\n  _s();\n\n  const [share, setShare] = useState(false);\n  const [quizzes, setQuizzes] = useState([]);\n  const [selectedQuiz, setSelectedQuiz] = useState(null);\n  const [isOpen, setOpen] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    const getCreatedQuizzesInfo = async () => {\n      try {\n        const data = await quizApi.getCreatedQuizzesInfo();\n        setQuizzes(data);\n        console.log(data);\n      } catch (e) {\n        console.log(\"Failed to fetch created quizzes info\");\n      }\n    };\n\n    getCreatedQuizzesInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      w: '100%',\n      bg: 'gray.100',\n      direction: 'column',\n      children: [/*#__PURE__*/_jsxDEV(HStack, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: 'medium',\n          children: [quizzes && quizzes.length, \" Quizzes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), quizzes && quizzes.map((item, i) => {\n        const handleEdit = () => {\n          history.push(`/admin/quiz/${item.quizId}/edit`);\n        };\n\n        return /*#__PURE__*/_jsxDEV(Box, {\n          my: 2,\n          p: 5,\n          minW: '100',\n          bg: 'white',\n          maxW: 600,\n          position: 'relative',\n          children: [/*#__PURE__*/_jsxDEV(HStack, {\n            spacing: 5,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              boxSize: \"100px\",\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                src: \"https://cdn-icons-png.flaticon.com/512/1205/1205526.png\",\n                alt: \"Q\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(VStack, {\n              align: 'start',\n              children: [/*#__PURE__*/_jsxDEV(HStack, {\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  color: 'gray.500',\n                  fontSize: 12,\n                  children: \"Quiz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  bg: 'teal.100',\n                  px: 2,\n                  color: 'gray.500',\n                  fontSize: 12,\n                  children: \"Draft\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: 'medium',\n                fontSize: 18,\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(HStack, {\n                spacing: 4,\n                children: [/*#__PURE__*/_jsxDEV(HStack, {\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"xs\",\n                    icon: /*#__PURE__*/_jsxDEV(BsListCheck, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 79\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: 12,\n                    children: [item.numOfQuestions, \" Q\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(HStack, {\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"xs\",\n                    icon: /*#__PURE__*/_jsxDEV(TimeIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 79\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: 12,\n                    children: [item.limitTime, \" mins\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(HStack, {\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"xs\",\n                    icon: /*#__PURE__*/_jsxDEV(BsPlay, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 79\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: 12,\n                    children: \"Played 0 times\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  label: \"Created date\",\n                  children: dateFormat(item.createdDate, \"dddd, mmmm, yyyy, h:MM:ss TT\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(HStack, {\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    label: \"Start date\",\n                    children: dateFormat(item.createdDate, \"dddd, mmmm, h:MM TT\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            spacing: 5,\n            position: 'absolute',\n            top: 5,\n            right: 5,\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              size: 'sx',\n              icon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 67\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              size: 'sx',\n              icon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 67\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n                bg: 'white',\n                size: 'sm',\n                as: Button,\n                rightIcon: /*#__PURE__*/_jsxDEV(ChevronDownIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 101\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(MenuList, {\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: () => {\n                    setSelectedQuiz(item.quizId);\n                    setOpen(true);\n                  },\n                  children: \"Assigned users\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: () => setShare(true),\n                  children: \"Share\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: handleEdit,\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => {\n              setSelectedQuiz(item.quizId);\n              setShare(true);\n            },\n            position: 'absolute',\n            bottom: 10,\n            right: 5,\n            size: 'md',\n            icon: /*#__PURE__*/_jsxDEV(MdAssignment, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 99\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 33\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), share && /*#__PURE__*/_jsxDEV(ShareDialog, {\n      quizId: selectedQuiz,\n      setVisible: setShare\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 26\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(AssignedUsers, {\n      quizId: selectedQuiz,\n      isOpen: isOpen,\n      setOpen: setOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LibraryPage, \"woPrXV+7BFRTex300t8+jIMYqbY=\", false, function () {\n  return [useHistory];\n});\n\n_c = LibraryPage;\nexport default LibraryPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LibraryPage\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/pages/admin/library/LibraryPage.js"],"names":["React","useEffect","useState","Box","Button","Flex","Heading","HStack","IconButton","Image","ListIcon","Menu","MenuButton","MenuItem","MenuList","Text","Tooltip","useDisclosure","VStack","AddIcon","ChevronDownIcon","DeleteIcon","EditIcon","TimeIcon","BiShare","BsListCheck","BsPlay","MdAssignment","ShareDialog","quizApi","dateFormat","AssignedUsers","useHistory","LibraryPage","share","setShare","quizzes","setQuizzes","selectedQuiz","setSelectedQuiz","isOpen","setOpen","history","getCreatedQuizzesInfo","data","console","log","e","length","map","item","i","handleEdit","push","quizId","title","numOfQuestions","limitTime","createdDate"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {\r\n    Box, Button,\r\n    Flex,\r\n    Heading,\r\n    HStack,\r\n    IconButton,\r\n    Image,\r\n    ListIcon, Menu,\r\n    MenuButton, MenuItem, MenuList,\r\n    Text,\r\n    Tooltip, useDisclosure,\r\n    VStack\r\n} from \"@chakra-ui/react\";\r\nimport {AddIcon, ChevronDownIcon, DeleteIcon, EditIcon, TimeIcon} from \"@chakra-ui/icons\";\r\nimport {BiShare, BsListCheck, BsPlay, MdAssignment} from \"react-icons/all\";\r\nimport ShareDialog from \"../../../components/admin/setting/ShareDialog\";\r\nimport quizApi from \"../../../api/quizApi\";\r\nimport dateFormat from \"dateformat\";\r\nimport AssignedUsers from \"./AssignedUsers\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst LibraryPage = () => {\r\n    const [share, setShare] = useState(false);\r\n\r\n    const [quizzes, setQuizzes] = useState([]);\r\n\r\n    const [selectedQuiz, setSelectedQuiz] = useState(null);\r\n\r\n    const [isOpen, setOpen] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n\r\n        const getCreatedQuizzesInfo = async () => {\r\n            try {\r\n                const data = await quizApi.getCreatedQuizzesInfo();\r\n                setQuizzes(data);\r\n                console.log(data);\r\n            } catch (e) {\r\n                console.log(\"Failed to fetch created quizzes info\");\r\n            }\r\n\r\n        }\r\n        getCreatedQuizzesInfo();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Flex w={'100%'} bg={'gray.100'} direction={'column'}>\r\n                {/**/}\r\n                <HStack>\r\n                    <Text fontWeight={'medium'}>{quizzes && quizzes.length} Quizzes</Text>\r\n                </HStack>\r\n                {/*CREATED QUIZZES*/}\r\n                {\r\n                    quizzes && quizzes.map((item, i) => {\r\n                        const handleEdit = () => {\r\n                            history.push(`/admin/quiz/${item.quizId}/edit`)\r\n                        };\r\n                        return (\r\n                            <Box my={2} key={i} p={5} minW={'100'} bg={'white'} maxW={600} position={'relative'}>\r\n                                <HStack spacing={5}>\r\n                                    {/*IMAGE*/}\r\n                                    <Box boxSize=\"100px\">\r\n                                        <Image\r\n                                            src=\"https://cdn-icons-png.flaticon.com/512/1205/1205526.png\"\r\n                                            alt=\"Q\"/>\r\n                                    </Box>\r\n                                    {/*INFO*/}\r\n                                    <VStack align={'start'}>\r\n                                        {/*STATUS*/}\r\n                                        <HStack>\r\n                                            <Text color={'gray.500'} fontSize={12}>Quiz</Text>\r\n                                            <Text bg={'teal.100'} px={2} color={'gray.500'} fontSize={12}>Draft</Text>\r\n                                        </HStack>\r\n                                        {/*TITLE*/}\r\n                                        <Text fontWeight={'medium'} fontSize={18}>{item.title}</Text>\r\n                                        {/*PLAYED*/}\r\n                                        <HStack spacing={4}>\r\n                                            <HStack>\r\n                                                <IconButton size={\"xs\"} icon={<BsListCheck/>}/>\r\n                                                <Text fontSize={12}>{item.numOfQuestions} Q</Text>\r\n                                            </HStack>\r\n\r\n                                            <HStack>\r\n                                                <IconButton size={\"xs\"} icon={<TimeIcon/>}/>\r\n                                                <Text fontSize={12}>{item.limitTime} mins</Text>\r\n                                            </HStack>\r\n                                            <HStack>\r\n                                                <IconButton size={\"xs\"} icon={<BsPlay/>}/>\r\n                                                <Text fontSize={12}>Played 0 times</Text>\r\n                                            </HStack>\r\n                                        </HStack>\r\n                                        {/*CREATED DATE*/}\r\n                                        <Text>\r\n                                            <Tooltip label={\"Created date\"}>\r\n                                                {dateFormat(item.createdDate, \"dddd, mmmm, yyyy, h:MM:ss TT\")}\r\n                                            </Tooltip>\r\n                                        </Text>\r\n                                        {/*    START TIME*/}\r\n                                        <HStack>\r\n                                            <Text>\r\n                                                <Tooltip label={\"Start date\"}>\r\n                                                    {dateFormat(item.createdDate, \"dddd, mmmm, h:MM TT\")}\r\n                                                </Tooltip>\r\n                                            </Text>\r\n                                        </HStack>\r\n\r\n                                    </VStack>\r\n                                </HStack>\r\n                                <HStack spacing={5} position={'absolute'} top={5} right={5}>\r\n                                    <IconButton size={'sx'} icon={<EditIcon/>}/>\r\n                                    <IconButton size={'sx'} icon={<DeleteIcon/>}/>\r\n                                    <Menu>\r\n                                        <MenuButton bg={'white'} size={'sm'} as={Button} rightIcon={<ChevronDownIcon/>}>\r\n                                            {/*Actions*/}\r\n                                        </MenuButton>\r\n                                        <MenuList>\r\n                                            <MenuItem onClick={() => {\r\n                                                setSelectedQuiz(item.quizId);\r\n                                                setOpen(true);\r\n                                            }}>Assigned users</MenuItem>\r\n                                            <MenuItem onClick={() => setShare(true)}>Share</MenuItem>\r\n                                            <MenuItem onClick={handleEdit}>Edit</MenuItem>\r\n                                        </MenuList>\r\n                                    </Menu>\r\n                                </HStack>\r\n                                <IconButton\r\n                                    onClick={() => {\r\n                                        setSelectedQuiz(item.quizId);\r\n                                        setShare(true);\r\n                                    }}\r\n                                    position={'absolute'} bottom={10} right={5} size={'md'} icon={<MdAssignment/>}/>\r\n                            </Box>\r\n                        );\r\n                    })\r\n                }\r\n            </Flex>\r\n\r\n            {\r\n                share && <ShareDialog quizId={selectedQuiz} setVisible={setShare}/>\r\n            }\r\n            {isOpen && <AssignedUsers quizId={selectedQuiz} isOpen={isOpen} setOpen={setOpen}/>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LibraryPage;"]},"metadata":{},"sourceType":"module"}