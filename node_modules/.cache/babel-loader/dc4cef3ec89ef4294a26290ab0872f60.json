{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\components\\\\admin\\\\setting\\\\ShareDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Box, Button, CloseButton, Divider, HStack, IconButton, Input, Spacer, Tag, TagCloseButton, TagLabel, Text, useToast, VStack, Wrap, WrapItem } from \"@chakra-ui/react\";\nimport { AiOutlineUsergroupAdd, MdPublic } from \"react-icons/all\";\nimport { CopyIcon } from \"@chakra-ui/icons\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ShareDialog = ({\n  setVisible,\n  quizId\n}) => {\n  _s();\n\n  const [emails, setEmails] = useState([]);\n  const [email, setEmail] = useState('');\n  const toast = useToast();\n  useEffect(() => {\n    console.log(quizId);\n  }, []);\n\n  const onSubmit = async () => {\n    try {\n      const data = {\n        quizId: quizId,\n        emails: emails\n      };\n      let url = \"http://localhost:8080/api/v1/admin/quiz-assignment/assign-quizzes\";\n      const resp = await axios.post(url, data, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\n        }\n      });\n\n      if (resp.status === 200) {\n        toast({\n          position: \"bottom-left\",\n          duration: 2000,\n          status: \"success\",\n          render: () => /*#__PURE__*/_jsxDEV(Box, {\n            color: \"white\",\n            p: 3,\n            bg: \"blue.500\",\n            children: \"Share via emails success!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        });\n      }\n    } catch (e) {\n      console.log(\"Failed to assign quiz to student \", e);\n    } finally {\n      setVisible(false);\n    }\n  };\n\n  const [startDate, setStartDate] = useState(new Date());\n  const [finishDate, setFinishDate] = useState();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      bg: 'gray.400',\n      opacity: .8,\n      position: 'fixed',\n      top: 0,\n      minH: '100vh',\n      right: 0,\n      onClick: () => setVisible(false),\n      minW: '100vw',\n      zIndex: 900\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      p: 5,\n      w: 500,\n      bg: 'white',\n      borderRadius: 'md',\n      boxShadow: 'md',\n      transform: \"translate(50%,-50%)\",\n      position: 'fixed',\n      top: '40%',\n      right: '50%',\n      height: 'auto',\n      zIndex: 901,\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 5,\n        w: '100%',\n        children: [/*#__PURE__*/_jsxDEV(HStack, {\n          w: '100%',\n          children: [/*#__PURE__*/_jsxDEV(AiOutlineUsergroupAdd, {\n            size: '20'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: 'xl',\n            fontWeight: 'medium',\n            children: \"Invite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n            borderRadius: '100px',\n            bg: 'teal',\n            color: 'white',\n            onClick: () => setVisible(false),\n            size: 'md'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n          w: '100%',\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: startDate,\n            onChange: date => setStartDate(date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          w: '100%',\n          align: 'start',\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: 'medium',\n            color: 'gray.600',\n            children: \"Share public link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            w: '100%',\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              size: 'sm'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              icon: /*#__PURE__*/_jsxDEV(CopyIcon, {\n                size: 30\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          w: '100%',\n          align: 'start',\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: 'medium',\n            color: 'gray.600',\n            children: \"Share using emails\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Wrap, {\n            w: '100%',\n            children: emails.map(email => /*#__PURE__*/_jsxDEV(WrapItem, {\n              children: /*#__PURE__*/_jsxDEV(Tag, {\n                size: 'sm',\n                borderRadius: \"full\",\n                variant: \"solid\",\n                colorScheme: \"green\",\n                children: [/*#__PURE__*/_jsxDEV(TagLabel, {\n                  children: email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TagCloseButton, {\n                  onClick: () => {\n                    let filteredEmail = emails.filter(e => e != email);\n                    setEmails(filteredEmail);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 41\n              }, this)\n            }, email, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            w: '100%',\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              size: 'sm',\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              placeholder: 'Email to share. Ex: test@gmail.com'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setEmail('');\n\n                if (!emails.includes(email)) {\n                  setEmails(prevState => [...prevState, email]);\n                }\n              },\n              isDisabled: email.length === 0,\n              size: 'sm',\n              colorScheme: 'purple',\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            w: '100%',\n            py: 5,\n            justifyContent: 'end',\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onSubmit,\n              colorScheme: 'teal',\n              children: \"Share invite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ShareDialog, \"TpBYz0/mv96lTY52pK3Eg9XOpnY=\", false, function () {\n  return [useToast];\n});\n\n_c = ShareDialog;\nexport default ShareDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShareDialog\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/components/admin/setting/ShareDialog.js"],"names":["React","useEffect","useState","Box","Button","CloseButton","Divider","HStack","IconButton","Input","Spacer","Tag","TagCloseButton","TagLabel","Text","useToast","VStack","Wrap","WrapItem","AiOutlineUsergroupAdd","MdPublic","CopyIcon","axios","DatePicker","ShareDialog","setVisible","quizId","emails","setEmails","email","setEmail","toast","console","log","onSubmit","data","url","resp","post","headers","localStorage","getItem","status","position","duration","render","e","startDate","setStartDate","Date","finishDate","setFinishDate","date","map","filteredEmail","filter","target","value","includes","prevState","length"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    CloseButton,\r\n    Divider,\r\n    HStack, IconButton,\r\n    Input,\r\n    Spacer,\r\n    Tag, TagCloseButton, TagLabel,\r\n    Text, useToast,\r\n    VStack,\r\n    Wrap,\r\n    WrapItem\r\n} from \"@chakra-ui/react\";\r\nimport {AiOutlineUsergroupAdd, MdPublic} from \"react-icons/all\";\r\nimport {CopyIcon} from \"@chakra-ui/icons\";\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\n\r\nconst ShareDialog = ({setVisible, quizId}) => {\r\n\r\n    const [emails, setEmails] = useState([]);\r\n    const [email, setEmail] = useState('');\r\n    const toast = useToast();\r\n    useEffect(() => {\r\n        console.log(quizId);\r\n    }, [])\r\n    const onSubmit = async () => {\r\n        try {\r\n            const data = {\r\n                quizId: quizId,\r\n                emails: emails,\r\n            }\r\n            let url = \"http://localhost:8080/api/v1/admin/quiz-assignment/assign-quizzes\";\r\n            const resp = await axios.post(url, data,\r\n                {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\r\n                    }\r\n                })\r\n            if (resp.status === 200) {\r\n                toast({\r\n                    position: \"bottom-left\",\r\n                    duration: 2000,\r\n                    status: \"success\",\r\n                    render: () => (\r\n                        <Box color=\"white\" p={3} bg=\"blue.500\">\r\n                            Share via emails success!\r\n                        </Box>\r\n                    ),\r\n                })\r\n            }\r\n        } catch (e) {\r\n            console.log(\"Failed to assign quiz to student \", e);\r\n        } finally {\r\n            setVisible(false);\r\n        }\r\n    }\r\n\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [finishDate, setFinishDate] = useState();\r\n\r\n    return (\r\n        <>\r\n            <Box bg={'gray.400'}\r\n                 opacity={.8}\r\n                 position={'fixed'}\r\n                 top={0} minH={'100vh'}\r\n                 right={0}\r\n                 onClick={() => setVisible(false)}\r\n                 minW={'100vw'}\r\n                 zIndex={900}>\r\n\r\n            </Box>\r\n            <Box p={5} w={500} bg={'white'}\r\n                 borderRadius={'md'}\r\n                 boxShadow={'md'}\r\n                 transform={\"translate(50%,-50%)\"}\r\n                 position={'fixed'} top={'40%'}\r\n                 right={'50%'}\r\n                 height={'auto'} zIndex={901}>\r\n                <VStack spacing={5} w={'100%'}>\r\n                    {/*TITLE*/}\r\n                    <HStack w={'100%'}>\r\n                        <AiOutlineUsergroupAdd size={'20'}/>\r\n                        <Text fontSize={'xl'} fontWeight={'medium'}>Invite</Text>\r\n                        <Spacer/>\r\n                        <CloseButton\r\n                            borderRadius={'100px'}\r\n                            bg={'teal'}\r\n                            color={'white'}\r\n                            onClick={() => setVisible(false)}\r\n                            size={'md'}/>\r\n                    </HStack>\r\n                    {/*DATE*/}\r\n                    <HStack w={'100%'}>\r\n                        <DatePicker selected={startDate} onChange={(date) => setStartDate(date)}/>\r\n                    </HStack>\r\n                    <VStack w={'100%'} align={'start'}>\r\n                        <Text fontWeight={'medium'} color={'gray.600'}>Share public link</Text>\r\n                        <HStack w={'100%'}>\r\n                            <Input\r\n                                size={'sm'}\r\n                            />\r\n                            <IconButton icon={<CopyIcon size={30}/>}/>\r\n                        </HStack>\r\n                    </VStack>\r\n                    <Divider/>\r\n                    {/*SHARE WITH EMAILS*/}\r\n                    <VStack w={'100%'} align={'start'}>\r\n                        <Text fontWeight={'medium'} color={'gray.600'}>Share using emails</Text>\r\n                        {/*EMAIL*/}\r\n                        <Wrap w={'100%'}>\r\n                            {\r\n                                emails.map((email) => (\r\n                                    <WrapItem key={email}>\r\n                                        <Tag\r\n                                            size={'sm'}\r\n                                            borderRadius=\"full\"\r\n                                            variant=\"solid\"\r\n                                            colorScheme=\"green\"\r\n                                        >\r\n                                            <TagLabel>{email}</TagLabel>\r\n                                            <TagCloseButton onClick={() => {\r\n                                                let filteredEmail = emails.filter(e => e != email)\r\n                                                setEmails(filteredEmail);\r\n                                            }}/>\r\n                                        </Tag>\r\n                                    </WrapItem>\r\n                                ))\r\n                            }\r\n                        </Wrap>\r\n                        {/*INPUT & ADD BUTTOn*/}\r\n                        <HStack w={'100%'}>\r\n                            <Input\r\n                                size={'sm'}\r\n\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                placeholder={'Email to share. Ex: test@gmail.com'}/>\r\n                            <Button\r\n                                onClick={() => {\r\n                                    setEmail('')\r\n                                    if (!emails.includes(email)) {\r\n                                        setEmails(prevState => [...prevState, email])\r\n                                    }\r\n                                }}\r\n                                isDisabled={email.length === 0}\r\n                                size={'sm'} colorScheme={'purple'}>Add</Button>\r\n                        </HStack>\r\n\r\n                        <HStack w={'100%'} py={5} justifyContent={'end'}>\r\n                            <Button onClick={onSubmit} colorScheme={'teal'}>\r\n                                Share invite\r\n                            </Button>\r\n                        </HStack>\r\n                    </VStack>\r\n                </VStack>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ShareDialog;"]},"metadata":{},"sourceType":"module"}