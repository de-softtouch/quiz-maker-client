{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\components\\\\public\\\\signup\\\\SignupPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useAuth } from \"../../../hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Button, Checkbox, Flex, FormControl, FormHelperText, FormLabel, Heading, Input, Link, Stack, Text, useColorModeValue } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignupPage = () => {\n  _s();\n\n  const {\n    login\n  } = useAuth();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(false);\n  const history = useHistory();\n\n  const handleSignup = async e => {\n    e.preventDefault();\n    const url = `http://localhost:8080/api/v1/auth/register`;\n    axios.post(url, JSON.stringify({\n      \"username\": username,\n      \"email\": email,\n      \"password\": password\n    }), {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(resp => {}).catch(error => {});\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    minH: \"100vh\",\n    align: \"center\",\n    justify: \"center\",\n    bg: useColorModeValue(\"gray.50\", \"gray.800\"),\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 8,\n      mx: \"auto\",\n      maxW: \"lg\",\n      minW: 'lg',\n      py: 12,\n      px: 6,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          fontSize: \"4xl\",\n          children: \"Register Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"lg\",\n          color: \"gray.600\",\n          children: [\"to enjoy all of our cool\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            color: \"blue.400\",\n            children: \"features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), \" \\u270C\\uFE0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        rounded: \"lg\",\n        bg: useColorModeValue(\"white\", \"gray.700\"),\n        boxShadow: \"lg\",\n        p: 8,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"username\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: username,\n              isInvalid: error,\n              errorBorderColor: \"crimson\",\n              onChange: e => {\n                setError(false);\n                setUsername(e.target.value);\n              },\n              type: \"email|text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), error && /*#__PURE__*/_jsxDEV(FormHelperText, {\n              color: 'crimson',\n              children: \"Username or password is not correct!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: email,\n              isInvalid: error,\n              errorBorderColor: \"crimson\",\n              onChange: e => {\n                setError(false);\n                setEmail(e.target.value);\n              },\n              type: \"email|text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), error && /*#__PURE__*/_jsxDEV(FormHelperText, {\n              color: 'crimson',\n              children: \"Username or password is not correct!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              minH: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: username.length === 0 || password.length === 0 || email.length === 0,\n              bg: \"blue.400\",\n              color: \"white\",\n              _hover: {\n                bg: \"blue.500\"\n              },\n              onClick: handleSignup,\n              children: \"Sign up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignupPage, \"AEHU/QVGEACRECGo8YlKUMjrMAs=\", false, function () {\n  return [useAuth, useHistory, useColorModeValue, useColorModeValue];\n});\n\n_c = SignupPage;\nexport default SignupPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/components/public/signup/SignupPage.js"],"names":["React","useState","useAuth","useHistory","Box","Button","Checkbox","Flex","FormControl","FormHelperText","FormLabel","Heading","Input","Link","Stack","Text","useColorModeValue","axios","SignupPage","login","username","setUsername","email","setEmail","password","setPassword","error","setError","history","handleSignup","e","preventDefault","url","post","JSON","stringify","headers","then","resp","catch","target","value","length","bg"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {useAuth} from \"../../../hooks/useAuth\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {\r\n    Box, Button, Checkbox,\r\n    Flex,\r\n    FormControl, FormHelperText,\r\n    FormLabel,\r\n    Heading,\r\n    Input,\r\n    Link,\r\n    Stack,\r\n    Text,\r\n    useColorModeValue\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\n\r\nconst SignupPage = () => {\r\n    const {login} = useAuth();\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const handleSignup = async (e) => {\r\n        e.preventDefault();\r\n        const url = `http://localhost:8080/api/v1/auth/register`;\r\n        axios.post(url, JSON.stringify({\r\n            \"username\": username,\r\n            \"email\": email,\r\n            \"password\": password,\r\n        }), {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(resp => {\r\n        }).catch(error => {\r\n               \r\n        })\r\n\r\n\r\n    }\r\n    return (\r\n        <Flex\r\n            minH={\"100vh\"}\r\n            align={\"center\"}\r\n            justify={\"center\"}\r\n            bg={useColorModeValue(\"gray.50\", \"gray.800\")}\r\n        >\r\n            <Stack spacing={8} mx={\"auto\"} maxW={\"lg\"} minW={'lg'} py={12} px={6}>\r\n                <Stack align={\"center\"}>\r\n                    <Heading fontSize={\"4xl\"}>Register Account</Heading>\r\n                    <Text fontSize={\"lg\"} color={\"gray.600\"}>\r\n                        to enjoy all of our cool{\" \"}\r\n                        <Link color={\"blue.400\"}>features</Link> ✌️\r\n                    </Text>\r\n                </Stack>\r\n                <Box\r\n                    rounded={\"lg\"}\r\n                    bg={useColorModeValue(\"white\", \"gray.700\")}\r\n                    boxShadow={\"lg\"}\r\n                    p={8}\r\n                >\r\n                    {/*Form*/}\r\n                    <Stack spacing={4}>\r\n                        {/*Username*/}\r\n                        <FormControl id=\"username\">\r\n                            <FormLabel>Username</FormLabel>\r\n                            <Input\r\n                                value={username}\r\n                                isInvalid={error}\r\n                                errorBorderColor=\"crimson\"\r\n                                onChange={(e) => {\r\n                                    setError(false);\r\n                                    setUsername(e.target.value);\r\n                                }}\r\n                                type='email|text'/>\r\n                            {\r\n                                error &&\r\n                                <FormHelperText color={'crimson'}>Username or password is not correct!</FormHelperText>\r\n                            }\r\n                        </FormControl>\r\n                        {/*Email*/}\r\n                        <FormControl id=\"email\">\r\n                            <FormLabel>Email address</FormLabel>\r\n                            <Input\r\n                                value={email}\r\n                                isInvalid={error}\r\n                                errorBorderColor=\"crimson\"\r\n                                onChange={(e) => {\r\n                                    setError(false);\r\n                                    setEmail(e.target.value);\r\n                                }}\r\n                                type='email|text'/>\r\n                            {\r\n                                error &&\r\n                                <FormHelperText color={'crimson'}>Username or password is not correct!</FormHelperText>\r\n                            }\r\n                        </FormControl>\r\n                        {/*Password*/}\r\n                        <FormControl id=\"password\">\r\n                            <FormLabel>Password</FormLabel>\r\n                            <Input\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                type=\"password\"/>\r\n                        </FormControl>\r\n                        <Stack>\r\n                            <Box minH={5}/>\r\n                            <Button\r\n                                disabled={\r\n                                    (username.length === 0 || password.length === 0 || email.length === 0)\r\n                                }\r\n                                bg={\"blue.400\"}\r\n                                color={\"white\"}\r\n                                _hover={{\r\n                                    bg: \"blue.500\",\r\n                                }}\r\n                                onClick={handleSignup}\r\n                            >\r\n                                Sign up\r\n                            </Button>\r\n\r\n                        </Stack>\r\n                    </Stack>\r\n                </Box>\r\n            </Stack>\r\n        </Flex>\r\n    );\r\n};\r\n\r\nexport default SignupPage;"]},"metadata":{},"sourceType":"module"}