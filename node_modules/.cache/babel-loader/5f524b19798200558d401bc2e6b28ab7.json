{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\quiz maker client\\\\src\\\\pages\\\\admin\\\\assigned\\\\AssignedQuizPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Badge, Box, Button, Divider, Heading, HStack, Table, TableCaption, Tbody, Td, Text, Th, Thead, Tooltip, Tr } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport dateFormat from 'dateformat';\nimport UserService from \"../../../service/UserService\";\nimport { AdminContext } from \"../../../providers/AdminSettingProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AssignedQuizPage = () => {\n  _s();\n\n  const [isLoading, setLoading] = useContext(AdminContext);\n  const [assignedQuizzes, setAssignedQuiz] = useState([]);\n  useEffect(() => {\n    getAssignedQuizzes();\n  }, []);\n\n  const getAssignedQuizzes = async () => {\n    try {\n      const resp = await UserService.getAssignedQuizzes();\n      console.log(resp.data);\n    } catch (e) {}\n  };\n\n  const formatDate = (start, end) => {\n    const from = dateFormat(start, \"dddd, mmmm, yyyy\");\n    const to = dateFormat(end, \"dddd, mmmm, yyyy, h:MM:ss TT\");\n    return from + \"\\t-\\t\" + to;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      textAlign: 'center',\n      children: \"Assigned quizess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      my: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      size: 'lg',\n      variant: 'striped',\n      colorScheme: 'blue',\n      children: [/*#__PURE__*/_jsxDEV(Thead, {\n        children: /*#__PURE__*/_jsxDEV(Tr, {\n          children: [/*#__PURE__*/_jsxDEV(Th, {\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Quiz Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Deadline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n        children: [(assignedQuizzes || assignedQuizzes.length == 0) && /*#__PURE__*/_jsxDEV(Tr, {\n          children: /*#__PURE__*/_jsxDEV(Td, {\n            colSpan: 4,\n            py: 5,\n            my: 5,\n            children: \"Your dont have any assigned quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 77\n        }, this), assignedQuizzes && assignedQuizzes.map((assignmentInfo, index) => /*#__PURE__*/_jsxDEV(Tr, {\n          children: [/*#__PURE__*/_jsxDEV(Td, {\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: /*#__PURE__*/_jsxDEV(HStack, {\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                children: [\"        \", assignmentInfo.quizDetails.title, \"  \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                ml: \"1\",\n                colorScheme: \"green\",\n                children: \"New\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              label: // dateFormat(assignmentInfo.finishDate, \"dddd, mmmm, yyyy, h:MM:ss TT\")\n              formatDate(assignmentInfo.startDate, assignmentInfo.finishDate),\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                children: assignmentInfo.finishDate ? dateFormat(assignmentInfo.finishDate, \"dd, mmmm, yyyy, h:MM TT\") : \"No Deadline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: 'blue',\n              children: \"Take\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), assignedQuizzes.length > 0 && /*#__PURE__*/_jsxDEV(TableCaption, {\n        children: \"Assigned Quizzes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AssignedQuizPage, \"WJcvSHM5NgHgpuk5gQBz8M16SFM=\");\n\n_c = AssignedQuizPage;\nexport default AssignedQuizPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignedQuizPage\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/quiz maker client/src/pages/admin/assigned/AssignedQuizPage.js"],"names":["React","useContext","useEffect","useState","Badge","Box","Button","Divider","Heading","HStack","Table","TableCaption","Tbody","Td","Text","Th","Thead","Tooltip","Tr","axios","dateFormat","UserService","AdminContext","AssignedQuizPage","isLoading","setLoading","assignedQuizzes","setAssignedQuiz","getAssignedQuizzes","resp","console","log","data","e","formatDate","start","end","from","to","length","map","assignmentInfo","index","quizDetails","title","startDate","finishDate"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {\r\n    Badge,\r\n    Box, Button,\r\n    Divider,\r\n    Heading,\r\n    HStack,\r\n    Table,\r\n    TableCaption,\r\n    Tbody,\r\n    Td,\r\n    Text,\r\n    Th,\r\n    Thead, Tooltip,\r\n    Tr\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport dateFormat from 'dateformat';\r\nimport UserService from \"../../../service/UserService\";\r\nimport {AdminContext} from \"../../../providers/AdminSettingProvider\";\r\n\r\nconst AssignedQuizPage = () => {\r\n\r\n    const [isLoading, setLoading] = useContext(AdminContext);\r\n    const [assignedQuizzes, setAssignedQuiz] = useState([]);\r\n    useEffect(() => {\r\n        getAssignedQuizzes();\r\n    }, []);\r\n\r\n    const getAssignedQuizzes = async () => {\r\n        try {\r\n            const resp = await UserService.getAssignedQuizzes();\r\n            console.log(resp.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n    const formatDate = (start, end) => {\r\n        const from = dateFormat(start, \"dddd, mmmm, yyyy\");\r\n        const to = dateFormat(end, \"dddd, mmmm, yyyy, h:MM:ss TT\");\r\n        return from + \"\\t-\\t\" + to;\r\n\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <Heading textAlign={'center'}>Assigned quizess</Heading>\r\n            <Divider my={5}/>\r\n\r\n            <Table size={'lg'} variant={'striped'} colorScheme={'blue'}>\r\n                <Thead>\r\n                    <Tr>\r\n                        <Th>No</Th>\r\n                        <Th>Quiz Name</Th>\r\n                        <Th>Deadline</Th>\r\n                        <Th>Action</Th>\r\n                    </Tr>\r\n                </Thead>\r\n\r\n                <Tbody>\r\n\r\n                    {\r\n                        (assignedQuizzes || assignedQuizzes.length == 0) && <Tr>\r\n                            <Td colSpan={4} py={5} my={5}>\r\n                                Your dont have any assigned quiz\r\n                            </Td>\r\n                        </Tr>\r\n\r\n                    }\r\n                    {\r\n                        assignedQuizzes &&\r\n                        assignedQuizzes.map((assignmentInfo, index) => (\r\n                            <Tr key={index}>\r\n                                <Td>1</Td>\r\n                                <Td>\r\n                                    <HStack>\r\n                                        <Text>        {assignmentInfo.quizDetails.title}  </Text>\r\n                                        <Badge ml=\"1\" colorScheme=\"green\">\r\n                                            New\r\n                                        </Badge>\r\n                                        {/*<Text bg={'teal.700'} px={2} color={'white'} fontSize={'sm'}>new</Text>*/}\r\n                                    </HStack>\r\n                                </Td>\r\n                                <Td>\r\n                                    <Tooltip\r\n                                        label={\r\n                                            // dateFormat(assignmentInfo.finishDate, \"dddd, mmmm, yyyy, h:MM:ss TT\")\r\n                                            formatDate(assignmentInfo.startDate, assignmentInfo.finishDate)\r\n                                        }>\r\n                                        <Text>\r\n                                            {assignmentInfo.finishDate\r\n                                                ? dateFormat(assignmentInfo.finishDate, \"dd, mmmm, yyyy, h:MM TT\")\r\n                                                : \"No Deadline\"\r\n                                            }\r\n                                        </Text>\r\n                                    </Tooltip>\r\n\r\n                                </Td>\r\n\r\n                                <Td>\r\n                                    <Button colorScheme={'blue'}>\r\n                                        Take\r\n                                    </Button>\r\n                                </Td>\r\n\r\n                            </Tr>\r\n                        ))\r\n                    }\r\n\r\n                </Tbody>\r\n                {\r\n                    assignedQuizzes.length > 0 && <TableCaption>Assigned Quizzes</TableCaption>\r\n                }\r\n\r\n            </Table>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AssignedQuizPage;"]},"metadata":{},"sourceType":"module"}