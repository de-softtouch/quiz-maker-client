{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\components\\\\edit_quiz\\\\EditQuizPage.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Box, Button, Center, Checkbox, Container, Flex, Heading, HStack, IconButton, Image, Input, Select, SimpleGrid, Spacer, Stack, Tag, TagLabel, Text, Tooltip, VStack, ButtonGroup } from \"@chakra-ui/react\";\nimport { AddIcon, ArrowBackIcon, CopyIcon, DeleteIcon, EditIcon, TimeIcon, ViewIcon } from \"@chakra-ui/icons\";\nimport { AiOutlineTag, BiPen, BsPen } from \"react-icons/all\";\nimport EditQuestionDialog from \"./EditQuestionDialog\";\nimport { useQuiz } from \"../../context/QuizProvider\";\nimport QuestionEntry from \"./QuestionEntry\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditQuizPage = () => {\n  _s();\n\n  const [showCreateQ, setShowCQD] = useState(false);\n  const {\n    createdQuiz,\n    setCreatedQuiz\n  } = useQuiz();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    bg: \"#F7FAFC\",\n    children: [showCreateQ && /*#__PURE__*/_jsxDEV(EditQuestionDialog, {\n      setVisible: setShowCQD\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(HeaderWithActionBar, {\n      setShowCQD: setShowCQD\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      pt: \"150px\",\n      minH: \"100vh\",\n      bg: \"#F7FAFC\",\n      position: \"relative\",\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        direction: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          flex: 7,\n          mt: 10,\n          w: \"100%\",\n          maxW: \"860px\",\n          children: /*#__PURE__*/_jsxDEV(Center, {\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              w: \"100%\",\n              direction: \"column\",\n              align: \"center\",\n              children: createdQuiz.questions.length > 0 && createdQuiz.questions.map((item, i) => /*#__PURE__*/_jsxDEV(QuestionEntry, {\n                index: i + 1,\n                question: item\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditQuizPage, \"1UoxErflSS8jGyiFVAJKSnOqETE=\", false, function () {\n  return [useQuiz];\n});\n\n_c = EditQuizPage;\nexport default EditQuizPage;\n/*\r\nHEADER\r\n*/\n\nconst HeaderWithActionBar = ({\n  setShowCQD\n}) => {\n  _s2();\n\n  const {\n    createdQuiz,\n    setCreatedQuiz,\n    savedQuestions,\n    setSavedQuestions\n  } = useQuiz();\n\n  const onSaveQuiz = async () => {\n    let modifiledQuestions = createdQuiz.questions.map(question => ({ ...question,\n      options: question.options.map(option => ({ ...option,\n        optionId: null\n      }))\n    }));\n    setCreatedQuiz(prevState => ({ ...prevState,\n      questions: modifiledQuestions\n    })); // if (createdQuiz.questions.length > 0) {\n    //     const resp = await axios.post(\n    //         \"http://localhost:8080/api/v1/public/quiz\",\n    //         JSON.stringify(createdQuiz),\n    //         {\n    //             headers: { \"Content-Type\": \"application/json\" },\n    //         }\n    //     );\n    //     if (resp.status == 200) {\n    //         setCreatedQuiz(resp.data);\n    //     }\n    // } else {\n    //     // show toast\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    zIndex: 500,\n    bg: \"red\",\n    position: \"fixed\",\n    top: 0,\n    w: \"100%\",\n    bg: \"#F7FAFC\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      bg: \"red\",\n      maxH: \"60px\",\n      bg: \"teal.600\",\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        align: \"center\",\n        px: 8,\n        py: 2,\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n          size: \"md\",\n          color: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          color: \"white\",\n          fontWeight: \"medium\",\n          fontStyle: \"italic\",\n          children: \"Editted 1 minute ago\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            onClick: onSaveQuiz,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            children: \"Publish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      bg: \"#F7FAFC\",\n      maxW: \"860px\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Center, {\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            boxShadow: \"md\",\n            p: 4,\n            borderBottomRadius: \"xl\",\n            spacing: 4,\n            bg: \"white\",\n            children: [/*#__PURE__*/_jsxDEV(VStack, {\n              w: \"400px\",\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                alignSelf: \"start\",\n                children: \"Search\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(VStack, {\n              align: \"end\",\n              w: \"200px\",\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                children: \"New question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  setShowCQD(true);\n                },\n                size: \"md\",\n                rightIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 48\n                }, this),\n                variant: \"solid\",\n                colorScheme: \"teal\",\n                children: \"New question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(HeaderWithActionBar, \"gwbFpQvw+FIe1m+UZ1UJc1HMU80=\", false, function () {\n  return [useQuiz];\n});\n\n_c2 = HeaderWithActionBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditQuizPage\");\n$RefreshReg$(_c2, \"HeaderWithActionBar\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/components/edit_quiz/EditQuizPage.js"],"names":["React","useState","Box","Button","Center","Checkbox","Container","Flex","Heading","HStack","IconButton","Image","Input","Select","SimpleGrid","Spacer","Stack","Tag","TagLabel","Text","Tooltip","VStack","ButtonGroup","AddIcon","ArrowBackIcon","CopyIcon","DeleteIcon","EditIcon","TimeIcon","ViewIcon","AiOutlineTag","BiPen","BsPen","EditQuestionDialog","useQuiz","QuestionEntry","axios","EditQuizPage","showCreateQ","setShowCQD","createdQuiz","setCreatedQuiz","questions","length","map","item","i","HeaderWithActionBar","savedQuestions","setSavedQuestions","onSaveQuiz","modifiledQuestions","question","options","option","optionId","prevState"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Center,\r\n    Checkbox,\r\n    Container,\r\n    Flex,\r\n    Heading,\r\n    HStack,\r\n    IconButton,\r\n    Image,\r\n    Input,\r\n    Select,\r\n    SimpleGrid,\r\n    Spacer,\r\n    Stack,\r\n    Tag,\r\n    TagLabel,\r\n    Text,\r\n    Tooltip,\r\n    VStack,\r\n    ButtonGroup,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n    AddIcon,\r\n    ArrowBackIcon,\r\n    CopyIcon,\r\n    DeleteIcon,\r\n    EditIcon,\r\n    TimeIcon,\r\n    ViewIcon,\r\n} from \"@chakra-ui/icons\";\r\nimport { AiOutlineTag, BiPen, BsPen } from \"react-icons/all\";\r\nimport EditQuestionDialog from \"./EditQuestionDialog\";\r\nimport { useQuiz } from \"../../context/QuizProvider\";\r\nimport QuestionEntry from \"./QuestionEntry\";\r\nimport axios from \"axios\";\r\n\r\nconst EditQuizPage = () => {\r\n    const [showCreateQ, setShowCQD] = useState(false);\r\n\r\n    const { createdQuiz, setCreatedQuiz } = useQuiz();\r\n\r\n    return (\r\n        <Box bg={\"#F7FAFC\"}>\r\n            {/*  Header with action bar*/}\r\n            {showCreateQ && <EditQuestionDialog setVisible={setShowCQD} />}\r\n\r\n            <HeaderWithActionBar setShowCQD={setShowCQD} />\r\n            {/*   Content with right sidebar*/}\r\n            <Box\r\n                pt={\"150px\"}\r\n                minH={\"100vh\"}\r\n                bg={\"#F7FAFC\"}\r\n                position={\"relative\"}\r\n            >\r\n                <Flex direction={\"row\"}>\r\n                    {/*QUESTION*/}\r\n                    <Box flex={7} mt={10} w={\"100%\"} maxW={\"860px\"}>\r\n                        <Center>\r\n                            {/*SAVED QUESTIONS*/}\r\n                            <Stack\r\n                                w={\"100%\"}\r\n                                direction={\"column\"}\r\n                                align={\"center\"}\r\n                            >\r\n                                {/* {savedQuestions.length > 0 &&\r\n                                    savedQuestions.map((item, i) => (\r\n                                        <QuestionEntry\r\n                                            key={i}\r\n                                            index={i + 1}\r\n                                            question={item}\r\n                                        />\r\n                                    ))} */}\r\n                                {createdQuiz.questions.length > 0 &&\r\n                                    createdQuiz.questions.map((item, i) => (\r\n                                        <QuestionEntry\r\n                                            key={i}\r\n                                            index={i + 1}\r\n                                            question={item}\r\n                                        />\r\n                                    ))}\r\n                            </Stack>\r\n                        </Center>\r\n                    </Box>\r\n                    {/**/}\r\n                    {/* <Box\r\n                        overflowY={\"scroll\"}\r\n                        top={\"150\"}\r\n                        zIndex={10}\r\n                        position={\"sticky\"}\r\n                        bg={\"white\"}\r\n                        boxShadow={\"md\"}\r\n                        minW={\"300px\"}\r\n                        maxW={\"300px\"}\r\n                        minH={\"400px\"}\r\n                        height={\"100%\"}\r\n                    >\r\n                        <Box p={4} mb={100}>\r\n                            <VStack spacing={5}>\r\n                                <Input type={\"file\"} />\r\n                                <HStack>\r\n                                    <Tooltip label={\"Quiz title\"}>\r\n                                        <Heading\r\n                                            fontWeight={\"medium\"}\r\n                                            fontSize={\"25px\"}\r\n                                        >\r\n                                            {createdQuiz != null &&\r\n                                            createdQuiz.title != null\r\n                                                ? createdQuiz.title\r\n                                                : \"\"}\r\n                                        </Heading>\r\n                                    </Tooltip>\r\n                                    <IconButton\r\n                                        colorScheme={\"teal\"}\r\n                                        onClick={() => {}}\r\n                                        icon={<EditIcon />}\r\n                                    />\r\n                                </HStack>\r\n                                <HStack>\r\n                                    <Tooltip\r\n                                        zIndex={100}\r\n                                        label={\r\n                                            \"Public: visible to everyone ;\\n Private: visible to you and shared ones\"\r\n                                        }\r\n                                    >\r\n                                        <Button\r\n                                            size={\"sm\"}\r\n                                            leftIcon={<ViewIcon />}\r\n                                            variant={\"solid\"}\r\n                                            colorScheme={\"white\"}\r\n                                            color={\"blue.400\"}\r\n                                        >\r\n                                            public\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                    <Tooltip\r\n                                        zIndex={100}\r\n                                        label={\"Default time for all questions\"}\r\n                                    >\r\n                                        <Button\r\n                                            size={\"sm\"}\r\n                                            leftIcon={<TimeIcon />}\r\n                                            variant={\"solid\"}\r\n                                            colorScheme={\"white\"}\r\n                                            color={\"blue.400\"}\r\n                                        >\r\n                                            30 secs\r\n                                        </Button>\r\n                                    </Tooltip>\r\n                                </HStack>\r\n                            </VStack>\r\n                        </Box>\r\n                    </Box>\r\n               \r\n                */}\r\n                </Flex>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default EditQuizPage;\r\n\r\n/*\r\nHEADER\r\n*/\r\nconst HeaderWithActionBar = ({ setShowCQD }) => {\r\n    const { createdQuiz, setCreatedQuiz, savedQuestions, setSavedQuestions } =\r\n        useQuiz();\r\n\r\n    const onSaveQuiz = async () => {\r\n        let modifiledQuestions = createdQuiz.questions.map((question) => ({\r\n            ...question,\r\n            options: question.options.map((option) => ({\r\n                ...option,\r\n                optionId: null,\r\n            })),\r\n        }));\r\n        setCreatedQuiz((prevState) => ({\r\n            ...prevState,\r\n            questions: modifiledQuestions,\r\n        }));\r\n\r\n        // if (createdQuiz.questions.length > 0) {\r\n        //     const resp = await axios.post(\r\n        //         \"http://localhost:8080/api/v1/public/quiz\",\r\n        //         JSON.stringify(createdQuiz),\r\n        //         {\r\n        //             headers: { \"Content-Type\": \"application/json\" },\r\n        //         }\r\n        //     );\r\n        //     if (resp.status == 200) {\r\n        //         setCreatedQuiz(resp.data);\r\n        //     }\r\n        // } else {\r\n        //     // show toast\r\n        // }\r\n    };\r\n    return (\r\n        <Box\r\n            zIndex={500}\r\n            bg={\"red\"}\r\n            position={\"fixed\"}\r\n            top={0}\r\n            w={\"100%\"}\r\n            bg={\"#F7FAFC\"}\r\n        >\r\n            {/*Header*/}\r\n            <Box bg={\"red\"} maxH={\"60px\"} bg={\"teal.600\"}>\r\n                <Flex\r\n                    align={\"center\"}\r\n                    px={8}\r\n                    py={2}\r\n                    alignItems={\"center\"}\r\n                    justifyContent={\"space-between\"}\r\n                >\r\n                    <ArrowBackIcon size={\"md\"} color={\"white\"} />\r\n                    <Text\r\n                        color={\"white\"}\r\n                        fontWeight={\"medium\"}\r\n                        fontStyle={\"italic\"}\r\n                    >\r\n                        Editted 1 minute ago\r\n                    </Text>\r\n                    <ButtonGroup>\r\n                        <Button size={\"sm\"} onClick={onSaveQuiz}>\r\n                            Save\r\n                        </Button>\r\n                        <Button size={\"sm\"}>Publish</Button>\r\n                    </ButtonGroup>\r\n                </Flex>\r\n            </Box>\r\n            {/*Box*/}\r\n            <Box bg={\"#F7FAFC\"} maxW={\"860px\"}>\r\n                <Box>\r\n                    <Center>\r\n                        <HStack\r\n                            boxShadow={\"md\"}\r\n                            p={4}\r\n                            borderBottomRadius={\"xl\"}\r\n                            spacing={4}\r\n                            bg={\"white\"}\r\n                        >\r\n                            <VStack w={\"400px\"}>\r\n                                <Text alignSelf={\"start\"}>Search</Text>\r\n                                <Input />\r\n                            </VStack>\r\n                            <VStack align={\"end\"} w={\"200px\"}>\r\n                                <Text>New question</Text>\r\n                                <Button\r\n                                    onClick={() => {\r\n                                        setShowCQD(true);\r\n                                    }}\r\n                                    size={\"md\"}\r\n                                    rightIcon={<AddIcon />}\r\n                                    variant={\"solid\"}\r\n                                    colorScheme={\"teal\"}\r\n                                >\r\n                                    New question\r\n                                </Button>\r\n                            </VStack>\r\n                        </HStack>\r\n                    </Center>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}