{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\pages\\\\admin\\\\quiz_edit\\\\QuizEditor.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Heading, HStack, IconButton, Text, VStack } from \"@chakra-ui/react\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { useAdmin } from \"../../../hooks/useAuth\";\nimport { AddIcon, EditIcon } from \"@chakra-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuizEditor = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [quiz, setQuiz] = useState(null);\n  const {\n    setFullMode\n  } = useAdmin();\n  useEffect(() => {\n    const fetchQuizDetails = async () => {\n      const url = `http://localhost:8080/api/v1/admin/quiz-management/managed-quizzes/${id}`;\n\n      try {\n        const resp = await axios.get(url, {\n          headers: {\n            \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        resp.status === 200 && setQuiz(resp.data);\n        console.log(resp.data);\n      } catch (e) {\n        console.log(\"Failed to get quiz details with id \" + id);\n      }\n    };\n\n    fetchQuizDetails();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      align: 'start',\n      w: '100%',\n      minH: '100vh',\n      children: /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 4,\n        color: 'white',\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          px: 4,\n          colorScheme: 'teal',\n          leftIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 63\n          }, this),\n          children: \"Quiz title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          px: 4,\n          colorScheme: 'linkedin',\n          leftIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 67\n          }, this),\n          children: \"New Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          px: 4,\n          colorScheme: 'purple',\n          leftIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 65\n          }, this),\n          children: \"Quiz title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          px: 4,\n          colorScheme: 'messenger',\n          leftIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 68\n          }, this),\n          children: \"Quiz title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(QuizEditor, \"j1qfMQcZ0dOf/ZWZ7QayYXfM/gs=\", false, function () {\n  return [useParams, useAdmin];\n});\n\n_c = QuizEditor;\nexport default QuizEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizEditor\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/pages/admin/quiz_edit/QuizEditor.js"],"names":["Box","Button","Heading","HStack","IconButton","Text","VStack","useEffect","useState","axios","useParams","useAdmin","AddIcon","EditIcon","QuizEditor","id","quiz","setQuiz","setFullMode","fetchQuizDetails","url","resp","get","headers","localStorage","getItem","status","data","console","log","e"],"mappings":";;;AAAA,SAAQA,GAAR,EAAaC,MAAb,EAAqBC,OAArB,EAA8BC,MAA9B,EAAsCC,UAAtC,EAAkDC,IAAlD,EAAwDC,MAAxD,QAAqE,kBAArE;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AACA,SAAQC,OAAR,EAAiBC,QAAjB,QAAgC,kBAAhC;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM;AAACC,IAAAA;AAAD,MAAOL,SAAS,EAAtB;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM;AAACU,IAAAA;AAAD,MAAgBP,QAAQ,EAA9B;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,gBAAgB,GAAG,YAAY;AACjC,YAAMC,GAAG,GAAI,sEAAqEL,EAAG,EAArF;;AACA,UAAI;AACA,cAAMM,IAAI,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAUF,GAAV,EAAe;AAC9BG,UAAAA,OAAO,EAAE;AACL,6BAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;AAD1D;AADqB,SAAf,CAAnB;AAKAJ,QAAAA,IAAI,CAACK,MAAL,KAAgB,GAAhB,IAAuBT,OAAO,CAACI,IAAI,CAACM,IAAN,CAA9B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACM,IAAjB;AACH,OARD,CAQE,OAAOG,CAAP,EAAU;AACRF,QAAAA,OAAO,CAACC,GAAR,CAAY,wCAAwCd,EAApD;AACH;AACJ,KAbD;;AAcAI,IAAAA,gBAAgB;AACnB,GAhBQ,EAgBN,EAhBM,CAAT;AAiBA,sBAAO;AAAA,2BACH,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,OAAf;AAAwB,MAAA,CAAC,EAAE,MAA3B;AAAmC,MAAA,IAAI,EAAE,OAAzC;AAAA,6BAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,CAAjB;AAAoB,QAAA,KAAK,EAAE,OAA3B;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAE,CAAZ;AAAe,UAAA,WAAW,EAAE,MAA5B;AAAoC,UAAA,QAAQ,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAE,CAAZ;AAAe,UAAA,WAAW,EAAE,UAA5B;AAAwC,UAAA,QAAQ,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAE,CAAZ;AAAe,UAAA,WAAW,EAAE,QAA5B;AAAsC,UAAA,QAAQ,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,MAAD;AAAQ,UAAA,EAAE,EAAE,CAAZ;AAAe,UAAA,WAAW,EAAE,WAA5B;AAAyC,UAAA,QAAQ,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADG,mBAAP;AAaH,CAnCD;;GAAML,U;UAEWJ,S,EAESC,Q;;;KAJpBG,U;AAqCN,eAAeA,UAAf","sourcesContent":["import {Box, Button, Heading, HStack, IconButton, Text, VStack} from \"@chakra-ui/react\";\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useAdmin} from \"../../../hooks/useAuth\";\r\nimport {AddIcon, EditIcon} from \"@chakra-ui/icons\";\r\n\r\nconst QuizEditor = () => {\r\n\r\n    const {id} = useParams();\r\n    const [quiz, setQuiz] = useState(null);\r\n    const {setFullMode} = useAdmin();\r\n    useEffect(() => {\r\n        const fetchQuizDetails = async () => {\r\n            const url = `http://localhost:8080/api/v1/admin/quiz-management/managed-quizzes/${id}`;\r\n            try {\r\n                const resp = await axios.get(url, {\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\r\n                    }\r\n                })\r\n                resp.status === 200 && setQuiz(resp.data);\r\n                console.log(resp.data)\r\n            } catch (e) {\r\n                console.log(\"Failed to get quiz details with id \" + id);\r\n            }\r\n        }\r\n        fetchQuizDetails();\r\n    }, [])\r\n    return <>\r\n        <VStack align={'start'} w={'100%'} minH={'100vh'}>\r\n            {/*ACTION BUTTONS*/}\r\n            <HStack spacing={4} color={'white'}>\r\n                <Button px={4} colorScheme={'teal'} leftIcon={<EditIcon/>}>Quiz title</Button>\r\n                <Button px={4} colorScheme={'linkedin'} leftIcon={<AddIcon/>}>New Question</Button>\r\n                <Button px={4} colorScheme={'purple'} leftIcon={<EditIcon/>}>Quiz title</Button>\r\n                <Button px={4} colorScheme={'messenger'} leftIcon={<EditIcon/>}>Quiz title</Button>\r\n            </HStack>\r\n            {/*    QUESTION*/}\r\n        </VStack>\r\n\r\n    </>\r\n}\r\n\r\nexport default QuizEditor;"]},"metadata":{},"sourceType":"module"}