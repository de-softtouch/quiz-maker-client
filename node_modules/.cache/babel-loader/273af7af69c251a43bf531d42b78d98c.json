{"ast":null,"code":"import axiosClient from \"../api/axiosClient\";\nconst UserService = {\n  updateAvt: async file => {\n    const url = `/member/users/me/avt`;\n    let formData = new FormData();\n    formData.append(\"file\", file);\n    return axiosClient.post(url, formData, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  validateInput: async (input, value) => {\n    const url = process.env.REACT_APP_BASE_URL + `/public/validation-input?input=${input}&value=${value}`;\n    return axiosClient.get(url);\n  },\n  updateUser: async data => {\n    const url = process.env.REACT_APP_BASE_URL + `/member/users/me`;\n    return axiosClient.post(url, JSON.stringify(data), {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\n      }\n    });\n  },\n  getUserQuizzes: async params => {\n    const url = process.env.REACT_APP_BASE_URL + `/member/users/me/quizzes`;\n    return axiosClient.get(url, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`\n      },\n      params: params\n    });\n  },\n  getUserQuiz: async id => {\n    const url = `/member/users/me/quizzes/${id}`;\n    const data = axiosClient.get(url, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\n      }\n    });\n    return data;\n  },\n  updateQuizActive: async (quizId, active) => {\n    const url = `/member/users/me/quizzes/${quizId}?active=${active}`;\n    return axiosClient.post(url, {}, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\n      }\n    });\n  },\n  assignToUsers: async assignment => {\n    const url = `/member/users/me/assigment/assign-users`;\n    return axiosClient.post(url, JSON.stringify(assignment), {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\n      }\n    });\n  },\n  getAssignmentsInfo: async () => {\n    const url = `/member/users/me/assignments/info`;\n    return axiosClient.get(url, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\n      }\n    });\n  },\n  getAssignmentReport: async assignId => {\n    const url = `/member/assigment/quizzes/${assignId}/users`;\n    return axiosClient.get(url, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\n      }\n    });\n  },\n  getAssignedQuizzes: async () => {\n    const url = `/member/users/me/assigned-quizzes`;\n    return axiosClient.get(url, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\n      }\n    });\n  },\n  getAssignedQuizInfo: async quizId => {\n    const url = `/member/users/me/assigned-quizzes/${quizId}`;\n    return axiosClient.get(url, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\n      }\n    });\n  },\n  getSubmissionAnswers: async quizId => {\n    const url = `/member/users/me/submission/quizzes/${quizId}`;\n    return axiosClient.get(url, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\n      }\n    });\n  }\n};\nexport default UserService;","map":{"version":3,"sources":["C:/Users/Admin/Documents/quiz maker client/src/service/UserService.js"],"names":["axiosClient","UserService","updateAvt","file","url","formData","FormData","append","post","headers","localStorage","getItem","validateInput","input","value","process","env","REACT_APP_BASE_URL","get","updateUser","data","JSON","stringify","getUserQuizzes","params","getUserQuiz","id","updateQuizActive","quizId","active","assignToUsers","assignment","getAssignmentsInfo","getAssignmentReport","assignId","getAssignedQuizzes","getAssignedQuizInfo","getSubmissionAnswers"],"mappings":"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","sourcesContent":["import axiosClient from \"../api/axiosClient\";\r\n\r\nconst UserService = {\r\n\r\n    updateAvt: async (file) => {\r\n        const url = `/member/users/me/avt`;\r\n        let formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        return axiosClient.post(url, formData, {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`,\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n    ,\r\n    validateInput: async (input, value) => {\r\n        const url = process.env.REACT_APP_BASE_URL + `/public/validation-input?input=${input}&value=${value}`;\r\n        return axiosClient.get(url);\r\n    },\r\n    updateUser: async (data) => {\r\n        const url = process.env.REACT_APP_BASE_URL + `/member/users/me`\r\n        return axiosClient.post(url, JSON.stringify(data), {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\r\n            }\r\n        })\r\n    },\r\n    getUserQuizzes: async (params) => {\r\n        const url = process.env.REACT_APP_BASE_URL + `/member/users/me/quizzes`;\r\n        return axiosClient.get(url, {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`\r\n            },\r\n            params: params\r\n        })\r\n    },\r\n    getUserQuiz: async (id) => {\r\n        const url = `/member/users/me/quizzes/${id}`;\r\n        const data = axiosClient.get(url, {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\r\n            }\r\n        })\r\n        return data;\r\n    },\r\n    updateQuizActive: async (quizId, active) => {\r\n        const url = `/member/users/me/quizzes/${quizId}?active=${active}`;\r\n        return axiosClient.post(url, {}, {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\r\n            }\r\n        })\r\n\r\n    },\r\n    assignToUsers: async (assignment) => {\r\n        const url = `/member/users/me/assigment/assign-users`;\r\n        return axiosClient.post(url, JSON.stringify(assignment), {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\r\n            }\r\n        })\r\n    },\r\n    getAssignmentsInfo: async () => {\r\n        const url = `/member/users/me/assignments/info`;\r\n        return axiosClient.get(url, {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\r\n            }\r\n        })\r\n    },\r\n    getAssignmentReport: async (assignId) => {\r\n        const url = `/member/assigment/quizzes/${assignId}/users`;\r\n        return axiosClient.get(url, {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\r\n            }\r\n        })\r\n    },\r\n    getAssignedQuizzes: async () => {\r\n        const url = `/member/users/me/assigned-quizzes`;\r\n        return axiosClient.get(url, {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\r\n            }\r\n        })\r\n    },\r\n    getAssignedQuizInfo: async (quizId) => {\r\n        const url = `/member/users/me/assigned-quizzes/${quizId}`;\r\n        return axiosClient.get(url, {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\r\n            }\r\n        })\r\n\r\n    },\r\n    getSubmissionAnswers: async (quizId) => {\r\n        const url = `/member/users/me/submission/quizzes/${quizId}`;\r\n        return axiosClient.get(url, {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\r\n            }\r\n        })\r\n    }\r\n}\r\nexport default UserService;"]},"metadata":{},"sourceType":"module"}