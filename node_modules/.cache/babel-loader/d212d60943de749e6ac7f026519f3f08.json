{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\pages\\\\admin\\\\quiz_edit\\\\QuizEditor.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Checkbox, Container, Heading, HStack, IconButton, Select, SimpleGrid, Spacer, Text, Tooltip, VStack } from \"@chakra-ui/react\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { useAdmin } from \"../../../hooks/useAuth\";\nimport { AddIcon, CopyIcon, DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\nimport { QuizEditContext } from \"../../../providers/QuizEditProvider\";\nimport { AiOutlineTag, BsPen } from \"react-icons/all\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuizEditor = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    quiz,\n    setQuiz\n  } = useContext(QuizEditContext);\n  const {\n    setFullMode\n  } = useAdmin();\n  useEffect(() => {\n    const fetchQuizDetails = async () => {\n      const url = `http://localhost:8080/api/v1/admin/quiz-management/managed-quizzes/${id}`;\n\n      try {\n        const resp = await axios.get(url, {\n          headers: {\n            \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\n          }\n        });\n        resp.status === 200 && setQuiz(resp.data);\n        console.log(resp.data);\n      } catch (e) {\n        console.log(\"Failed to get quiz details with id \" + id);\n      }\n    };\n\n    fetchQuizDetails();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    align: 'start',\n    w: '100%',\n    minH: '100vh',\n    children: /*#__PURE__*/_jsxDEV(HStack, {\n      spacing: 4,\n      color: 'white',\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        px: 4,\n        colorScheme: 'teal',\n        leftIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 63\n        }, this),\n        children: quiz && quiz.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        px: 4,\n        colorScheme: 'linkedin',\n        leftIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 67\n        }, this),\n        children: \"New Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        px: 4,\n        colorScheme: 'purple',\n        leftIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 65\n        }, this),\n        children: \"Quiz title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        px: 4,\n        colorScheme: 'messenger',\n        leftIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 68\n        }, this),\n        children: \"Quiz title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuizEditor, \"waN9zvpsPhnGU0tsKhzsg0yUqLQ=\", false, function () {\n  return [useParams, useAdmin];\n});\n\n_c = QuizEditor;\nexport default QuizEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizEditor\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/pages/admin/quiz_edit/QuizEditor.js"],"names":["Box","Button","Checkbox","Container","Heading","HStack","IconButton","Select","SimpleGrid","Spacer","Text","Tooltip","VStack","React","useContext","useEffect","useState","axios","useParams","useAdmin","AddIcon","CopyIcon","DeleteIcon","EditIcon","QuizEditContext","AiOutlineTag","BsPen","QuizEditor","id","quiz","setQuiz","setFullMode","fetchQuizDetails","url","resp","get","headers","localStorage","getItem","status","data","console","log","e","title"],"mappings":";;;AAAA,SACIA,GADJ,EAEIC,MAFJ,EAEYC,QAFZ,EAGIC,SAHJ,EAIIC,OAJJ,EAKIC,MALJ,EAMIC,UANJ,EAMgBC,MANhB,EAOIC,UAPJ,EAQIC,MARJ,EASIC,IATJ,EAUIC,OAVJ,EAWIC,MAXJ,QAYO,kBAZP;AAaA,OAAOC,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,QAAR,QAAuB,wBAAvB;AACA,SAAQC,OAAR,EAAiBC,QAAjB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAsD,kBAAtD;AACA,SAAQC,eAAR,QAA8B,qCAA9B;AACA,SAAQC,YAAR,EAAsBC,KAAtB,QAAkC,iBAAlC;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM;AAACC,IAAAA;AAAD,MAAOV,SAAS,EAAtB;AACA,QAAM;AAACW,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAkBhB,UAAU,CAACU,eAAD,CAAlC;AACA,QAAM;AAACO,IAAAA;AAAD,MAAgBZ,QAAQ,EAA9B;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiB,gBAAgB,GAAG,YAAY;AACjC,YAAMC,GAAG,GAAI,sEAAqEL,EAAG,EAArF;;AACA,UAAI;AACA,cAAMM,IAAI,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAUF,GAAV,EAAe;AAC9BG,UAAAA,OAAO,EAAE;AACL,6BAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;AAD1D;AADqB,SAAf,CAAnB;AAKAJ,QAAAA,IAAI,CAACK,MAAL,KAAgB,GAAhB,IAAuBT,OAAO,CAACI,IAAI,CAACM,IAAN,CAA9B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACM,IAAjB;AACH,OARD,CAQE,OAAOG,CAAP,EAAU;AACRF,QAAAA,OAAO,CAACC,GAAR,CAAY,wCAAwCd,EAApD;AACH;AACJ,KAbD;;AAcAI,IAAAA,gBAAgB;AACnB,GAhBQ,EAgBN,EAhBM,CAAT;AAiBA,sBACI,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAE,OAAf;AAAwB,IAAA,CAAC,EAAE,MAA3B;AAAmC,IAAA,IAAI,EAAE,OAAzC;AAAA,2BAEI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,CAAjB;AAAoB,MAAA,KAAK,EAAE,OAA3B;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAE,CAAZ;AAAe,QAAA,WAAW,EAAE,MAA5B;AAAoC,QAAA,QAAQ,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAA9C;AAAA,kBACKH,IAAI,IAAIA,IAAI,CAACe;AADlB;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAE,CAAZ;AAAe,QAAA,WAAW,EAAE,UAA5B;AAAwC,QAAA,QAAQ,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAE,CAAZ;AAAe,QAAA,WAAW,EAAE,QAA5B;AAAsC,QAAA,QAAQ,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,MAAD;AAAQ,QAAA,EAAE,EAAE,CAAZ;AAAe,QAAA,WAAW,EAAE,WAA5B;AAAyC,QAAA,QAAQ,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CApCD;;GAAMjB,U;UAEWT,S,EAESC,Q;;;KAJpBQ,U;AAsCN,eAAeA,UAAf","sourcesContent":["import {\r\n    Box,\r\n    Button, Checkbox,\r\n    Container,\r\n    Heading,\r\n    HStack,\r\n    IconButton, Select,\r\n    SimpleGrid,\r\n    Spacer,\r\n    Text,\r\n    Tooltip,\r\n    VStack\r\n} from \"@chakra-ui/react\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {useAdmin} from \"../../../hooks/useAuth\";\r\nimport {AddIcon, CopyIcon, DeleteIcon, EditIcon} from \"@chakra-ui/icons\";\r\nimport {QuizEditContext} from \"../../../providers/QuizEditProvider\";\r\nimport {AiOutlineTag, BsPen} from \"react-icons/all\";\r\n\r\nconst QuizEditor = () => {\r\n\r\n    const {id} = useParams();\r\n    const {quiz, setQuiz} = useContext(QuizEditContext);\r\n    const {setFullMode} = useAdmin();\r\n    useEffect(() => {\r\n        const fetchQuizDetails = async () => {\r\n            const url = `http://localhost:8080/api/v1/admin/quiz-management/managed-quizzes/${id}`;\r\n            try {\r\n                const resp = await axios.get(url, {\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\r\n                    }\r\n                })\r\n                resp.status === 200 && setQuiz(resp.data);\r\n                console.log(resp.data)\r\n            } catch (e) {\r\n                console.log(\"Failed to get quiz details with id \" + id);\r\n            }\r\n        }\r\n        fetchQuizDetails();\r\n    }, [])\r\n    return (\r\n        <VStack align={'start'} w={'100%'} minH={'100vh'}>\r\n\r\n            <HStack spacing={4} color={'white'}>\r\n                <Button px={4} colorScheme={'teal'} leftIcon={<EditIcon/>}>\r\n                    {quiz && quiz.title}\r\n                </Button>\r\n                <Button px={4} colorScheme={'linkedin'} leftIcon={<AddIcon/>}>New Question</Button>\r\n                <Button px={4} colorScheme={'purple'} leftIcon={<EditIcon/>}>Quiz title</Button>\r\n                <Button px={4} colorScheme={'messenger'} leftIcon={<EditIcon/>}>Quiz title</Button>\r\n            </HStack>\r\n\r\n        </VStack>\r\n    );\r\n}\r\n\r\nexport default QuizEditor;"]},"metadata":{},"sourceType":"module"}