{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { useAuth } from \"./hooks/useAuth\";\nimport Nav from \"./components/nav\";\nimport { useEffect, useState } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"stompjs\";\nimport Login from \"./components/login\";\nimport Quiz from \"./components/quiz\";\nimport Axios from \"axios\";\nimport QuestionModel from \"./classess/QuestionModel\";\nimport OptionModel from \"./classess/OptionModel\";\nimport QuizModel from \"./classess/QuizModel\";\nimport { PrivateRoute } from \"./routes/privateRoute\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    user\n  } = useAuth();\n  var stompClient;\n  const [inputValue, setinputValue] = useState(\"\");\n  const [quiz, setQuiz] = useState(null);\n\n  const fetchData = async () => {\n    //fetch quiz by code\n    Axios.get(\"http://localhost:8080/api/v1/public/quiz?code=vtrSzV\").then(resp => {\n      //if success\n      if (resp.status == 200) {\n        const data = resp.data;\n        let quiz = new QuizModel();\n        quiz.quizId = data.quizId;\n        quiz.title = data.title;\n        quiz.code = data.code;\n        let questions = []; //get questions\n\n        data.questions.forEach(questionItem => {\n          let question = new QuestionModel();\n          question.title = questionItem.title;\n          question.questionId = questionItem.questionId;\n          question.optionType = questionItem.optionType;\n          let options = []; //get options\n\n          questionItem.options.forEach(optionItem => {\n            let option = new OptionModel(optionItem.optionId, optionItem.content, optionItem.score);\n            options.push(option);\n          }); //add option to question\n\n          question.options = options; //add to list question\n\n          questions.push(question);\n        }); //add questions to quiz\n\n        quiz.questions = questions; //update state\n\n        setQuiz(quiz);\n        console.log(quiz);\n      }\n    });\n  };\n\n  useEffect(() => {\n    fetchData(); // try {\n    //     var sock = new SockJS(\"http://localhost:8081/ws\");\n    //     sock.onopen = function () {\n    //         console.log(\"open\");\n    //     };\n    //     sock.onclose = function () {\n    //         console.log(\"close\");\n    //     };\n    //     stompClient = Stomp.over(sock);\n    //     stompClient.connect(\n    //         {},\n    //         function (frame) {\n    //             console.log(\"connected: \" + frame);\n    //             // stompClient.subscribe('/topic/notification', function(notification){\n    //             //   refetchTanks(); // call fetch tanks -> can't use \"this\"\n    //             // })\n    //         },\n    //         function (err) {\n    //             console.log(\"err\", err);\n    //         }\n    //     );\n    //     stompClient.subscribe(\"/topic/messages\", (message) => {\n    //         console.log(\"MEssagege\");\n    //     });\n    // } catch (error) {}\n  });\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(PrivateRoute, {\n        path: \"/\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(Quiz, {\n          quiz: quiz\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"s+ggoSpfH5QuIsL3/yWXs9ecclw=\", false, function () {\n  return [useAuth];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/App.js"],"names":["BrowserRouter","Router","Switch","Route","useAuth","Nav","useEffect","useState","SockJS","Stomp","Login","Quiz","Axios","QuestionModel","OptionModel","QuizModel","PrivateRoute","App","user","stompClient","inputValue","setinputValue","quiz","setQuiz","fetchData","get","then","resp","status","data","quizId","title","code","questions","forEach","questionItem","question","questionId","optionType","options","optionItem","option","optionId","content","score","push","console","log"],"mappings":"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","sourcesContent":["import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { useAuth } from \"./hooks/useAuth\";\nimport Nav from \"./components/nav\";\nimport { useEffect, useState } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"stompjs\";\nimport Login from \"./components/login\";\nimport Quiz from \"./components/quiz\";\nimport Axios from \"axios\";\nimport QuestionModel from \"./classess/QuestionModel\";\nimport OptionModel from \"./classess/OptionModel\";\nimport QuizModel from \"./classess/QuizModel\";\nimport { PrivateRoute } from \"./routes/privateRoute\";\nfunction App() {\n    const { user } = useAuth();\n    var stompClient;\n    const [inputValue, setinputValue] = useState(\"\");\n    const [quiz, setQuiz] = useState(null);\n    const fetchData = async () => {\n        //fetch quiz by code\n        Axios.get(\"http://localhost:8080/api/v1/public/quiz?code=vtrSzV\").then(\n            (resp) => {\n                //if success\n                if (resp.status == 200) {\n                    const data = resp.data;\n                    let quiz = new QuizModel();\n                    quiz.quizId = data.quizId;\n                    quiz.title = data.title;\n                    quiz.code = data.code;\n                    let questions = [];\n                    //get questions\n                    data.questions.forEach((questionItem) => {\n                        let question = new QuestionModel();\n                        question.title = questionItem.title;\n                        question.questionId = questionItem.questionId;\n                        question.optionType = questionItem.optionType;\n                        let options = [];\n                        //get options\n                        questionItem.options.forEach((optionItem) => {\n                            let option = new OptionModel(\n                                optionItem.optionId,\n                                optionItem.content,\n                                optionItem.score\n                            );\n                            options.push(option);\n                        });\n                        //add option to question\n                        question.options = options;\n                        //add to list question\n                        questions.push(question);\n                    });\n                    //add questions to quiz\n                    quiz.questions = questions;\n                    //update state\n                    setQuiz(quiz);\n                    console.log(quiz);\n                }\n            }\n        );\n    };\n    useEffect(() => {\n        fetchData();\n        // try {\n        //     var sock = new SockJS(\"http://localhost:8081/ws\");\n        //     sock.onopen = function () {\n        //         console.log(\"open\");\n        //     };\n        //     sock.onclose = function () {\n        //         console.log(\"close\");\n        //     };\n        //     stompClient = Stomp.over(sock);\n        //     stompClient.connect(\n        //         {},\n        //         function (frame) {\n        //             console.log(\"connected: \" + frame);\n        //             // stompClient.subscribe('/topic/notification', function(notification){\n        //             //   refetchTanks(); // call fetch tanks -> can't use \"this\"\n        //             // })\n        //         },\n        //         function (err) {\n        //             console.log(\"err\", err);\n        //         }\n        //     );\n        //     stompClient.subscribe(\"/topic/messages\", (message) => {\n        //         console.log(\"MEssagege\");\n        //     });\n        // } catch (error) {}\n    });\n\n    return (\n        <Router>\n            <Switch>\n                <PrivateRoute path=\"/\" exact>\n                    <Quiz quiz={quiz} />\n                </PrivateRoute>\n                <Route path=\"/login\"></Route>\n            </Switch>\n            {/* <>\n                <Nav />\n                <Quiz quiz={quiz} />\n                {/* <Login /> */}\n        </Router>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}