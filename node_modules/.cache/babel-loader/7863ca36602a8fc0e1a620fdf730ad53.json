{"ast":null,"code":"import axiosClient from \"../api/axiosClient\";\nconst UserService = {\n  updateAvt: async file => {\n    const url = `/member/users/me/avt`;\n    let formData = new FormData();\n    formData.append(\"file\", file);\n    return axiosClient.post(url, formData, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  },\n  validateInput: async (input, value) => {\n    const url = process.env.REACT_APP_BASE_URL + `/public/validation-input?input=${input}&value=${value}`;\n    return axiosClient.get(url);\n  },\n  updateUser: async data => {\n    const url = process.env.REACT_APP_BASE_URL + `/member/users/me`;\n    return axiosClient.post(url, JSON.stringify(data), {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\n      }\n    });\n  },\n  getUserQuizzes: async () => {\n    const url = process.env.REACT_APP_BASE_URL + `/member/users/me/quizzes`;\n    return axiosClient.get(url, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`\n      }\n    });\n  },\n  getUserQuiz: async id => {\n    const url = `/member/users/me/quizzes/${id}`;\n    const data = axiosClient.get(url, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\n      }\n    });\n    return data;\n  },\n  removeUserQuiz: async quizId => {\n    const url = `/member/users/me/quizzes/${quizId}`;\n    return axiosClient.delete(url, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\n      }\n    });\n  }\n};\nexport default UserService;","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/service/UserService.js"],"names":["axiosClient","UserService","updateAvt","file","url","formData","FormData","append","post","headers","localStorage","getItem","validateInput","input","value","process","env","REACT_APP_BASE_URL","get","updateUser","data","JSON","stringify","getUserQuizzes","getUserQuiz","id","removeUserQuiz","quizId","delete"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,oBAAxB;AAEA,MAAMC,WAAW,GAAG;AAEhBC,EAAAA,SAAS,EAAE,MAAOC,IAAP,IAAgB;AACvB,UAAMC,GAAG,GAAI,sBAAb;AACA,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBJ,IAAxB;AACA,WAAOH,WAAW,CAACQ,IAAZ,CAAiBJ,GAAjB,EAAsBC,QAAtB,EAAgC;AACnCI,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC,EAD1D;AAEL,wBAAgB;AAFX;AAD0B,KAAhC,CAAP;AAMH,GAZe;AAchBC,EAAAA,aAAa,EAAE,OAAOC,KAAP,EAAcC,KAAd,KAAwB;AACnC,UAAMV,GAAG,GAAGW,OAAO,CAACC,GAAR,CAAYC,kBAAZ,GAAkC,kCAAiCJ,KAAM,UAASC,KAAM,EAApG;AACA,WAAOd,WAAW,CAACkB,GAAZ,CAAgBd,GAAhB,CAAP;AACH,GAjBe;AAkBhBe,EAAAA,UAAU,EAAE,MAAOC,IAAP,IAAgB;AACxB,UAAMhB,GAAG,GAAGW,OAAO,CAACC,GAAR,CAAYC,kBAAZ,GAAkC,kBAA9C;AACA,WAAOjB,WAAW,CAACQ,IAAZ,CAAiBJ,GAAjB,EAAsBiB,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAtB,EAA4C;AAC/CX,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;AAD1D;AADsC,KAA5C,CAAP;AAKH,GAzBe;AA0BhBY,EAAAA,cAAc,EAAE,YAAY;AACxB,UAAMnB,GAAG,GAAGW,OAAO,CAACC,GAAR,CAAYC,kBAAZ,GAAkC,0BAA9C;AACA,WAAOjB,WAAW,CAACkB,GAAZ,CAAgBd,GAAhB,EAAqB;AACxBK,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;AAD1D;AADe,KAArB,CAAP;AAKH,GAjCe;AAkChBa,EAAAA,WAAW,EAAE,MAAOC,EAAP,IAAc;AACvB,UAAMrB,GAAG,GAAI,4BAA2BqB,EAAG,EAA3C;AACA,UAAML,IAAI,GAAGpB,WAAW,CAACkB,GAAZ,CAAgBd,GAAhB,EAAqB;AAC9BK,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;AAD1D;AADqB,KAArB,CAAb;AAKA,WAAOS,IAAP;AACH,GA1Ce;AA2ChBM,EAAAA,cAAc,EAAE,MAAOC,MAAP,IAAkB;AAC9B,UAAMvB,GAAG,GAAI,4BAA2BuB,MAAO,EAA/C;AACA,WAAO3B,WAAW,CAAC4B,MAAZ,CAAmBxB,GAAnB,EAAwB;AAC3BK,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;AAD1D;AADkB,KAAxB,CAAP;AAMH;AAnDe,CAApB;AAqDA,eAAeV,WAAf","sourcesContent":["import axiosClient from \"../api/axiosClient\";\r\n\r\nconst UserService = {\r\n\r\n    updateAvt: async (file) => {\r\n        const url = `/member/users/me/avt`;\r\n        let formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        return axiosClient.post(url, formData, {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`,\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n    ,\r\n    validateInput: async (input, value) => {\r\n        const url = process.env.REACT_APP_BASE_URL + `/public/validation-input?input=${input}&value=${value}`;\r\n        return axiosClient.get(url);\r\n    },\r\n    updateUser: async (data) => {\r\n        const url = process.env.REACT_APP_BASE_URL + `/member/users/me`\r\n        return axiosClient.post(url, JSON.stringify(data), {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\r\n            }\r\n        })\r\n    },\r\n    getUserQuizzes: async () => {\r\n        const url = process.env.REACT_APP_BASE_URL + `/member/users/me/quizzes`;\r\n        return axiosClient.get(url, {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`\r\n            }\r\n        })\r\n    },\r\n    getUserQuiz: async (id) => {\r\n        const url = `/member/users/me/quizzes/${id}`;\r\n        const data = axiosClient.get(url, {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\r\n            }\r\n        })\r\n        return data;\r\n    },\r\n    removeUserQuiz: async (quizId) => {\r\n        const url = `/member/users/me/quizzes/${quizId}`;\r\n        return axiosClient.delete(url, {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\r\n            }\r\n        })\r\n\r\n    }\r\n}\r\nexport default UserService;"]},"metadata":{},"sourceType":"module"}