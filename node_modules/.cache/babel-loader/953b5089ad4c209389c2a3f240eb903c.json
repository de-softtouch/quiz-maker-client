{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\quiz maker client\\\\src\\\\pages\\\\admin\\\\assigned\\\\AssignedInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport { Box, Button, Divider, Flex, Heading, HStack, Icon, SimpleGrid, Text } from \"@chakra-ui/react\";\nimport UserService from \"../../../service/UserService\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { AdminContext } from \"../../../providers/AdminSettingProvider\";\nimport { formatDateDisplay, isOutDate } from \"../../../utils/ApplicationUtils\";\nimport { GrInfo } from 'react-icons/all';\nimport { AlertDialog, AlertDialogBody, AlertDialogFooter, AlertDialogHeader, AlertDialogContent, AlertDialogOverlay } from '@chakra-ui/react';\nimport { useAdmin } from \"../../../hooks/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AssignedInfo = () => {\n  _s();\n\n  const {\n    isLoading,\n    setLoading\n  } = useContext(AdminContext);\n  const {\n    setFullMode\n  } = useAdmin();\n  const {\n    id\n  } = useParams();\n  const [info, setInfo] = useState(null);\n  useEffect(() => {\n    getInfo();\n  }, []);\n  const history = useHistory(); //alert dialog properties\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const onClose = () => setIsOpen(false);\n\n  const cancelRef = useRef();\n\n  const getInfo = async () => {\n    try {\n      setLoading(true);\n      const resp = await UserService.getAssignedQuizInfo(id);\n      console.log(resp.data);\n      setInfo(resp.data);\n    } catch (e) {} finally {\n      setLoading(false);\n    }\n  };\n\n  const handleJoin = async () => {\n    setIsOpen(true);\n  };\n\n  const onStartQuiz = async () => {\n    if (!isLoading) {\n      const startDate = new Date(info.startDate);\n      const finishDate = new Date(info.finishDate);\n      const now = new Date();\n\n      if (now >= startDate && now < finishDate) {\n        history.push(`/admin/join/exam/quiz/${info.quiz.code}/start`);\n        console.log('trong khoang thoi gian thuc hien');\n      } else {\n        console.log('nam ngoai khoang thoi gian thuc hien');\n      }\n\n      setIsOpen(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    direction: 'column',\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        bg: 'white',\n        p: '5',\n        direction: 'column',\n        flex: 7,\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"TITLE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: info && info.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: formatDateDisplay(info && info.startDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: info && info.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          py: '2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          py: 2,\n          justifyContent: 'end',\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: \"Den han\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            w: '20px'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: formatDateDisplay(info && info.finishDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        w: '20px'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), !isLoading && info && /*#__PURE__*/_jsxDEV(Flex, {\n        bg: 'white',\n        p: '5',\n        direction: 'column',\n        justifyContent: 'space-between',\n        flex: 3,\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: 'medium',\n            children: info.status === 1 ? 'Da nop' : info.status === 0 && isOutDate(info.finishDate) ? 'Thieu' : 'Da giao'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          w: '100%',\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleJoin,\n            disabled: info.status == 1 || isOutDate(info.finishDate),\n            colorScheme: 'blue',\n            w: '100%',\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), !isLoading && info && /*#__PURE__*/_jsxDEV(Flex, {\n      p: '5',\n      bg: 'white',\n      my: 5,\n      direction: 'column',\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: info.quiz.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n        columns: 3,\n        spacing: 5,\n        children: [/*#__PURE__*/_jsxDEV(HStack, {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            as: GrInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: [info.quiz.numOfQuestions, \" Questions \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            as: GrInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: [\" Code : \", info.quiz.code, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            as: GrInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: [\"Create Date \", formatDateDisplay(info.quiz.createDate), \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            as: GrInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: [\"Quiz Score \", info.quiz.score, \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(AlertDialog, {\n      isOpen: isOpen,\n      leastDestructiveRef: cancelRef,\n      onClose: onClose,\n      children: /*#__PURE__*/_jsxDEV(AlertDialogOverlay, {\n        children: /*#__PURE__*/_jsxDEV(AlertDialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(AlertDialogHeader, {\n            fontSize: \"lg\",\n            fontWeight: \"bold\",\n            children: [\"Join quiz \", info.quiz.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AlertDialogBody, {\n            children: \"Are you sure? You can't undo this action afterwards.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AlertDialogFooter, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              ref: cancelRef,\n              onClick: onClose,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"red\",\n              onClick: onClose,\n              ml: 3,\n              children: \"OK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AssignedInfo, \"EqDowjUVPeaRAuvRG8SGCjhrDZ4=\", false, function () {\n  return [useAdmin, useParams, useHistory];\n});\n\n_c = AssignedInfo;\nexport default AssignedInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignedInfo\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/quiz maker client/src/pages/admin/assigned/AssignedInfo.js"],"names":["React","useContext","useEffect","useRef","useState","Box","Button","Divider","Flex","Heading","HStack","Icon","SimpleGrid","Text","UserService","useHistory","useParams","AdminContext","formatDateDisplay","isOutDate","GrInfo","AlertDialog","AlertDialogBody","AlertDialogFooter","AlertDialogHeader","AlertDialogContent","AlertDialogOverlay","useAdmin","AssignedInfo","isLoading","setLoading","setFullMode","id","info","setInfo","getInfo","history","isOpen","setIsOpen","onClose","cancelRef","resp","getAssignedQuizInfo","console","log","data","e","handleJoin","onStartQuiz","startDate","Date","finishDate","now","push","quiz","code","title","description","status","numOfQuestions","createDate","score"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useRef, useState} from 'react';\r\nimport {Box, Button, Divider, Flex, Heading, HStack, Icon, SimpleGrid, Text} from \"@chakra-ui/react\";\r\nimport UserService from \"../../../service/UserService\";\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport {AdminContext} from \"../../../providers/AdminSettingProvider\";\r\nimport {formatDateDisplay, isOutDate} from \"../../../utils/ApplicationUtils\";\r\nimport {GrInfo} from 'react-icons/all';\r\nimport {\r\n    AlertDialog,\r\n    AlertDialogBody,\r\n    AlertDialogFooter,\r\n    AlertDialogHeader,\r\n    AlertDialogContent,\r\n    AlertDialogOverlay,\r\n} from '@chakra-ui/react'\r\nimport {useAdmin} from \"../../../hooks/useAuth\";\r\n\r\nconst AssignedInfo = () => {\r\n    const {isLoading, setLoading} = useContext(AdminContext);\r\n    const{setFullMode} = useAdmin();\r\n    const {id} = useParams();\r\n\r\n    const [info, setInfo] = useState(null);\r\n    useEffect(() => {\r\n        getInfo();\r\n    }, []);\r\n\r\n    const history = useHistory();\r\n    //alert dialog properties\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const onClose = () => setIsOpen(false)\r\n    const cancelRef = useRef()\r\n\r\n    const getInfo = async () => {\r\n        try {\r\n            setLoading(true)\r\n            const resp = await UserService.getAssignedQuizInfo(id);\r\n            console.log(resp.data);\r\n            setInfo(resp.data);\r\n        } catch (e) {\r\n\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n    const handleJoin = async () =>{\r\n        setIsOpen(true);\r\n    }\r\n    const onStartQuiz = async () => {\r\n        if (!isLoading) {\r\n            const startDate = new Date(info.startDate);\r\n            const finishDate = new Date(info.finishDate);\r\n            const now = new Date();\r\n            if (now >= startDate && now < finishDate) {\r\n                history.push(`/admin/join/exam/quiz/${info.quiz.code}/start`);\r\n                console.log('trong khoang thoi gian thuc hien');\r\n            } else {\r\n                console.log('nam ngoai khoang thoi gian thuc hien')\r\n            }\r\n            setIsOpen(true);\r\n        }\r\n    }\r\n    return (\r\n        <Flex direction={'column'}>\r\n            <Flex>\r\n                <Flex bg={'white'} p={'5'} direction={'column'} flex={7}>\r\n                    <Heading>TITLE</Heading>\r\n                    <HStack>\r\n                        <Text>{info && info.title}</Text>\r\n                        <Text>{formatDateDisplay(info && info.startDate)}</Text>\r\n                    </HStack>\r\n                    <Text>{info && info.description}</Text>\r\n                    <Divider py={'2'}/>\r\n                    <Flex py={2} justifyContent={'end'}>\r\n                        <Text>Den han</Text>\r\n                        <Box w={'20px'}/>\r\n                        <Text>{formatDateDisplay(info && info.finishDate)}</Text>\r\n                    </Flex>\r\n                </Flex>\r\n                <Box w={'20px'}/>\r\n                {!isLoading && info &&\r\n                <Flex bg={'white'} p={'5'} direction={'column'} justifyContent={'space-between'} flex={3}>\r\n                    <Flex justifyContent={\"space-between\"}>\r\n                        <Text>Status</Text>\r\n                        <Text\r\n                            fontWeight={'medium'}>{info.status === 1 ? 'Da nop'\r\n                            : (info.status === 0 && isOutDate(info.finishDate) ? 'Thieu' : 'Da giao')}</Text>\r\n                    </Flex>\r\n                    <Box w={'100%'}>\r\n                        <Button\r\n                            onClick={handleJoin}\r\n                            disabled={info.status == 1 || isOutDate(info.finishDate)}\r\n                            colorScheme={'blue'} w={'100%'}>Start</Button>\r\n                    </Box>\r\n                </Flex>\r\n\r\n                }\r\n            </Flex>\r\n            {\r\n                !isLoading && info && (\r\n                    <Flex p={'5'} bg={'white'} my={5} direction={'column'}>\r\n                        <Heading>\r\n                            {info.quiz.title}\r\n                        </Heading>\r\n                        <SimpleGrid columns={3} spacing={5}>\r\n                            <HStack>\r\n                                <Icon as={GrInfo}/>\r\n                                <Text>{info.quiz.numOfQuestions} Questions </Text>\r\n                            </HStack>\r\n                            <HStack>\r\n                                <Icon as={GrInfo}/>\r\n                                <Text> Code : {info.quiz.code} </Text>\r\n                            </HStack>\r\n                            <HStack>\r\n                                <Icon as={GrInfo}/>\r\n                                <Text>Create Date {formatDateDisplay(info.quiz.createDate)}  </Text>\r\n                            </HStack>\r\n                            <HStack>\r\n                                <Icon as={GrInfo}/>\r\n                                <Text>Quiz Score {info.quiz.score}  </Text>\r\n                            </HStack>\r\n                        </SimpleGrid>\r\n                    </Flex>\r\n                )\r\n            }\r\n            <AlertDialog\r\n                isOpen={isOpen}\r\n                leastDestructiveRef={cancelRef}\r\n                onClose={onClose}\r\n            >\r\n                <AlertDialogOverlay>\r\n                    <AlertDialogContent>\r\n                        <AlertDialogHeader fontSize='lg' fontWeight='bold'>\r\n                            Join quiz {info.quiz.title}\r\n                        </AlertDialogHeader>\r\n\r\n                        <AlertDialogBody>\r\n                            Are you sure? You can't undo this action afterwards.\r\n                        </AlertDialogBody>\r\n\r\n                        <AlertDialogFooter>\r\n                            <Button ref={cancelRef} onClick={onClose}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button colorScheme='red' onClick={onClose} ml={3}>\r\n                                OK\r\n                            </Button>\r\n                        </AlertDialogFooter>\r\n                    </AlertDialogContent>\r\n                </AlertDialogOverlay>\r\n            </AlertDialog>\r\n        </Flex>\r\n    );\r\n};\r\n\r\nexport default AssignedInfo;"]},"metadata":{},"sourceType":"module"}