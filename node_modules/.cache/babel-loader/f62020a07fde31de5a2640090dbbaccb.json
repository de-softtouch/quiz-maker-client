{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\pages\\\\admin\\\\quiz_edit\\\\components\\\\NewQuestionDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box, Heading, Input, ModalOverlay, Textarea, VStack } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewQuestionDialog = ({\n  visible,\n  setVisible\n}) => {\n  _s();\n\n  const option = {\n    content: \"option contnt\"\n  };\n  const [options, setOptions] = useState([option, option]);\n\n  const onOptionChange = (e, index) => {\n    //last index\n    // options.map()\n    const mapped = options.map((option, i) => {\n      if (i === index) {\n        return { ...option,\n          content: e.target.value\n        };\n      }\n\n      return option;\n    });\n\n    if (index == mapped.length - 1) {\n      mapped.push({});\n    }\n\n    setOptions(mapped);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      onClick: () => setVisible(false),\n      zIndex: 1000,\n      bg: 'gray.600',\n      opacity: .5,\n      position: 'fixed',\n      right: 0,\n      top: 0,\n      minW: '100vw',\n      minH: '100vh'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      zIndex: 1001,\n      position: 'fixed',\n      right: '50%',\n      top: '40%',\n      bg: 'gray.100',\n      transform: \"translate(50%,-50%)\",\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        minW: 800,\n        p: 5,\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"Add questionss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          w: '100%',\n          children: /*#__PURE__*/_jsxDEV(Textarea, {\n            borderColor: 'black',\n            placeholder: \"Here is a sample placeholder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          w: '100%',\n          children: options.map((option, index) => /*#__PURE__*/_jsxDEV(Input, {\n            onChange: e => onOptionChange(e, index),\n            isFullWidth: true,\n            placeholder: \"option\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewQuestionDialog, \"/P6HqJ5RlqdU39376rPzStvdXDs=\");\n\n_c = NewQuestionDialog;\nexport default NewQuestionDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewQuestionDialog\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/pages/admin/quiz_edit/components/NewQuestionDialog.js"],"names":["React","useState","Box","Heading","Input","ModalOverlay","Textarea","VStack","NewQuestionDialog","visible","setVisible","option","content","options","setOptions","onOptionChange","e","index","mapped","map","i","target","value","length","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,GAAR,EAAaC,OAAb,EAAsBC,KAAtB,EAA6BC,YAA7B,EAA2CC,QAA3C,EAAqDC,MAArD,QAAkE,kBAAlE;;;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAA2B;AAAA;;AAEjD,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AADE,GAAf;AAGA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,CAACU,MAAD,EAASA,MAAT,CAAD,CAAtC;;AAEA,QAAMI,cAAc,GAAG,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACjC;AACA;AACA,UAAMC,MAAM,GAAGL,OAAO,CAACM,GAAR,CAAY,CAACR,MAAD,EAASS,CAAT,KAAe;AACtC,UAAIA,CAAC,KAAKH,KAAV,EAAiB;AACb,eAAO,EACH,GAAGN,MADA;AAEHC,UAAAA,OAAO,EAAEI,CAAC,CAACK,MAAF,CAASC;AAFf,SAAP;AAIH;;AACD,aAAOX,MAAP;AACH,KARc,CAAf;;AASA,QAAIM,KAAK,IAAIC,MAAM,CAACK,MAAP,GAAgB,CAA7B,EAAgC;AAC5BL,MAAAA,MAAM,CAACM,IAAP,CAAY,EAAZ;AACH;;AACDV,IAAAA,UAAU,CAACI,MAAD,CAAV;AACH,GAhBD;;AAiBA,sBACI;AAAA,4BACI,QAAC,GAAD;AACI,MAAA,OAAO,EAAE,MAAMR,UAAU,CAAC,KAAD,CAD7B;AAEI,MAAA,MAAM,EAAE,IAFZ;AAGI,MAAA,EAAE,EAAE,UAHR;AAII,MAAA,OAAO,EAAE,EAJb;AAKI,MAAA,QAAQ,EAAE,OALd;AAMI,MAAA,KAAK,EAAE,CANX;AAOI,MAAA,GAAG,EAAE,CAPT;AAQI,MAAA,IAAI,EAAE,OARV;AASI,MAAA,IAAI,EAAE;AATV;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI,QAAC,GAAD;AAAK,MAAA,MAAM,EAAE,IAAb;AACK,MAAA,QAAQ,EAAE,OADf;AAEK,MAAA,KAAK,EAAE,KAFZ;AAGK,MAAA,GAAG,EAAE,KAHV;AAIK,MAAA,EAAE,EAAE,UAJT;AAKK,MAAA,SAAS,EAAE,qBALhB;AAAA,6BAOI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,GAAd;AAAmB,QAAA,CAAC,EAAE,CAAtB;AAAA,gCACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,GAAD;AAAK,UAAA,CAAC,EAAE,MAAR;AAAA,iCACI,QAAC,QAAD;AAAU,YAAA,WAAW,EAAE,OAAvB;AAAgC,YAAA,WAAW,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAKI,QAAC,MAAD;AAAQ,UAAA,CAAC,EAAE,MAAX;AAAA,oBAEQG,OAAO,CAACM,GAAR,CAAY,CAACR,MAAD,EAASM,KAAT,kBACR,QAAC,KAAD;AACI,YAAA,QAAQ,EAAGD,CAAD,IAAOD,cAAc,CAACC,CAAD,EAAIC,KAAJ,CADnC;AAGI,YAAA,WAAW,EAAE,IAHjB;AAGuB,YAAA,WAAW,EAAE;AAHpC,aAESA,KAFT;AAAA;AAAA;AAAA;AAAA,kBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA,kBADJ;AAsCH,CA9DD;;GAAMT,iB;;KAAAA,iB;AAgEN,eAAeA,iBAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {Box, Heading, Input, ModalOverlay, Textarea, VStack} from \"@chakra-ui/react\";\r\n\r\nconst NewQuestionDialog = ({visible, setVisible}) => {\r\n\r\n    const option = {\r\n        content: \"option contnt\"\r\n    }\r\n    const [options, setOptions] = useState([option, option]);\r\n\r\n    const onOptionChange = (e, index) => {\r\n        //last index\r\n        // options.map()\r\n        const mapped = options.map((option, i) => {\r\n            if (i === index) {\r\n                return {\r\n                    ...option,\r\n                    content: e.target.value,\r\n                }\r\n            }\r\n            return option;\r\n        })\r\n        if (index == mapped.length - 1) {\r\n            mapped.push({});\r\n        }\r\n        setOptions(mapped);\r\n    }\r\n    return (\r\n        <>\r\n            <Box\r\n                onClick={() => setVisible(false)}\r\n                zIndex={1000}\r\n                bg={'gray.600'}\r\n                opacity={.5}\r\n                position={'fixed'}\r\n                right={0}\r\n                top={0}\r\n                minW={'100vw'}\r\n                minH={'100vh'}/>\r\n            <Box zIndex={1001}\r\n                 position={'fixed'}\r\n                 right={'50%'}\r\n                 top={'40%'}\r\n                 bg={'gray.100'}\r\n                 transform={\"translate(50%,-50%)\"}\r\n            >\r\n                <VStack minW={800} p={5}>\r\n                    <Heading>Add questionss</Heading>\r\n                    <Box w={'100%'}>\r\n                        <Textarea borderColor={'black'} placeholder=\"Here is a sample placeholder\"/>\r\n                    </Box>\r\n                    <VStack w={'100%'}>\r\n                        {\r\n                            options.map((option, index) => (\r\n                                <Input\r\n                                    onChange={(e) => onOptionChange(e, index)}\r\n                                    key={index}\r\n                                    isFullWidth={true} placeholder={\"option\"}/>\r\n                            ))\r\n                        }\r\n                    </VStack>\r\n                </VStack>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewQuestionDialog;"]},"metadata":{},"sourceType":"module"}