{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\quiz maker client\\\\src\\\\pages\\\\admin\\\\assigment\\\\AssignedUserReport.js\";\nimport React from 'react';\nimport { Avatar, Button, Divider, HStack, IconButton, ListItem, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, OrderedList, Spacer, Text, Tooltip, VStack } from \"@chakra-ui/react\";\nimport { BsCheck, FaUsers } from \"react-icons/all\";\nimport { DeleteIcon } from \"@chakra-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AssignedUserReport = ({\n  users,\n  isOpen,\n  setOpen\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      size: 'md',\n      onClose: () => {},\n      scrollBehavior: 'inside',\n      closeOnOverlayClick: true,\n      isOpen: isOpen,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            w: '100%',\n            align: 'start',\n            children: [/*#__PURE__*/_jsxDEV(HStack, {\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                fontSize: 15,\n                fontWeight: 'medium',\n                children: [\"Assigned Users (\", users && users.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FaUsers, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {\n          onClick: () => setOpen(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(OrderedList, {\n            children: users && users.map((user, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(HStack, {\n                w: '100%',\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  size: 'xs',\n                  name: user.userInfo.fullName,\n                  src: user.avt\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  children: user.userInfo.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 45\n                }, this), user.complete && /*#__PURE__*/_jsxDEV(Tooltip, {\n                  label: 'completed',\n                  children: /*#__PURE__*/_jsxDEV(BsCheck, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 49,\n                    columnNumber: 92\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 63\n                }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(IconButton // onClick={() => onRemoveUser(user.userId)}\n                , {\n                  bg: 'white',\n                  color: 'gray.500',\n                  icon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 87\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 41\n              }, this)\n            }, user.userInfo.email, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpen(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = AssignedUserReport;\nexport default AssignedUserReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignedUserReport\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/quiz maker client/src/pages/admin/assigment/AssignedUserReport.js"],"names":["React","Avatar","Button","Divider","HStack","IconButton","ListItem","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","OrderedList","Spacer","Text","Tooltip","VStack","BsCheck","FaUsers","DeleteIcon","AssignedUserReport","users","isOpen","setOpen","length","map","user","i","userInfo","fullName","avt","email","complete"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Divider,\r\n    HStack, IconButton, ListItem,\r\n    Modal, ModalBody,\r\n    ModalCloseButton,\r\n    ModalContent, ModalFooter,\r\n    ModalHeader,\r\n    ModalOverlay, OrderedList, Spacer,\r\n    Text, Tooltip,\r\n    VStack\r\n} from \"@chakra-ui/react\";\r\nimport {BsCheck, FaUsers} from \"react-icons/all\";\r\nimport {DeleteIcon} from \"@chakra-ui/icons\";\r\n\r\nconst AssignedUserReport = ({users, isOpen, setOpen}) => {\r\n    return (\r\n        <>\r\n            <Modal size={'md'} onClose={() => {\r\n            }} scrollBehavior={'inside'} closeOnOverlayClick={true} isOpen={isOpen}>\r\n                <ModalOverlay/>\r\n                <ModalContent>\r\n                    <ModalHeader\r\n                    >\r\n                        <VStack w={'100%'} align={'start'}>\r\n                            <HStack>\r\n                                <Text fontSize={15} fontWeight={'medium'}>Assigned Users\r\n                                    ({users && users.length})</Text>\r\n                                <FaUsers/>\r\n                            </HStack>\r\n                            <Divider/>\r\n                        </VStack>\r\n                    </ModalHeader>\r\n                    <ModalCloseButton onClick={() => setOpen(false)}/>\r\n                    <ModalBody>\r\n                        <OrderedList>\r\n                            {\r\n                                users && users.map((user, i) => (\r\n                                    <ListItem key={user.userInfo.email}>\r\n                                        <HStack w={'100%'}>\r\n                                            <Avatar\r\n                                                size={'xs'}\r\n                                                name={user.userInfo.fullName}\r\n                                                src={user.avt}\r\n                                            />\r\n                                            <Text>{user.userInfo.email}</Text>\r\n                                            {user.complete && <Tooltip label={'completed'}><BsCheck/></Tooltip>}\r\n\r\n                                            <Spacer/>\r\n                                            <IconButton\r\n                                                // onClick={() => onRemoveUser(user.userId)}\r\n                                                bg={'white'} color={'gray.500'} icon={<DeleteIcon/>}/>\r\n                                        </HStack>\r\n                                    </ListItem>\r\n                                ))\r\n                            }\r\n\r\n                        </OrderedList>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        {/*<Button colorScheme=\"blue\" mr={3}>*/}\r\n                        {/*    Save*/}\r\n                        {/*</Button>*/}\r\n                        <Button onClick={() => setOpen(false)}>Close</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AssignedUserReport;"]},"metadata":{},"sourceType":"module"}