{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\components\\\\create_question\\\\CreateQuestionPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box, Button, Center, Checkbox, Container, Flex, Grid, GridItem, Heading, HStack, IconButton, Image, Input, SimpleGrid, Spacer, Text, Tooltip, VStack } from \"@chakra-ui/react\";\nimport { AddIcon, ArrowBackIcon, CopyIcon, DeleteIcon, EditIcon, TimeIcon, ViewIcon } from \"@chakra-ui/icons\";\nimport CreateQuizDialog from \"../home/CreateQuizDialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateQuestionPage = () => {\n  _s();\n\n  const [showCreateQuiz, setShowCreateQuiz] = useState(false);\n  const [showQuestionTypeDialog, setShowQT] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    align: 'center',\n    bg: '#F7FAFC',\n    minH: '100vh',\n    children: [showCreateQuiz && /*#__PURE__*/_jsxDEV(CreateQuizDialog, {\n      setShow: setShowCreateQuiz,\n      onClose: () => {\n        setShowCreateQuiz(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      bg: '#F7FAFC',\n      position: 'fixed',\n      top: 0,\n      zIndex: 10000,\n      align: 'start',\n      w: '100%',\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        maxH: '70px',\n        bg: 'teal.600',\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          p: 4,\n          children: [/*#__PURE__*/_jsxDEV(ArrowBackIcon, {\n            fontSize: 35\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: \"Editted 1 minute ago\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Publish\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        maxH: '200px',\n        ml: 10 // position={'absolute'}\n        // top={0}\n        ,\n        bg: 'white' // maxW={'600px'}\n        ,\n        boxShadow: 'md',\n        borderBottomRadius: '3xl',\n        bg: 'red',\n        maxW: '1080px' // p={10}\n        ,\n        p: 8,\n        children: /*#__PURE__*/_jsxDEV(HStack, {\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(VStack, {\n            w: '400px',\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              alignSelf: 'start',\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              isFullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(VStack, {\n            align: 'end',\n            w: '200px',\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: \"Create question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              size: 'md',\n              rightIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 60\n              }, this),\n              variant: 'solid',\n              colorScheme: 'teal',\n              children: \"Add question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      mt: '200px',\n      alignItems: 'center',\n      justifyContent: 'center',\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        minH: '70vh',\n        flex: '7',\n        justifyItems: 'start',\n        justifyContent: 'start',\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          maxW: '1080px',\n          position: 'relative',\n          alignSelf: 'start',\n          direction: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            minH: '20px'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), showQuestionTypeDialog && /*#__PURE__*/_jsxDEV(SimpleGrid, {\n            h: '100%',\n            p: '10',\n            bg: 'white',\n            align: 'center',\n            justifyContent: 'center',\n            justifyItems: 'center',\n            minChildWidth: \"100px\",\n            maxW: '500px',\n            spacing: 2,\n            children: [1, 2, 2, 2, 2, 2].map((item, index) => /*#__PURE__*/_jsxDEV(VStack, {\n              cursor: 'pointer',\n              children: [/*#__PURE__*/_jsxDEV(Image, {\n                boxSize: \"80px\",\n                objectFit: \"cover\",\n                src: \"https://cdn-icons-png.flaticon.com/512/1168/1168671.png\",\n                alt: \"Segun Adebayo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: 15,\n                color: 'gray.600',\n                fontWeight: 'medium',\n                children: \"Checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), [1, 2, 2, 2, 2, 2].map((item, i) => /*#__PURE__*/_jsxDEV(Box, {\n            my: 5,\n            borderRadius: 'md',\n            align: 'start',\n            textAlign: 'start',\n            h: '100%',\n            bg: 'teal',\n            maxW: '600px',\n            minW: '600px',\n            children: [/*#__PURE__*/_jsxDEV(HStack, {\n              p: 2,\n              bg: 'gray.200',\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                children: \"Question1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                icon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 59\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                icon: /*#__PURE__*/_jsxDEV(CopyIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 59\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(VStack, {\n              align: 'start',\n              p: 2,\n              spacing: 5,\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                children: \"This is question 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n                columns: 2,\n                spacing: 2,\n                children: [1, 2, 3, 4].map((item, index) =>\n                /*#__PURE__*/\n                // <Container key={index} maxW=\"container.lg\">\n                //     <Checkbox size={'md'}>\n                //         This is question1asdfffffffffffffffffffffffffffffffffff\n                //     </Checkbox>\n                // </Container>\n                _jsxDEV(Container, {\n                  maxW: \"xl\",\n                  centerContent: true,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    padding: \"1\",\n                    maxW: \"3xl\",\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      size: 'sm',\n                      children: \"There are many benefits to a joint design and development system. Not only does it bring benefits to the design team.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 53\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 37\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        alignSelf: 'start',\n        minH: '70vh',\n        flex: '3',\n        justifyItems: 'start',\n        justifyContent: 'start',\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          bg: 'white',\n          p: 5,\n          borderRadius: 'md',\n          maxW: '300px',\n          w: '100%',\n          boxShadow: 'md',\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 5,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: 'file'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(HStack, {\n              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                label: 'Quiz title',\n                children: /*#__PURE__*/_jsxDEV(Heading, {\n                  fontWeight: 'medium',\n                  fontSize: '25px',\n                  children: \"This is quiz title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                colorScheme: 'teal',\n                onClick: () => {\n                  setShowCreateQuiz(true);\n                },\n                icon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 43\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(HStack, {\n              children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                label: 'Public: visible to everyone ;\\n Private: visible to you and shared ones',\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: 'sm',\n                  leftIcon: /*#__PURE__*/_jsxDEV(ViewIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 67\n                  }, this),\n                  variant: 'solid',\n                  colorScheme: 'white',\n                  color: 'blue.400',\n                  children: \"public\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                label: 'Default time for all questions',\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: 'sm',\n                  leftIcon: /*#__PURE__*/_jsxDEV(TimeIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 67\n                  }, this),\n                  variant: 'solid',\n                  colorScheme: 'white',\n                  color: 'blue.400',\n                  children: \"30 secs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateQuestionPage, \"eb2H5x+TCguyblfE1LUf5g76oHw=\");\n\n_c = CreateQuestionPage;\nexport default CreateQuestionPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateQuestionPage\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/components/create_question/CreateQuestionPage.js"],"names":["React","useState","Box","Button","Center","Checkbox","Container","Flex","Grid","GridItem","Heading","HStack","IconButton","Image","Input","SimpleGrid","Spacer","Text","Tooltip","VStack","AddIcon","ArrowBackIcon","CopyIcon","DeleteIcon","EditIcon","TimeIcon","ViewIcon","CreateQuizDialog","CreateQuestionPage","showCreateQuiz","setShowCreateQuiz","showQuestionTypeDialog","setShowQT","map","item","index","i"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Center, Checkbox, Container,\r\n    Flex,\r\n    Grid,\r\n    GridItem,\r\n    Heading,\r\n    HStack, IconButton,\r\n    Image, Input,\r\n    SimpleGrid, Spacer,\r\n    Text, Tooltip,\r\n    VStack\r\n} from \"@chakra-ui/react\";\r\nimport {AddIcon, ArrowBackIcon, CopyIcon, DeleteIcon, EditIcon, TimeIcon, ViewIcon} from \"@chakra-ui/icons\";\r\nimport CreateQuizDialog from \"../home/CreateQuizDialog\";\r\n\r\nconst CreateQuestionPage = () => {\r\n\r\n    const [showCreateQuiz, setShowCreateQuiz] = useState(false);\r\n    const [showQuestionTypeDialog, setShowQT] = useState(false);\r\n\r\n    return (\r\n        <Box\r\n            align={'center'}\r\n            bg={'#F7FAFC'}\r\n            minH={'100vh'}>\r\n\r\n            {/*Show edit quiz dialog*/}\r\n            {\r\n                showCreateQuiz &&\r\n                <CreateQuizDialog\r\n                    setShow={setShowCreateQuiz}\r\n                    onClose={() => {\r\n                        setShowCreateQuiz(false);\r\n                    }}/>\r\n            }\r\n\r\n\r\n            {/*Header*/}\r\n            <Box  bg={'#F7FAFC'} position={'fixed'} top={0} zIndex={10000} align={'start'}  w={'100%'}>\r\n                <Box maxH={'70px'} bg={'teal.600'}>\r\n                    <Flex alignItems={'center'} justifyContent={'space-between'} p={4}>\r\n                        <ArrowBackIcon fontSize={35}/>\r\n                        <Text>Editted 1 minute ago</Text>\r\n                        <Button>Publish</Button>\r\n                    </Flex>\r\n                </Box>\r\n                <Box\r\n                    maxH={'200px'}\r\n                    ml={10}\r\n                    // position={'absolute'}\r\n                    // top={0}\r\n                    bg={'white'}\r\n                    // maxW={'600px'}\r\n                    boxShadow={'md'}\r\n                    borderBottomRadius={'3xl'}\r\n                    bg={'red'}\r\n                    maxW={'1080px'}\r\n                    // p={10}\r\n                    p={8}\r\n                >\r\n                    <HStack spacing={4}>\r\n                        <VStack w={'400px'}\r\n\r\n                        >\r\n                            <Text alignSelf={'start'}>Search</Text>\r\n                            <Input isFullWidth={true}/>\r\n                        </VStack>\r\n                        <VStack align={'end'} w={'200px'}>\r\n                            <Text>Create question</Text>\r\n                            <Button size={'md'} rightIcon={<AddIcon/>} variant={'solid'} colorScheme={'teal'}>Add\r\n                                question</Button>\r\n                        </VStack>\r\n                    </HStack>\r\n                </Box>\r\n            </Box>\r\n\r\n            {/*    Content*/}\r\n            <Flex mt={'200px'} alignItems={'center'} justifyContent={'center'}>\r\n                {/**/}\r\n                <Box  minH={'70vh'} flex={'7'} justifyItems={'start'} justifyContent={'start'}>\r\n                    <Flex maxW={'1080px'} position={'relative'} alignSelf={'start'} direction={'column'} justifyContent={'center'} alignItems={'center'}>\r\n                        {/*Create question dialog*/}\r\n                        <Box minH={'20px'}/>\r\n                        {/*Question type dialog*/}\r\n                        {showQuestionTypeDialog &&\r\n                        <SimpleGrid\r\n                            h={'100%'}\r\n                            p={'10'}\r\n                            bg={'white'}\r\n                            align={'center'}\r\n                            justifyContent={'center'}\r\n                            justifyItems={'center'}\r\n                            minChildWidth=\"100px\"\r\n                            maxW={'500px'}\r\n                            spacing={2}>\r\n                            {\r\n                                [1, 2, 2, 2, 2, 2].map((item, index) => (\r\n                                    <VStack cursor={'pointer'} key={index}>\r\n                                        <Image\r\n                                            boxSize=\"80px\"\r\n                                            objectFit=\"cover\"\r\n                                            src=\"https://cdn-icons-png.flaticon.com/512/1168/1168671.png\"\r\n                                            alt=\"Segun Adebayo\"\r\n                                        />\r\n                                        <Text\r\n                                            fontSize={15}\r\n                                            color={'gray.600'}\r\n                                            fontWeight={'medium'}\r\n                                        >Checkbox</Text>\r\n                                    </VStack>\r\n                                ))\r\n                            }\r\n                        </SimpleGrid>\r\n                        }\r\n                        {/*    Created answers*/}\r\n                        {\r\n                            [1,2,2,2,2,2,].map((item,i)=>(\r\n                                <Box key={i} my={5} borderRadius={'md'} align={'start'} textAlign={'start'} h={'100%'} bg={'teal'} maxW={'600px'}\r\n                                     minW={'600px'}>\r\n                                    {/*Edit bar*/}\r\n                                    <HStack   p={2} bg={'gray.200'}>\r\n                                        <Text>Question1</Text>\r\n                                        <Spacer/>\r\n                                        <Button>Edit</Button>\r\n                                        <IconButton icon={<DeleteIcon/>}/>\r\n                                        <IconButton icon={<CopyIcon/>}/>\r\n                                    </HStack>\r\n                                    <VStack align={'start'} p={2} spacing={5}>\r\n                                        {/*    Question title*/}\r\n                                        <Text>This is question 1</Text>\r\n                                        <SimpleGrid  columns={2} spacing={2}>\r\n                                            {\r\n                                                [1,2,3,4].map((item,index)=>(\r\n                                                    // <Container key={index} maxW=\"container.lg\">\r\n                                                    //     <Checkbox size={'md'}>\r\n                                                    //         This is question1asdfffffffffffffffffffffffffffffffffff\r\n                                                    //     </Checkbox>\r\n                                                    // </Container>\r\n\r\n                                                    <Container maxW=\"xl\" centerContent>\r\n                                                        <Box padding=\"1\"  maxW=\"3xl\">\r\n                                                            <Checkbox size={'sm'}>\r\n                                                                There are many benefits to a joint design and development system. Not only\r\n                                                                does it bring benefits to the design team.\r\n                                                            </Checkbox>\r\n\r\n                                                        </Box>\r\n                                                    </Container>\r\n                                                ))\r\n                                            }\r\n\r\n\r\n                                        </SimpleGrid>\r\n                                    </VStack>\r\n                                </Box>\r\n                            ))\r\n                        }\r\n                    </Flex>\r\n                </Box>\r\n                {/*Right Side Bar*/}\r\n                <Box alignSelf={'start'} minH={'70vh'} flex={'3'} justifyItems={'start'} justifyContent={'start'}>\r\n                    <Box bg={'white'} p={5} borderRadius={'md'} maxW={'300px'} w={'100%'} boxShadow={'md'}>\r\n                        <VStack spacing={5}>\r\n                            <Input type={'file'}/>\r\n                            <HStack>\r\n                                <Tooltip label={'Quiz title'}>\r\n                                    <Heading fontWeight={'medium'} fontSize={'25px'}>This is quiz title</Heading>\r\n                                </Tooltip>\r\n                                <IconButton\r\n                                    colorScheme={'teal'}\r\n                                    onClick={() => {\r\n                                        setShowCreateQuiz(true)\r\n                                    }}\r\n                                    icon={<EditIcon/>}/>\r\n                            </HStack>\r\n                            <HStack>\r\n                                <Tooltip\r\n                                    label={'Public: visible to everyone ;\\n Private: visible to you and shared ones'}>\r\n                                    <Button size={'sm'} leftIcon={<ViewIcon/>} variant={'solid'}\r\n                                            colorScheme={'white'} color={'blue.400'}>public</Button>\r\n                                </Tooltip>\r\n                                <Tooltip label={'Default time for all questions'}>\r\n                                    <Button size={'sm'} leftIcon={<TimeIcon/>} variant={'solid'}\r\n                                            colorScheme={'white'} color={'blue.400'}>30 secs</Button>\r\n                                </Tooltip>\r\n                            </HStack>\r\n\r\n                        </VStack>\r\n                    </Box>\r\n                </Box>\r\n\r\n            </Flex>\r\n\r\n\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default CreateQuestionPage;"]},"metadata":{},"sourceType":"module"}