{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\hooks\\\\useAuth.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useContext, createContext, useEffect } from \"react\";\nimport Axios from \"axios\"; // Provider hook that creates auth object and handle state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setAuthenticated] = useState(false); //login\n\n  const login = async (username, password) => {\n    //    login get user details\n    let resp = await Axios.post(\"http://localhost:8080/api/v1/authenticate/login\", {\n      \"email\": username,\n      \"password\": password\n    });\n\n    if (resp.status == 200) {\n      let user = resp.data.user;\n      localStorage.setItem(\"user\", JSON.stringify(user)); //save access token\n\n      let accessToken = resp.data.access_token;\n      localStorage.setItem(\"accessToken\", accessToken); //save refresh token\n\n      let refreshToken = resp.data.refresh_token;\n      localStorage.setItem(\"refreshToken\", refreshToken);\n      console.log('sign in success');\n      return true;\n    }\n\n    console.log(\"Sign in falied\");\n    return false;\n  };\n\n  const logout = () => {\n    localStorage.removeItem('user');\n  }; //check access token\n\n\n  const getUserDetails = () => {}; //create value\n\n\n  const value = {\n    user,\n    setUser,\n    login,\n    isAuthenticated,\n    setAuthenticated\n  };\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}; //create auth context\n\n_s(AuthProvider, \"jAGKBtN2Q0Jh/5moBDqPI9an70M=\");\n\n_c = AuthProvider;\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s2();\n\n  return useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/hooks/useAuth.js"],"names":["React","useState","useContext","createContext","useEffect","Axios","AuthProvider","children","user","setUser","isAuthenticated","setAuthenticated","login","username","password","resp","post","status","data","localStorage","setItem","JSON","stringify","accessToken","access_token","refreshToken","refresh_token","console","log","logout","removeItem","getUserDetails","value","AuthContext","useAuth"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,aAArC,EAAoDC,SAApD,QAAoE,OAApE;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;AACA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACS,eAAD,EAAkBC,gBAAlB,IAAsCV,QAAQ,CAAC,KAAD,CAApD,CAFwC,CAGxC;;AACA,QAAMW,KAAK,GAAG,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAExC;AACA,QAAIC,IAAI,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,iDAAX,EAA8D;AAC3E,eAASH,QADkE;AAE3E,kBAAYC;AAF+D,KAA9D,CAAjB;;AAIA,QAAIC,IAAI,CAACE,MAAL,IAAe,GAAnB,EAAwB;AACpB,UAAIT,IAAI,GAAGO,IAAI,CAACG,IAAL,CAAUV,IAArB;AACAW,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAed,IAAf,CAA7B,EAFoB,CAGpB;;AACA,UAAIe,WAAW,GAAGR,IAAI,CAACG,IAAL,CAAUM,YAA5B;AACAL,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCG,WAApC,EALoB,CAMpB;;AACA,UAAIE,YAAY,GAAGV,IAAI,CAACG,IAAL,CAAUQ,aAA7B;AACAP,MAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCK,YAArC;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,aAAO,IAAP;AACH;;AAGDD,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,WAAO,KAAP;AAEH,GAxBD;;AAyBA,QAAMC,MAAM,GAAG,MAAM;AACjBV,IAAAA,YAAY,CAACW,UAAb,CAAwB,MAAxB;AACH,GAFD,CA7BwC,CAgCxC;;;AACA,QAAMC,cAAc,GAAG,MAAM,CAE5B,CAFD,CAjCwC,CAoCxC;;;AACA,QAAMC,KAAK,GAAG;AACVxB,IAAAA,IADU;AAEVC,IAAAA,OAFU;AAGVG,IAAAA,KAHU;AAIVF,IAAAA,eAJU;AAKVC,IAAAA;AALU,GAAd;AAOAP,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,CAAT;AAEA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE4B,KAA7B;AAAA,cAAqCzB;AAArC;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAjDM,C,CAkDP;;GAlDaD,Y;;KAAAA,Y;AAmDb,MAAM2B,WAAW,gBAAG9B,aAAa,EAAjC;AAEA,OAAO,MAAM+B,OAAO,GAAG,MAAM;AAAA;;AACzB,SAAOhC,UAAU,CAAC+B,WAAD,CAAjB;AACH,CAFM;;IAAMC,O","sourcesContent":["import React, {useState, useContext, createContext, useEffect} from \"react\";\r\nimport Axios from \"axios\";\r\n\r\n// Provider hook that creates auth object and handle state\r\nexport const AuthProvider = ({children}) => {\r\n    const [user, setUser] = useState(null);\r\n    const [isAuthenticated, setAuthenticated] = useState(false);\r\n    //login\r\n    const login = async (username, password) => {\r\n\r\n        //    login get user details\r\n        let resp = await Axios.post(\"http://localhost:8080/api/v1/authenticate/login\", {\r\n            \"email\": username,\r\n            \"password\": password\r\n        });\r\n        if (resp.status == 200) {\r\n            let user = resp.data.user;\r\n            localStorage.setItem(\"user\", JSON.stringify(user));\r\n            //save access token\r\n            let accessToken = resp.data.access_token;\r\n            localStorage.setItem(\"accessToken\", accessToken);\r\n            //save refresh token\r\n            let refreshToken = resp.data.refresh_token;\r\n            localStorage.setItem(\"refreshToken\", refreshToken);\r\n            console.log('sign in success');\r\n            return true;\r\n        }\r\n\r\n\r\n        console.log(\"Sign in falied\");\r\n        return false;\r\n\r\n    };\r\n    const logout = () => {\r\n        localStorage.removeItem('user');\r\n    }\r\n    //check access token\r\n    const getUserDetails = () => {\r\n\r\n    }\r\n    //create value\r\n    const value = {\r\n        user,\r\n        setUser,\r\n        login,\r\n        isAuthenticated,\r\n        setAuthenticated,\r\n    };\r\n    useEffect(() => {\r\n    });\r\n    return (\r\n        <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\r\n    );\r\n};\r\n//create auth context\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}