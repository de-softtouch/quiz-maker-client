{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./App.css\";\nimport { useAuth } from \"./hooks/useAuth\";\nimport Nav from \"./components/nav\";\nimport { useEffect, useState } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"stompjs\";\nimport Login from \"./components/login\";\nimport Quiz from \"./components/quiz\";\nimport Axios from \"axios\";\nimport QuestionModel from \"./classess/QuestionModel\";\nimport OptionModel from \"./classess/OptionModel\";\nimport QuizModel from \"./classess/QuizModel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const {\n    user\n  } = useAuth();\n  var stompClient;\n  const [inputValue, setinputValue] = useState(\"\");\n\n  const fetchData = async () => {\n    Axios.get(\"http://localhost:8080/api/v1/public/quiz?code=vtrSzV\").then(resp => {\n      if (resp.status == 200) {\n        const data = resp.data;\n        let questionList = [];\n        data.questions.forEach(question => {\n          let q = new QuestionModel();\n          q.title = question.title;\n          q.questionId = question.questionId;\n          q.optionType = question.optionType;\n          let optionList = [];\n          let options = question.options;\n          console.log(options);\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    fetchData(); // try {\n    //     var sock = new SockJS(\"http://localhost:8081/ws\");\n    //     sock.onopen = function () {\n    //         console.log(\"open\");\n    //     };\n    //     sock.onclose = function () {\n    //         console.log(\"close\");\n    //     };\n    //     stompClient = Stomp.over(sock);\n    //     stompClient.connect(\n    //         {},\n    //         function (frame) {\n    //             console.log(\"connected: \" + frame);\n    //             // stompClient.subscribe('/topic/notification', function(notification){\n    //             //   refetchTanks(); // call fetch tanks -> can't use \"this\"\n    //             // })\n    //         },\n    //         function (err) {\n    //             console.log(\"err\", err);\n    //         }\n    //     );\n    //     stompClient.subscribe(\"/topic/messages\", (message) => {\n    //         console.log(\"MEssagege\");\n    //     });\n    // } catch (error) {}\n  });\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Quiz, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"s2Bv4UOYzxKtK4sP41iU5UsD+CY=\", false, function () {\n  return [useAuth];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/App.js"],"names":["BrowserRouter","Router","useAuth","Nav","useEffect","useState","SockJS","Stomp","Login","Quiz","Axios","QuestionModel","OptionModel","QuizModel","App","user","stompClient","inputValue","setinputValue","fetchData","get","then","resp","status","data","questionList","questions","forEach","question","q","title","questionId","optionType","optionList","options","console","log"],"mappings":";;;AAAA,SAASA,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM;AAAEC,IAAAA;AAAF,MAAWb,OAAO,EAAxB;AACA,MAAIc,WAAJ;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;;AACA,QAAMc,SAAS,GAAG,YAAY;AAC1BT,IAAAA,KAAK,CAACU,GAAN,CAAU,sDAAV,EAAkEC,IAAlE,CACKC,IAAD,IAAU;AACN,UAAIA,IAAI,CAACC,MAAL,IAAe,GAAnB,EAAwB;AACpB,cAAMC,IAAI,GAAGF,IAAI,CAACE,IAAlB;AACA,YAAIC,YAAY,GAAG,EAAnB;AACAD,QAAAA,IAAI,CAACE,SAAL,CAAeC,OAAf,CAAwBC,QAAD,IAAc;AACjC,cAAIC,CAAC,GAAG,IAAIlB,aAAJ,EAAR;AACAkB,UAAAA,CAAC,CAACC,KAAF,GAAUF,QAAQ,CAACE,KAAnB;AACAD,UAAAA,CAAC,CAACE,UAAF,GAAeH,QAAQ,CAACG,UAAxB;AACAF,UAAAA,CAAC,CAACG,UAAF,GAAeJ,QAAQ,CAACI,UAAxB;AACA,cAAIC,UAAU,GAAG,EAAjB;AACA,cAAIC,OAAO,GAAGN,QAAQ,CAACM,OAAvB;AAEAC,UAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACH,SATD;AAUH;AACJ,KAhBL;AAkBH,GAnBD;;AAoBA9B,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,SAAS,GADG,CAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GA3BQ,CAAT;AA6BA,sBACI,QAAC,MAAD;AAAA,2BACI;AAAA,8BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA9DQL,G;UACYZ,O;;;KADZY,G;AAgET,eAAeA,GAAf","sourcesContent":["import { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./App.css\";\nimport { useAuth } from \"./hooks/useAuth\";\nimport Nav from \"./components/nav\";\nimport { useEffect, useState } from \"react\";\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"stompjs\";\nimport Login from \"./components/login\";\nimport Quiz from \"./components/quiz\";\nimport Axios from \"axios\";\nimport QuestionModel from \"./classess/QuestionModel\";\nimport OptionModel from \"./classess/OptionModel\";\nimport QuizModel from \"./classess/QuizModel\";\nfunction App() {\n    const { user } = useAuth();\n    var stompClient;\n    const [inputValue, setinputValue] = useState(\"\");\n    const fetchData = async () => {\n        Axios.get(\"http://localhost:8080/api/v1/public/quiz?code=vtrSzV\").then(\n            (resp) => {\n                if (resp.status == 200) {\n                    const data = resp.data;\n                    let questionList = [];\n                    data.questions.forEach((question) => {\n                        let q = new QuestionModel();\n                        q.title = question.title;\n                        q.questionId = question.questionId;\n                        q.optionType = question.optionType;\n                        let optionList = [];\n                        let options = question.options;\n\n                        console.log(options);\n                    });\n                }\n            }\n        );\n    };\n    useEffect(() => {\n        fetchData();\n        // try {\n        //     var sock = new SockJS(\"http://localhost:8081/ws\");\n        //     sock.onopen = function () {\n        //         console.log(\"open\");\n        //     };\n        //     sock.onclose = function () {\n        //         console.log(\"close\");\n        //     };\n        //     stompClient = Stomp.over(sock);\n        //     stompClient.connect(\n        //         {},\n        //         function (frame) {\n        //             console.log(\"connected: \" + frame);\n        //             // stompClient.subscribe('/topic/notification', function(notification){\n        //             //   refetchTanks(); // call fetch tanks -> can't use \"this\"\n        //             // })\n        //         },\n        //         function (err) {\n        //             console.log(\"err\", err);\n        //         }\n        //     );\n        //     stompClient.subscribe(\"/topic/messages\", (message) => {\n        //         console.log(\"MEssagege\");\n        //     });\n        // } catch (error) {}\n    });\n\n    return (\n        <Router>\n            <>\n                <Nav />\n                <Quiz />\n                {/* <Login /> */}\n            </>\n        </Router>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}