{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\pages\\\\public\\\\login\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport { Flex, Box, FormControl, FormLabel, Input, Checkbox, Stack, Link, Button, Heading, Text, useColorModeValue, FormHelperText } from \"@chakra-ui/react\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nimport { Link as RRLink, useHistory } from 'react-router-dom';\nimport { useState } from \"react\";\nimport { useQuiz } from \"../../../providers/QuizProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n\n  const {\n    login,\n    setUser,\n    getUserDetails\n  } = useAuth();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [remember, setRemember] = useState(true);\n  const [error, setError] = useState(false);\n  const {\n    directUrl,\n    setDirectUrl\n  } = useQuiz();\n  const history = useHistory();\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    const isSuccess = await login(username, password, remember);\n\n    if (isSuccess) {\n      await getUserDetails();\n\n      if (directUrl) {\n        history.replace(directUrl);\n        setDirectUrl(null);\n        return;\n      }\n\n      history.replace('/');\n      return;\n    }\n\n    setError(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    minH: \"100vh\",\n    align: \"center\",\n    justify: \"center\",\n    bg: useColorModeValue(\"gray.50\", \"gray.800\"),\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 8,\n      mx: \"auto\",\n      maxW: \"lg\",\n      py: 12,\n      px: 6,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          fontSize: \"4xl\",\n          children: \"Sign in to your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"lg\",\n          color: \"gray.600\",\n          children: [\"to enjoy all of our cool\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            color: \"blue.400\",\n            children: \"features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), \" \\u270C\\uFE0F\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        rounded: \"lg\",\n        bg: useColorModeValue(\"white\", \"gray.700\"),\n        boxShadow: \"lg\",\n        p: 8,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: username,\n              isInvalid: error,\n              errorBorderColor: \"crimson\",\n              onChange: e => {\n                setError(false);\n                setUsername(e.target.value);\n              },\n              type: \"email|text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), error && /*#__PURE__*/_jsxDEV(FormHelperText, {\n              color: 'crimson',\n              children: \"Username or password is not correct!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            children: [/*#__PURE__*/_jsxDEV(Stack, {\n              direction: {\n                base: \"column\",\n                sm: \"row\"\n              },\n              align: \"start\",\n              justify: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                defaultChecked: true,\n                value: remember,\n                onChange: e => {\n                  setRemember(e.target.checked);\n                },\n                children: \"Remember me\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                color: \"blue.400\",\n                children: \"Forgot password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              minH: 10\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              disabled: username.length === 0 || password.length === 0,\n              bg: \"blue.400\",\n              color: \"white\",\n              _hover: {\n                bg: \"blue.500\"\n              },\n              onClick: e => handleLogin(e),\n              children: \"Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              bg: \"purple.400\",\n              color: \"white\",\n              _hover: {\n                bg: \"purple.100\"\n              },\n              onClick: () => {\n                history.replace('/');\n              },\n              children: \"Sign in as Guest\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPage, \"sqnxdc7qLLlNF13soMmTRle4cXk=\", false, function () {\n  return [useAuth, useQuiz, useHistory, useColorModeValue, useColorModeValue];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/pages/public/login/LoginPage.js"],"names":["Flex","Box","FormControl","FormLabel","Input","Checkbox","Stack","Link","Button","Heading","Text","useColorModeValue","FormHelperText","useAuth","RRLink","useHistory","useState","useQuiz","LoginPage","login","setUser","getUserDetails","username","setUsername","password","setPassword","remember","setRemember","error","setError","directUrl","setDirectUrl","history","handleLogin","e","preventDefault","isSuccess","replace","target","value","base","sm","checked","length","bg"],"mappings":"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","sourcesContent":["import {\r\n    Flex,\r\n    Box,\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    Checkbox,\r\n    Stack,\r\n    Link,\r\n    Button,\r\n    Heading,\r\n    Text,\r\n    useColorModeValue, FormHelperText,\r\n} from \"@chakra-ui/react\";\r\nimport {useAuth} from \"../../../hooks/useAuth\";\r\nimport {Link as RRLink, useHistory} from 'react-router-dom';\r\nimport {useState} from \"react\";\r\nimport {useQuiz} from \"../../../providers/QuizProvider\";\r\n\r\nexport default function LoginPage() {\r\n    const {login, setUser, getUserDetails} = useAuth();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [remember, setRemember] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    const {directUrl, setDirectUrl} = useQuiz();\r\n\r\n    const history = useHistory();\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        const isSuccess = await login(username, password, remember);\r\n        if (isSuccess) {\r\n            await getUserDetails();\r\n            if (directUrl) {\r\n                history.replace(directUrl);\r\n                setDirectUrl(null);\r\n                return;\r\n            }\r\n            history.replace('/')\r\n            return;\r\n        }\r\n        setError(true);\r\n\r\n\r\n    }\r\n    return (\r\n        <Flex\r\n            minH={\"100vh\"}\r\n            align={\"center\"}\r\n            justify={\"center\"}\r\n            bg={useColorModeValue(\"gray.50\", \"gray.800\")}\r\n        >\r\n            <Stack spacing={8} mx={\"auto\"} maxW={\"lg\"} py={12} px={6}>\r\n                <Stack align={\"center\"}>\r\n                    <Heading fontSize={\"4xl\"}>Sign in to your account</Heading>\r\n                    <Text fontSize={\"lg\"} color={\"gray.600\"}>\r\n                        to enjoy all of our cool{\" \"}\r\n                        <Link color={\"blue.400\"}>features</Link> ✌️\r\n                    </Text>\r\n                </Stack>\r\n                <Box\r\n                    rounded={\"lg\"}\r\n                    bg={useColorModeValue(\"white\", \"gray.700\")}\r\n                    boxShadow={\"lg\"}\r\n                    p={8}\r\n                >\r\n                    {/*Form*/}\r\n                    <Stack spacing={4}>\r\n                        {/*Email*/}\r\n                        <FormControl id=\"email\">\r\n                            <FormLabel>Email address</FormLabel>\r\n                            <Input\r\n                                value={username}\r\n                                isInvalid={error}\r\n                                errorBorderColor=\"crimson\"\r\n                                onChange={(e) => {\r\n                                    setError(false);\r\n                                    setUsername(e.target.value);\r\n                                }}\r\n                                type='email|text'/>\r\n                            {\r\n                                error &&\r\n                                <FormHelperText color={'crimson'}>Username or password is not correct!</FormHelperText>\r\n                            }\r\n                        </FormControl>\r\n                        {/*Password*/}\r\n                        <FormControl id=\"password\">\r\n                            <FormLabel>Password</FormLabel>\r\n                            <Input\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                                type=\"password\"/>\r\n                        </FormControl>\r\n                        <Stack>\r\n                            <Stack\r\n                                direction={{base: \"column\", sm: \"row\"}}\r\n                                align={\"start\"}\r\n                                justify={\"space-between\"}\r\n                            >\r\n                                {/*Remember me*/}\r\n\r\n                                <Checkbox\r\n                                    defaultChecked\r\n                                    value={remember}\r\n                                    onChange={(e) => {\r\n                                        setRemember(e.target.checked);\r\n                                    }}>\r\n                                    Remember me\r\n                                </Checkbox>\r\n                                <Link color={\"blue.400\"}>Forgot password?</Link>\r\n                            </Stack>\r\n                            <Box minH={10}></Box>\r\n                            <Button\r\n                                disabled={\r\n                                    (username.length === 0 || password.length === 0)\r\n                                }\r\n                                bg={\"blue.400\"}\r\n                                color={\"white\"}\r\n                                _hover={{\r\n                                    bg: \"blue.500\",\r\n                                }}\r\n                                onClick={(e) => handleLogin(e)}\r\n                            >\r\n                                Sign in\r\n                            </Button>\r\n                            <Button\r\n                                bg={\"purple.400\"}\r\n                                color={\"white\"}\r\n                                _hover={{\r\n                                    bg: \"purple.100\",\r\n                                }}\r\n                                onClick={\r\n                                    () => {\r\n                                        history.replace('/')\r\n                                    }\r\n                                }\r\n                            >\r\n                                Sign in as Guest\r\n                            </Button>\r\n                        </Stack>\r\n                    </Stack>\r\n                </Box>\r\n            </Stack>\r\n        </Flex>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}