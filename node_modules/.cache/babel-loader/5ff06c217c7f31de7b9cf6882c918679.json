{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\components\\\\edit_quiz\\\\EditQuestionDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box, Button, Center, Checkbox, Container, HStack, Input, Text, Textarea, VStack } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst EditQuestionDialog = ({\n  setVisible\n}) => {\n  _s();\n\n  const [numOfQuestions, setNumOfQuestion] = useState([0, 1, 2, 3]);\n  const [questions, setQuestions] = useState(['', '', '', '']);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      onClick: () => {\n        console.log(\"HAHHAHA\");\n      },\n      position: 'fixed',\n      zIndex: 9000,\n      top: 0,\n      bg: 'gray.300',\n      align: 'center',\n      alignItems: 'center',\n      opacity: .4,\n      justifyContent: 'center',\n      width: '100vw',\n      height: '100vh'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      boxShadow: 'md',\n      position: 'fixed',\n      zIndex: 9001,\n      top: '50%',\n      right: '50%',\n      transform: 'translate(50%,-50%)',\n      minW: '500px',\n      bg: 'white',\n      maxW: '500px',\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        children: [/*#__PURE__*/_jsxDEV(HStack, {\n          bg: 'gray.700',\n          p: 2,\n          w: '100%',\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            color: 'white',\n            fontWeight: 'medium',\n            children: \"Question 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          p: 2,\n          w: '100%',\n          children: /*#__PURE__*/_jsxDEV(Textarea, {\n            css: {\n              '&::-webkit-scrollbar': {\n                width: '0px',\n                background: 'transparent'\n              }\n            },\n            resize: 'none',\n            overflow: 'hidden',\n            placeholder: 'Type your question here'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          p: 4,\n          spacing: 4,\n          w: '100%',\n          children: questions.map((item, i) => /*#__PURE__*/_jsxDEV(HStack, {\n            w: '100%',\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => {\n                let updateState = questions.map((savedQuestion, index) => {\n                  if (i === index) {\n                    savedQuestion = e.target.value;\n                  }\n                });\n                setQuestions(updateState);\n              },\n              wordBreak: 'break-all',\n              wordwrap: 'break-word',\n              isFullWidth: true,\n              size: 'sm'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 37\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          align: 'start',\n          p: 2,\n          w: '100%',\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setQuestions(prev => [...prev, '']);\n            },\n            size: 'sm',\n            variant: 'outline',\n            alignSelf: 'start',\n            colorScheme: 'teal',\n            children: \"Add answer option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          w: '100%',\n          children: /*#__PURE__*/_jsxDEV(HStack, {\n            p: 2,\n            bg: 'gray.700',\n            justifyContent: 'end',\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setVisible(false);\n              },\n              size: 'sm',\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setVisible(false);\n              },\n              size: 'sm',\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(EditQuestionDialog, \"tjkB8eE5TlmReRKOtl8VkByIVko=\");\n\n_c = EditQuestionDialog;\nexport default EditQuestionDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditQuestionDialog\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/components/edit_quiz/EditQuestionDialog.js"],"names":["React","useState","Box","Button","Center","Checkbox","Container","HStack","Input","Text","Textarea","VStack","EditQuestionDialog","setVisible","numOfQuestions","setNumOfQuestion","questions","setQuestions","console","log","width","background","map","item","i","e","updateState","savedQuestion","index","target","value","prev"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {Box, Button, Center, Checkbox, Container, HStack, Input, Text, Textarea, VStack} from \"@chakra-ui/react\";\r\n\r\nconst EditQuestionDialog = ({setVisible}) => {\r\n\r\n\r\n    const [numOfQuestions, setNumOfQuestion] = useState([0, 1, 2, 3]);\r\n\r\n    const [questions, setQuestions] = useState(['', '', '', '']);\r\n\r\n    return (\r\n        <>\r\n            <Box\r\n                onClick={() => {\r\n                    console.log(\"HAHHAHA\")\r\n                }}\r\n                position={'fixed'}\r\n                zIndex={9000}\r\n                top={0}\r\n                bg={'gray.300'}\r\n                align={'center'}\r\n                alignItems={'center'}\r\n                opacity={.4}\r\n                justifyContent={'center'}\r\n                width={'100vw'}\r\n                height={'100vh'}>\r\n            </Box>\r\n\r\n            <Box boxShadow={'md'}\r\n                 position={'fixed'}\r\n                 zIndex={9001}\r\n                 top={'50%'}\r\n                 right={'50%'}\r\n                 transform={\r\n                     'translate(50%,-50%)'\r\n                 }\r\n\r\n                 minW={'500px'}\r\n                 bg={'white'}\r\n                 maxW={'500px'}\r\n            >\r\n                <VStack>\r\n                    <HStack bg={'gray.700'} p={2} w={'100%'}>\r\n                        <Text color={'white'} fontWeight={'medium'}>Question 2</Text>\r\n                    </HStack>\r\n                    {/*Question input title*/}\r\n                    <Box p={2} w={'100%'}>\r\n                        <Textarea\r\n                            css={\r\n                                {\r\n                                    '&::-webkit-scrollbar': {\r\n                                        width: '0px',\r\n                                        background: 'transparent'\r\n                                    }\r\n                                }\r\n                            }\r\n                            resize={'none'}\r\n                            overflow={'hidden'}\r\n                            placeholder={'Type your question here'}/>\r\n                    </Box>\r\n                    <VStack p={4} spacing={4} w={'100%'}>\r\n                        {\r\n                            questions.map((item, i) => (\r\n                                <HStack key={i} w={'100%'}>\r\n                                    <Checkbox/>\r\n                                    <Input\r\n                                        onChange={(e) => {\r\n                                            let updateState = questions\r\n                                                .map((savedQuestion, index) => {\r\n                                                if (i === index) {\r\n                                                    savedQuestion = e.target.value;\r\n                                                }\r\n                                            })\r\n                                            setQuestions(updateState);\r\n                                        }}\r\n                                        wordBreak={'break-all'}\r\n                                        wordwrap={'break-word'}\r\n                                        isFullWidth={true}\r\n                                        size={'sm'}/>\r\n                                </HStack>\r\n                            ))\r\n                        }\r\n                    </VStack>\r\n                    {/*BUTTON ADD ANSWER*/}\r\n                    <Box align={'start'} p={2} w={'100%'}>\r\n                        <Button\r\n                            onClick={() => {\r\n                                setQuestions(prev => [...prev, '']);\r\n                            }}\r\n                            size={'sm'}\r\n                            variant={'outline'}\r\n                            alignSelf={'start'}\r\n                            colorScheme={'teal'}>\r\n                            Add answer option\r\n                        </Button>\r\n                    </Box>\r\n                    {/*BUTTON SAVE*/}\r\n                    <Box w={'100%'}>\r\n                        <HStack p={2} bg={'gray.700'} justifyContent={'end'}>\r\n                            <Button onClick={() => {\r\n                                setVisible(false)\r\n                            }} size={'sm'}>Cancel</Button>\r\n                            <Button onClick={() => {\r\n                                setVisible(false)\r\n                            }} size={'sm'}>Save</Button>\r\n                        </HStack>\r\n                    </Box>\r\n                </VStack>\r\n            </Box>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default EditQuestionDialog;"]},"metadata":{},"sourceType":"module"}