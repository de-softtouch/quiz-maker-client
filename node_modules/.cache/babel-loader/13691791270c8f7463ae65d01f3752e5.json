{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\providers\\\\QuizEditProvider.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useState } from \"react\";\nimport React from 'react';\nimport QuizService from \"../service/QuizService\";\nimport UserService from \"../service/UserService\";\nimport { AdminContext } from \"./AdminSettingProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QuizEditContext = /*#__PURE__*/createContext();\n\nconst QuizEditProvider = ({\n  children\n}) => {\n  _s();\n\n  const [quiz, setQuiz] = useState(null);\n  const {\n    isLoading,\n    setLoading\n  } = useContext(AdminContext);\n\n  const getQuizDetail = async id => {\n    try {\n      setLoading(true);\n      const resp = await UserService.getUserQuiz(id);\n      setQuiz(resp.data);\n      return resp.data;\n    } catch (e) {} finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSaveQuiz = async () => {\n    try {\n      setLoading(true);\n      const resp = await QuizService.saveQuiz(quiz);\n      await getQuizDetail(quiz.id);\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const value = {\n    quiz,\n    setQuiz,\n    isLoading,\n    setLoading,\n    getQuizDetail,\n    handleSaveQuiz\n  };\n  return /*#__PURE__*/_jsxDEV(QuizEditContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuizEditProvider, \"IcbIgjyjYwU+mf3Tbd+2D5AoweM=\");\n\n_c = QuizEditProvider;\nexport default QuizEditProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizEditProvider\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/providers/QuizEditProvider.js"],"names":["createContext","useContext","useState","React","QuizService","UserService","AdminContext","QuizEditContext","QuizEditProvider","children","quiz","setQuiz","isLoading","setLoading","getQuizDetail","id","resp","getUserQuiz","data","e","handleSaveQuiz","saveQuiz","error","response","console","log","status","headers","value"],"mappings":";;;AAAA,SAAQA,aAAR,EAAuBC,UAAvB,EAAmCC,QAAnC,QAAkD,OAAlD;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAAQC,YAAR,QAA2B,wBAA3B;;AAEA,OAAO,MAAMC,eAAe,gBAAGP,aAAa,EAArC;;AAEP,MAAMQ,gBAAgB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAErC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM;AAACU,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAA0BZ,UAAU,CAACK,YAAD,CAA1C;;AAEA,QAAMQ,aAAa,GAAG,MAAOC,EAAP,IAAc;AAChC,QAAI;AACAF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMG,IAAI,GAAG,MAAMX,WAAW,CAACY,WAAZ,CAAwBF,EAAxB,CAAnB;AACAJ,MAAAA,OAAO,CAACK,IAAI,CAACE,IAAN,CAAP;AACA,aAAOF,IAAI,CAACE,IAAZ;AACH,KALD,CAKE,OAAOC,CAAP,EAAU,CAEX,CAPD,SAOU;AACNN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAXD;;AAYA,QAAMO,cAAc,GAAG,YAAY;AAC/B,QAAI;AACAP,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMG,IAAI,GAAG,MAAMZ,WAAW,CAACiB,QAAZ,CAAqBX,IAArB,CAAnB;AACA,YAAMI,aAAa,CAACJ,IAAI,CAACK,EAAN,CAAnB;AACH,KAJD,CAIE,OAAOO,KAAP,EAAc;AACZ,UAAIA,KAAK,CAACC,QAAV,EAAoB;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,QAAN,CAAeL,IAA3B;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,QAAN,CAAeG,MAA3B;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,QAAN,CAAeI,OAA3B;AACH;AACJ,KAVD,SAUU;AACNd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAdD;;AAeA,QAAMe,KAAK,GAAG;AACVlB,IAAAA,IADU;AACJC,IAAAA,OADI;AACKC,IAAAA,SADL;AACgBC,IAAAA,UADhB;AAC4BC,IAAAA,aAD5B;AAC2CM,IAAAA;AAD3C,GAAd;AAIA,sBAEI,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEQ,KAAjC;AAAA,cACKnB;AADL;AAAA;AAAA;AAAA;AAAA,UAFJ;AAMH,CA1CD;;GAAMD,gB;;KAAAA,gB;AA4CN,eAAeA,gBAAf","sourcesContent":["import {createContext, useContext, useState} from \"react\";\r\n\r\nimport React from 'react';\r\nimport QuizService from \"../service/QuizService\";\r\nimport UserService from \"../service/UserService\";\r\nimport {AdminContext} from \"./AdminSettingProvider\";\r\n\r\nexport const QuizEditContext = createContext();\r\n\r\nconst QuizEditProvider = ({children}) => {\r\n\r\n    const [quiz, setQuiz] = useState(null);\r\n    const {isLoading, setLoading} = useContext(AdminContext);\r\n\r\n    const getQuizDetail = async (id) => {\r\n        try {\r\n            setLoading(true);\r\n            const resp = await UserService.getUserQuiz(id);\r\n            setQuiz(resp.data);\r\n            return resp.data;\r\n        } catch (e) {\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const handleSaveQuiz = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const resp = await QuizService.saveQuiz(quiz);\r\n            await getQuizDetail(quiz.id);\r\n        } catch (error) {\r\n            if (error.response) {\r\n                console.log(error.response.data);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const value = {\r\n        quiz, setQuiz, isLoading, setLoading, getQuizDetail, handleSaveQuiz\r\n    }\r\n\r\n    return (\r\n\r\n        <QuizEditContext.Provider value={value}>\r\n            {children}\r\n        </QuizEditContext.Provider>\r\n    );\r\n};\r\n\r\nexport default QuizEditProvider;"]},"metadata":{},"sourceType":"module"}