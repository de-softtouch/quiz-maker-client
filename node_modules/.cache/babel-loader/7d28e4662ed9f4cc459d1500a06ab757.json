{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\components\\\\edit_quiz\\\\QuestionEntry.js\";\nimport React from \"react\";\nimport { Box, Button, Checkbox, Container, HStack, IconButton, Select, SimpleGrid, Spacer, Text, Tooltip, VStack } from \"@chakra-ui/react\";\nimport { AiOutlineTag, BsPen } from \"react-icons/all\";\nimport { CopyIcon, DeleteIcon } from \"@chakra-ui/icons\";\nimport { useQuiz } from \"../../context/QuizProvider\";\nimport { useCreateQuiz } from \"../../context/CreateQuizProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuestionEntry = ({\n  index,\n  question\n}) => {\n  // const { question, setquestion } = useCreateQuiz();\n  // const onDeleteQuestion = () => {\n  //     let tmp = question;\n  //     tmp = tmp.filter((q) => q.title != question.title);\n  //     setquestion(tmp);\n  // };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      boxShadow: \"sm\",\n      my: 5,\n      borderRadius: \"md\",\n      align: \"start\",\n      textAlign: \"start\",\n      h: \"100%\",\n      bg: \"white\",\n      maxW: \"600px\",\n      minW: \"600px\",\n      children: [/*#__PURE__*/_jsxDEV(HStack, {\n        p: 2,\n        bg: \"gray.200\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Question \", index]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          label: \"edit\",\n          color: \"teal.200\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            icon: /*#__PURE__*/_jsxDEV(BsPen, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          color: \"red.500\",\n          label: \"remove\",\n          children: /*#__PURE__*/_jsxDEV(IconButton // onClick={onDeleteQuestion}\n          , {\n            icon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          label: \"duplicate\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            icon: /*#__PURE__*/_jsxDEV(CopyIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VStack, {\n        align: \"start\",\n        p: 2,\n        spacing: 5,\n        children: [/*#__PURE__*/_jsxDEV(Container, {\n          maxW: \"3xl\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            maxW: \"3xl\",\n            children: /*#__PURE__*/_jsxDEV(Text, {\n              fontWeight: \"medium\",\n              children: question.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n          w: \"100%\",\n          align: \"start\",\n          columns: 2,\n          spacing: 2,\n          children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(Container, {\n            maxW: \"xl\",\n            centerContent: true,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              py: 4,\n              w: \"100%\",\n              maxW: \"3xl\",\n              align: \"start\",\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                w: \"100%\",\n                size: \"sm\",\n                disabled: true,\n                isChecked: option.isChecked,\n                children: option.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        bg: \"gray.200\",\n        p: 1,\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          size: \"sm\",\n          maxW: \"100\",\n          bg: \"white\",\n          name: \"queston seconds\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"option1\",\n            children: \"30 secs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"option2\",\n            children: \"15 secs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"option3\",\n            children: \"45 secs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"sm\",\n          colorScheme: \"white\",\n          variant: \"ghost\",\n          leftIcon: /*#__PURE__*/_jsxDEV(AiOutlineTag, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 35\n          }, this),\n          children: \"Tag topics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_c = QuestionEntry;\nexport default QuestionEntry;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionEntry\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/components/edit_quiz/QuestionEntry.js"],"names":["React","Box","Button","Checkbox","Container","HStack","IconButton","Select","SimpleGrid","Spacer","Text","Tooltip","VStack","AiOutlineTag","BsPen","CopyIcon","DeleteIcon","useQuiz","useCreateQuiz","QuestionEntry","index","question","title","options","map","option","isChecked","content"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Container,\r\n    HStack,\r\n    IconButton,\r\n    Select,\r\n    SimpleGrid,\r\n    Spacer,\r\n    Text,\r\n    Tooltip,\r\n    VStack,\r\n} from \"@chakra-ui/react\";\r\nimport { AiOutlineTag, BsPen } from \"react-icons/all\";\r\nimport { CopyIcon, DeleteIcon } from \"@chakra-ui/icons\";\r\nimport { useQuiz } from \"../../context/QuizProvider\";\r\nimport { useCreateQuiz } from \"../../context/CreateQuizProvider\";\r\n\r\nconst QuestionEntry = ({ index, question }) => {\r\n    // const { question, setquestion } = useCreateQuiz();\r\n\r\n    // const onDeleteQuestion = () => {\r\n    //     let tmp = question;\r\n    //     tmp = tmp.filter((q) => q.title != question.title);\r\n    //     setquestion(tmp);\r\n    // };\r\n    return (\r\n        <>\r\n            <Box\r\n                boxShadow={\"sm\"}\r\n                my={5}\r\n                borderRadius={\"md\"}\r\n                align={\"start\"}\r\n                textAlign={\"start\"}\r\n                h={\"100%\"}\r\n                bg={\"white\"}\r\n                maxW={\"600px\"}\r\n                minW={\"600px\"}\r\n            >\r\n                {/*Edit bar*/}\r\n                <HStack p={2} bg={\"gray.200\"}>\r\n                    {/*QUESTION INDEX*/}\r\n                    <Text>Question {index}</Text>\r\n                    <Spacer />\r\n                    <Tooltip label={\"edit\"} color={\"teal.200\"}>\r\n                        <IconButton icon={<BsPen />} />\r\n                    </Tooltip>\r\n                    <Tooltip color={\"red.500\"} label={\"remove\"}>\r\n                        <IconButton\r\n                            // onClick={onDeleteQuestion}\r\n                            icon={<DeleteIcon />}\r\n                        />\r\n                    </Tooltip>\r\n                    <Tooltip label={\"duplicate\"}>\r\n                        <IconButton icon={<CopyIcon />} />\r\n                    </Tooltip>\r\n                </HStack>\r\n                <VStack align={\"start\"} p={2} spacing={5}>\r\n                    {/*QUESTION TITLE*/}\r\n                    <Container maxW=\"3xl\">\r\n                        <Box maxW=\"3xl\">\r\n                            <Text fontWeight={\"medium\"}>{question.title}</Text>\r\n                        </Box>\r\n                    </Container>\r\n                    <SimpleGrid\r\n                        w={\"100%\"}\r\n                        align={\"start\"}\r\n                        columns={2}\r\n                        spacing={2}\r\n                    >\r\n                        {question.options.map((option, index) => (\r\n                            <Container key={index} maxW=\"xl\" centerContent>\r\n                                <Box\r\n                                    py={4}\r\n                                    w={\"100%\"}\r\n                                    maxW=\"3xl\"\r\n                                    align={\"start\"}\r\n                                >\r\n                                    <Checkbox\r\n                                        w={\"100%\"}\r\n                                        size={\"sm\"}\r\n                                        disabled={true}\r\n                                        isChecked={option.isChecked}\r\n                                    >\r\n                                        {option.content}\r\n                                    </Checkbox>\r\n                                </Box>\r\n                            </Container>\r\n                        ))}\r\n                    </SimpleGrid>\r\n                </VStack>\r\n                <HStack bg={\"gray.200\"} p={1}>\r\n                    <Select\r\n                        size={\"sm\"}\r\n                        maxW={\"100\"}\r\n                        bg={\"white\"}\r\n                        name={\"queston seconds\"}\r\n                    >\r\n                        <option value=\"option1\">30 secs</option>\r\n                        <option value=\"option2\">15 secs</option>\r\n                        <option value=\"option3\">45 secs</option>\r\n                    </Select>\r\n                    <Button\r\n                        size={\"sm\"}\r\n                        colorScheme={\"white\"}\r\n                        variant={\"ghost\"}\r\n                        leftIcon={<AiOutlineTag />}\r\n                    >\r\n                        Tag topics\r\n                    </Button>\r\n                </HStack>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default QuestionEntry;\r\n"]},"metadata":{},"sourceType":"module"}