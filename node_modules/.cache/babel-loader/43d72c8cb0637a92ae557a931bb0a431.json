{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\quiz maker client\\\\src\\\\pages\\\\admin\\\\assigment\\\\AssignmentReport.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AdminContext } from \"../../../providers/AdminSettingProvider\";\nimport { useParams } from \"react-router-dom\";\nimport UserService from \"../../../service/UserService\";\nimport { Flex, HStack, Text, VStack } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AssignmentReport = () => {\n  _s();\n\n  const {\n    isLoading,\n    setLoading\n  } = useContext(AdminContext);\n  const [report, setReport] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getReport();\n  }, []);\n\n  const getReport = async () => {\n    setLoading(true);\n\n    try {\n      const resp = await UserService.getAssignmentReport(id);\n      setReport(resp.data);\n      console.log(resp.data);\n    } catch (e) {} finally {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      direction: 'column',\n      children: [/*#__PURE__*/_jsxDEV(HStack, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          children: report && report.assignmentInfo.quiz.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VStack, {\n        align: 'start',\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: report && report.assignmentInfo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: report && report.assignmentInfo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        children: [report && report.userInfo.fullName, \" Result\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), !isLoading && report && /*#__PURE__*/_jsxDEV(HStack, {\n        children: /*#__PURE__*/_jsxDEV(VStack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AssignmentReport, \"3vjYR+QtEGs2vG3HJ2EeKehhza4=\", false, function () {\n  return [useParams];\n});\n\n_c = AssignmentReport;\nexport default AssignmentReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignmentReport\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/quiz maker client/src/pages/admin/assigment/AssignmentReport.js"],"names":["React","useContext","useEffect","useState","AdminContext","useParams","UserService","Flex","HStack","Text","VStack","AssignmentReport","isLoading","setLoading","report","setReport","id","getReport","resp","getAssignmentReport","data","console","log","e","assignmentInfo","quiz","title","description","userInfo","fullName"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAAQC,YAAR,QAA2B,yCAA3B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,MAA5B,QAAyC,kBAAzC;;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAA0BZ,UAAU,CAACG,YAAD,CAA1C;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM;AAACa,IAAAA;AAAD,MAAOX,SAAS,EAAtB;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMA,SAAS,GAAG,YAAY;AAC1BJ,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAI;AACA,YAAMK,IAAI,GAAG,MAAMZ,WAAW,CAACa,mBAAZ,CAAgCH,EAAhC,CAAnB;AACAD,MAAAA,SAAS,CAACG,IAAI,CAACE,IAAN,CAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACE,IAAjB;AAEH,KALD,CAKE,OAAOG,CAAP,EAAU,CAEX,CAPD,SAOU;AACNV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAbD;;AAcA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAE,QAAjB;AAAA,8BACI,QAAC,MAAD;AAAA,+BACI,QAAC,IAAD;AAAA,oBAAOC,MAAM,IAAIA,MAAM,CAACU,cAAP,CAAsBC,IAAtB,CAA2BC;AAA5C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,OAAf;AAAA,gCACI,QAAC,IAAD;AAAA,oBAAOZ,MAAM,IAAIA,MAAM,CAACU,cAAP,CAAsBE;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAA,oBAAOZ,MAAM,IAAIA,MAAM,CAACU,cAAP,CAAsBG;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQI,QAAC,MAAD;AAAA,mBAASb,MAAM,IAAEA,MAAM,CAACc,QAAP,CAAgBC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,EAUQ,CAACjB,SAAD,IAAcE,MAAd,iBACI,QAAC,MAAD;AAAA,+BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAuBH,CA5CD;;GAAMH,gB;UAGWN,S;;;KAHXM,gB;AA8CN,eAAeA,gBAAf","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {AdminContext} from \"../../../providers/AdminSettingProvider\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport UserService from \"../../../service/UserService\";\r\nimport {Flex, HStack, Text, VStack} from \"@chakra-ui/react\";\r\n\r\nconst AssignmentReport = () => {\r\n    const {isLoading, setLoading} = useContext(AdminContext);\r\n    const [report, setReport] = useState(null);\r\n    const {id} = useParams();\r\n    useEffect(() => {\r\n        getReport();\r\n    }, []);\r\n    const getReport = async () => {\r\n        setLoading(true);\r\n\r\n        try {\r\n            const resp = await UserService.getAssignmentReport(id);\r\n            setReport(resp.data)\r\n            console.log(resp.data);\r\n\r\n        } catch (e) {\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Flex direction={'column'}>\r\n                <HStack>\r\n                    <Text>{report && report.assignmentInfo.quiz.title}</Text>\r\n                </HStack>\r\n                <VStack align={'start'}>\r\n                    <Text>{report && report.assignmentInfo.title}</Text>\r\n                    <Text>{report && report.assignmentInfo.description}</Text>\r\n                </VStack>\r\n                <HStack>{report&&report.userInfo.fullName} Result</HStack>\r\n                {\r\n                    !isLoading && report && (\r\n                        <HStack>\r\n                            <VStack>\r\n\r\n                            </VStack>\r\n                        </HStack>\r\n                    )\r\n                }\r\n            </Flex>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AssignmentReport;"]},"metadata":{},"sourceType":"module"}