{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\components\\\\nav.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link as MyLink } from \"react-router-dom\";\nimport { Box, Flex, Text, IconButton, Button, Stack, Collapse, Icon, Link, Popover, PopoverTrigger, PopoverContent, useColorModeValue, useBreakpointValue, useDisclosure } from \"@chakra-ui/react\";\nimport { HamburgerIcon, CloseIcon, ChevronDownIcon, ChevronRightIcon } from \"@chakra-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Nav = () => {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      bg: useColorModeValue(\"white\", \"gray.800\"),\n      color: useColorModeValue(\"gray.600\", \"red\"),\n      minH: \"60px\",\n      py: {\n        base: 2\n      },\n      px: {\n        base: 4\n      },\n      borderBottom: 1,\n      borderStyle: \"solid\",\n      borderColor: useColorModeValue(\"gray.200\", \"gray.900\"),\n      align: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        flex: {\n          base: 1\n        },\n        justify: {\n          base: \"center\",\n          md: \"start\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          textAlign: useBreakpointValue({\n            base: \"center\",\n            md: \"left\"\n          }),\n          fontFamily: \"heading\",\n          color: useColorModeValue(\"gray.800\", \"white\"),\n          children: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          display: {\n            base: \"none\",\n            md: \"flex\"\n          },\n          ml: 10,\n          children: /*#__PURE__*/_jsxDEV(DesktopNav, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Nav, \"wVrQBr4Nv7BhyUk9ULxm/M+U7Rc=\", false, function () {\n  return [useColorModeValue, useColorModeValue, useColorModeValue, useBreakpointValue, useColorModeValue];\n});\n\n_c = Nav;\n\nconst DesktopNav = () => {\n  _s2();\n\n  const linkColor = useColorModeValue(\"gray.600\", \"gray.200\");\n  const linkHoverColor = useColorModeValue(\"gray.800\", \"white\");\n  const popoverContentBgColor = useColorModeValue(\"white\", \"gray.800\");\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"row\",\n    spacing: 4,\n    children: NAV_ITEMS.map(navItem => {\n      var _navItem$href;\n\n      return /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Popover, {\n          trigger: \"hover\",\n          placement: \"bottom-start\",\n          children: [/*#__PURE__*/_jsxDEV(PopoverTrigger, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              p: 2,\n              href: (_navItem$href = navItem.href) !== null && _navItem$href !== void 0 ? _navItem$href : \"#\",\n              fontSize: \"sm\",\n              fontWeight: 500,\n              color: linkColor,\n              _hover: {\n                textDecoration: \"none\",\n                color: linkHoverColor\n              },\n              children: navItem.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), navItem.children && /*#__PURE__*/_jsxDEV(PopoverContent, {\n            border: 0,\n            boxShadow: \"xl\",\n            bg: popoverContentBgColor,\n            p: 4,\n            rounded: \"xl\",\n            minW: \"sm\",\n            children: /*#__PURE__*/_jsxDEV(Stack, {\n              children: navItem.children.map(child => /*#__PURE__*/_jsxDEV(DesktopSubNav, { ...child\n              }, child.label, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, navItem.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(DesktopNav, \"nVOLHKoBC2IeGW7TE+PzVWqugsQ=\", false, function () {\n  return [useColorModeValue, useColorModeValue, useColorModeValue];\n});\n\n_c2 = DesktopNav;\nexport default Nav;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Nav\");\n$RefreshReg$(_c2, \"DesktopNav\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/components/nav.js"],"names":["React","BrowserRouter","Router","Switch","Route","Link","MyLink","Box","Flex","Text","IconButton","Button","Stack","Collapse","Icon","Popover","PopoverTrigger","PopoverContent","useColorModeValue","useBreakpointValue","useDisclosure","HamburgerIcon","CloseIcon","ChevronDownIcon","ChevronRightIcon","Nav","base","md","DesktopNav","linkColor","linkHoverColor","popoverContentBgColor","NAV_ITEMS","map","navItem","href","textDecoration","color","label","children","child"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link as MyLink,\r\n} from \"react-router-dom\";\r\nimport {\r\n    Box,\r\n    Flex,\r\n    Text,\r\n    IconButton,\r\n    Button,\r\n    Stack,\r\n    Collapse,\r\n    Icon,\r\n    Link,\r\n    Popover,\r\n    PopoverTrigger,\r\n    PopoverContent,\r\n    useColorModeValue,\r\n    useBreakpointValue,\r\n    useDisclosure,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n    HamburgerIcon,\r\n    CloseIcon,\r\n    ChevronDownIcon,\r\n    ChevronRightIcon,\r\n} from \"@chakra-ui/icons\";\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <Box>\r\n            <Flex\r\n                bg={useColorModeValue(\"white\", \"gray.800\")}\r\n                color={useColorModeValue(\"gray.600\", \"red\")}\r\n                minH={\"60px\"}\r\n                py={{ base: 2 }}\r\n                px={{ base: 4 }}\r\n                borderBottom={1}\r\n                borderStyle={\"solid\"}\r\n                borderColor={useColorModeValue(\"gray.200\", \"gray.900\")}\r\n                align={\"center\"}\r\n            >\r\n                {/* <Flex\r\n                    flex={{ base: 1, md: \"auto\" }}\r\n                    ml={{ base: -2 }}\r\n                    display={{ base: \"flex\", md: \"none\" }}\r\n                >\r\n                    <IconButton\r\n                        onClick={onToggle}\r\n                        icon={\r\n                            isOpen ? (\r\n                                <CloseIcon w={3} h={3} />\r\n                            ) : (\r\n                                <HamburgerIcon w={5} h={5} />\r\n                            )\r\n                        }\r\n                        variant={\"ghost\"}\r\n                        aria-label={\"Toggle Navigation\"}\r\n                    />\r\n                </Flex> */}\r\n\r\n                <Flex\r\n                    flex={{ base: 1 }}\r\n                    justify={{ base: \"center\", md: \"start\" }}\r\n                >\r\n                    <Text\r\n                        textAlign={useBreakpointValue({\r\n                            base: \"center\",\r\n                            md: \"left\",\r\n                        })}\r\n                        fontFamily={\"heading\"}\r\n                        color={useColorModeValue(\"gray.800\", \"white\")}\r\n                    >\r\n                        Logo\r\n                    </Text>\r\n\r\n                    <Flex display={{ base: \"none\", md: \"flex\" }} ml={10}>\r\n                        <DesktopNav />\r\n                    </Flex>\r\n                </Flex>\r\n            </Flex>\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst DesktopNav = () => {\r\n    const linkColor = useColorModeValue(\"gray.600\", \"gray.200\");\r\n    const linkHoverColor = useColorModeValue(\"gray.800\", \"white\");\r\n    const popoverContentBgColor = useColorModeValue(\"white\", \"gray.800\");\r\n\r\n    return (\r\n        <Stack direction={\"row\"} spacing={4}>\r\n            {NAV_ITEMS.map((navItem) => (\r\n                <Box key={navItem.label}>\r\n                    <Popover trigger={\"hover\"} placement={\"bottom-start\"}>\r\n                        <PopoverTrigger>\r\n                            <Link\r\n                                p={2}\r\n                                href={navItem.href ?? \"#\"}\r\n                                fontSize={\"sm\"}\r\n                                fontWeight={500}\r\n                                color={linkColor}\r\n                                _hover={{\r\n                                    textDecoration: \"none\",\r\n                                    color: linkHoverColor,\r\n                                }}\r\n                            >\r\n                                {navItem.label}\r\n                            </Link>\r\n                        </PopoverTrigger>\r\n\r\n                        {navItem.children && (\r\n                            <PopoverContent\r\n                                border={0}\r\n                                boxShadow={\"xl\"}\r\n                                bg={popoverContentBgColor}\r\n                                p={4}\r\n                                rounded={\"xl\"}\r\n                                minW={\"sm\"}\r\n                            >\r\n                                <Stack>\r\n                                    {navItem.children.map((child) => (\r\n                                        <DesktopSubNav\r\n                                            key={child.label}\r\n                                            {...child}\r\n                                        />\r\n                                    ))}\r\n                                </Stack>\r\n                            </PopoverContent>\r\n                        )}\r\n                    </Popover>\r\n                </Box>\r\n            ))}\r\n        </Stack>\r\n    );\r\n};\r\nexport default Nav;\r\n"]},"metadata":{},"sourceType":"module"}