{"ast":null,"code":"import axiosClient from \"./axiosClient\";\nimport axios from \"axios\";\nconst quizApi = {\n  getNewestQuiz: () => {\n    const url = \"/public/quizzes/newest-quizzes\";\n    return axiosClient.get(url);\n  },\n  getQuizInfo: code => {\n    const url = `/public/quizzes/info?code=${code}`;\n    return axiosClient.get(url);\n  },\n  getQuizContent: code => {\n    const url = `/member/quizzes/quiz-details?code=${code}`;\n    return axiosClient.get(url, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`\n      }\n    });\n  },\n  checkQuizExists: code => {\n    const url = `/public/quizzes/exists?code=${code}`;\n    return axiosClient.get(url);\n  },\n  //\n  getCreatedQuizzesInfo: () => {\n    const url = `/admin/quiz-management/managed-quizzes`;\n    return axiosClient.get(url, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`\n      }\n    });\n  },\n  assignQuizToStudent: assignmentRequest => {\n    const url = `/admin/quiz-assignment/assign-quizzes`;\n    return axios.post(url, assignmentRequest, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`\n      }\n    });\n  },\n  getAssignedUserById: quizId => {\n    const url = `/admin/quiz-assignment/assign-quizzes/${quizId}/users`;\n    return axios.get(url, {\n      headers: {\n        \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`\n      }\n    });\n  }\n};\nexport default quizApi;","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/api/quizApi.js"],"names":["axiosClient","axios","quizApi","getNewestQuiz","url","get","getQuizInfo","code","getQuizContent","headers","localStorage","getItem","checkQuizExists","getCreatedQuizzesInfo","assignQuizToStudent","assignmentRequest","post","getAssignedUserById","quizId"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,MAAMC,OAAO,GAAG;AAEZC,EAAAA,aAAa,EAAE,MAAM;AACjB,UAAMC,GAAG,GAAG,gCAAZ;AACA,WAAOJ,WAAW,CAACK,GAAZ,CAAgBD,GAAhB,CAAP;AACH,GALW;AAOZE,EAAAA,WAAW,EAAGC,IAAD,IAAU;AACnB,UAAMH,GAAG,GAAI,6BAA4BG,IAAK,EAA9C;AACA,WAAOP,WAAW,CAACK,GAAZ,CAAgBD,GAAhB,CAAP;AACH,GAVW;AAYZI,EAAAA,cAAc,EAAGD,IAAD,IAAU;AACtB,UAAMH,GAAG,GAAI,qCAAoCG,IAAK,EAAtD;AACA,WAAOP,WAAW,CAACK,GAAZ,CAAgBD,GAAhB,EAAqB;AACxBK,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;AAD1D;AADe,KAArB,CAAP;AAKH,GAnBW;AAqBZC,EAAAA,eAAe,EAAGL,IAAD,IAAU;AACvB,UAAMH,GAAG,GAAI,+BAA8BG,IAAK,EAAhD;AACA,WAAOP,WAAW,CAACK,GAAZ,CAAgBD,GAAhB,CAAP;AACH,GAxBW;AA0BZ;AACAS,EAAAA,qBAAqB,EAAE,MAAM;AACzB,UAAMT,GAAG,GAAI,wCAAb;AACA,WAAOJ,WAAW,CAACK,GAAZ,CAAgBD,GAAhB,EAAqB;AACxBK,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;AAD1D;AADe,KAArB,CAAP;AAKH,GAlCW;AAoCZG,EAAAA,mBAAmB,EAAGC,iBAAD,IAAuB;AACxC,UAAMX,GAAG,GAAI,uCAAb;AACA,WAAOH,KAAK,CAACe,IAAN,CAAWZ,GAAX,EAAgBW,iBAAhB,EACH;AACIN,MAAAA,OAAO,EACH;AAAC,yBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;AAAhE;AAFR,KADG,CAAP;AAKH,GA3CW;AA6CZM,EAAAA,mBAAmB,EAAGC,MAAD,IAAY;AAC7B,UAAMd,GAAG,GAAI,yCAAwCc,MAAO,QAA5D;AACA,WAAOjB,KAAK,CAACI,GAAN,CAAUD,GAAV,EAAe;AAClBK,MAAAA,OAAO,EACH;AAAC,yBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;AAAhE;AAFc,KAAf,CAAP;AAIH;AAnDW,CAAhB;AAwDA,eAAeT,OAAf","sourcesContent":["import axiosClient from \"./axiosClient\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst quizApi = {\r\n\r\n    getNewestQuiz: () => {\r\n        const url = \"/public/quizzes/newest-quizzes\"\r\n        return axiosClient.get(url);\r\n    },\r\n\r\n    getQuizInfo: (code) => {\r\n        const url = `/public/quizzes/info?code=${code}`\r\n        return axiosClient.get(url);\r\n    },\r\n\r\n    getQuizContent: (code) => {\r\n        const url = `/member/quizzes/quiz-details?code=${code}`\r\n        return axiosClient.get(url, {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`\r\n            }\r\n        })\r\n    },\r\n\r\n    checkQuizExists: (code) => {\r\n        const url = `/public/quizzes/exists?code=${code}`;\r\n        return axiosClient.get(url);\r\n    },\r\n\r\n    //\r\n    getCreatedQuizzesInfo: () => {\r\n        const url = `/admin/quiz-management/managed-quizzes`;\r\n        return axiosClient.get(url, {\r\n            headers: {\r\n                \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`\r\n            }\r\n        })\r\n    },\r\n\r\n    assignQuizToStudent: (assignmentRequest) => {\r\n        const url = `/admin/quiz-assignment/assign-quizzes`;\r\n        return axios.post(url, assignmentRequest,\r\n            {\r\n                headers:\r\n                    {\"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`}\r\n            })\r\n    },\r\n\r\n    getAssignedUserById: (quizId) => {\r\n        const url = `/admin/quiz-assignment/assign-quizzes/${quizId}/users`;\r\n        return axios.get(url, {\r\n            headers:\r\n                {\"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`}\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default quizApi;"]},"metadata":{},"sourceType":"module"}