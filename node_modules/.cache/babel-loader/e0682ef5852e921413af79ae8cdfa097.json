{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\quiz maker client\\\\src\\\\pages\\\\admin\\\\assigned\\\\AssignedQuizPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Badge, Box, Button, Divider, Heading, HStack, Table, TableCaption, Tbody, Td, Text, Th, Thead, Tooltip, Tr } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport dateFormat from 'dateformat';\nimport UserService from \"../../../service/UserService\";\nimport { AdminContext } from \"../../../providers/AdminSettingProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AssignedQuizPage = () => {\n  _s();\n\n  const {\n    setLoading\n  } = useContext(AdminContext);\n  const [assignedQuizzes, setAssignedQuiz] = useState([]);\n  useEffect(() => {\n    getAssignedQuizzes();\n  }, []);\n\n  const getAssignedQuizzes = async () => {\n    try {\n      const resp = await UserService.getAssignedQuizzes();\n      console.log(resp.data);\n    } catch (e) {}\n  };\n\n  const formatDate = (start, end) => {\n    const from = dateFormat(start, \"dddd, mmmm, yyyy\");\n    const to = dateFormat(end, \"dddd, mmmm, yyyy, h:MM:ss TT\");\n    return from + \"\\t-\\t\" + to;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      textAlign: 'center',\n      children: \"Assigned quizess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      my: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AssignedQuizPage, \"HWBt01IuogRFrlrrhsPkzzKgmL0=\");\n\n_c = AssignedQuizPage;\nexport default AssignedQuizPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignedQuizPage\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/quiz maker client/src/pages/admin/assigned/AssignedQuizPage.js"],"names":["React","useContext","useEffect","useState","Badge","Box","Button","Divider","Heading","HStack","Table","TableCaption","Tbody","Td","Text","Th","Thead","Tooltip","Tr","axios","dateFormat","UserService","AdminContext","AssignedQuizPage","setLoading","assignedQuizzes","setAssignedQuiz","getAssignedQuizzes","resp","console","log","data","e","formatDate","start","end","from","to"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SACIC,KADJ,EAEIC,GAFJ,EAESC,MAFT,EAGIC,OAHJ,EAIIC,OAJJ,EAKIC,MALJ,EAMIC,KANJ,EAOIC,YAPJ,EAQIC,KARJ,EASIC,EATJ,EAUIC,IAVJ,EAWIC,EAXJ,EAYIC,KAZJ,EAYWC,OAZX,EAaIC,EAbJ,QAcO,kBAdP;AAeA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAAQC,YAAR,QAA2B,yCAA3B;;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAE3B,QAAM;AAACC,IAAAA;AAAD,MAAevB,UAAU,CAACqB,YAAD,CAA/B;AACA,QAAM,CAACG,eAAD,EAAkBC,eAAlB,IAAqCvB,QAAQ,CAAC,EAAD,CAAnD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZyB,IAAAA,kBAAkB;AACrB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,kBAAkB,GAAG,YAAY;AACnC,QAAI;AACA,YAAMC,IAAI,GAAG,MAAMP,WAAW,CAACM,kBAAZ,EAAnB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB;AACH,KAHD,CAGE,OAAOC,CAAP,EAAU,CAEX;AACJ,GAPD;;AAQA,QAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC/B,UAAMC,IAAI,GAAGhB,UAAU,CAACc,KAAD,EAAQ,kBAAR,CAAvB;AACA,UAAMG,EAAE,GAAGjB,UAAU,CAACe,GAAD,EAAM,8BAAN,CAArB;AACA,WAAOC,IAAI,GAAG,OAAP,GAAiBC,EAAxB;AAEH,GALD;;AAMA,sBACI;AAAA,4BAEI,QAAC,OAAD;AAAS,MAAA,SAAS,EAAE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,OAAD;AAAS,MAAA,EAAE,EAAE;AAAb;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AA0EH,CAhGD;;GAAMd,gB;;KAAAA,gB;AAkGN,eAAeA,gBAAf","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {\r\n    Badge,\r\n    Box, Button,\r\n    Divider,\r\n    Heading,\r\n    HStack,\r\n    Table,\r\n    TableCaption,\r\n    Tbody,\r\n    Td,\r\n    Text,\r\n    Th,\r\n    Thead, Tooltip,\r\n    Tr\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport dateFormat from 'dateformat';\r\nimport UserService from \"../../../service/UserService\";\r\nimport {AdminContext} from \"../../../providers/AdminSettingProvider\";\r\n\r\nconst AssignedQuizPage = () => {\r\n\r\n    const {setLoading} = useContext(AdminContext);\r\n    const [assignedQuizzes, setAssignedQuiz] = useState([]);\r\n    useEffect(() => {\r\n        getAssignedQuizzes();\r\n    }, []);\r\n\r\n    const getAssignedQuizzes = async () => {\r\n        try {\r\n            const resp = await UserService.getAssignedQuizzes();\r\n            console.log(resp.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n    const formatDate = (start, end) => {\r\n        const from = dateFormat(start, \"dddd, mmmm, yyyy\");\r\n        const to = dateFormat(end, \"dddd, mmmm, yyyy, h:MM:ss TT\");\r\n        return from + \"\\t-\\t\" + to;\r\n\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <Heading textAlign={'center'}>Assigned quizess</Heading>\r\n            <Divider my={5}/>\r\n\r\n            {/*<Table size={'lg'} variant={'striped'} colorScheme={'blue'}>*/}\r\n            {/*    <Thead>*/}\r\n            {/*        <Tr>*/}\r\n            {/*            <Th>No</Th>*/}\r\n            {/*            <Th>Quiz Name</Th>*/}\r\n            {/*            <Th>Deadline</Th>*/}\r\n            {/*            <Th>Action</Th>*/}\r\n            {/*        </Tr>*/}\r\n            {/*    </Thead>*/}\r\n\r\n            {/*    <Tbody>*/}\r\n\r\n            {/*        {*/}\r\n            {/*            (assignedQuizzes || assignedQuizzes.length == 0) && <Tr>*/}\r\n            {/*                <Td colSpan={4} py={5} my={5}>*/}\r\n            {/*                    Your dont have any assigned quiz*/}\r\n            {/*                </Td>*/}\r\n            {/*            </Tr>*/}\r\n\r\n            {/*        }*/}\r\n            {/*        {*/}\r\n            {/*            assignedQuizzes &&*/}\r\n            {/*            assignedQuizzes.map((assignmentInfo, index) => (*/}\r\n            {/*                <Tr key={index}>*/}\r\n            {/*                    <Td>1</Td>*/}\r\n            {/*                    <Td>*/}\r\n            {/*                        <HStack>*/}\r\n            {/*                            <Text>        {assignmentInfo.quizDetails.title}  </Text>*/}\r\n            {/*                            <Badge ml=\"1\" colorScheme=\"green\">*/}\r\n            {/*                                New*/}\r\n            {/*                            </Badge>*/}\r\n            {/*                            /!*<Text bg={'teal.700'} px={2} color={'white'} fontSize={'sm'}>new</Text>*!/*/}\r\n            {/*                        </HStack>*/}\r\n            {/*                    </Td>*/}\r\n            {/*                    <Td>*/}\r\n            {/*                        <Tooltip*/}\r\n            {/*                            label={*/}\r\n            {/*                                // dateFormat(assignmentInfo.finishDate, \"dddd, mmmm, yyyy, h:MM:ss TT\")*/}\r\n            {/*                                formatDate(assignmentInfo.startDate, assignmentInfo.finishDate)*/}\r\n            {/*                            }>*/}\r\n            {/*                            <Text>*/}\r\n            {/*                                {assignmentInfo.finishDate*/}\r\n            {/*                                    ? dateFormat(assignmentInfo.finishDate, \"dd, mmmm, yyyy, h:MM TT\")*/}\r\n            {/*                                    : \"No Deadline\"*/}\r\n            {/*                                }*/}\r\n            {/*                            </Text>*/}\r\n            {/*                        </Tooltip>*/}\r\n\r\n            {/*                    </Td>*/}\r\n\r\n            {/*                    <Td>*/}\r\n            {/*                        <Button colorScheme={'blue'}>*/}\r\n            {/*                            Take*/}\r\n            {/*                        </Button>*/}\r\n            {/*                    </Td>*/}\r\n\r\n            {/*                </Tr>*/}\r\n            {/*            ))*/}\r\n            {/*        }*/}\r\n\r\n            {/*    </Tbody>*/}\r\n            {/*    {*/}\r\n            {/*        assignedQuizzes.length > 0 && <TableCaption>Assigned Quizzes</TableCaption>*/}\r\n            {/*    }*/}\r\n\r\n            {/*</Table>*/}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AssignedQuizPage;"]},"metadata":{},"sourceType":"module"}