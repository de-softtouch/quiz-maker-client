{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\components\\\\admin\\\\assigned\\\\AssignedQuizPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Divider, Heading, Table, TableCaption, Tbody, Td, Th, Thead, Tr } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AssignedQuizPage = () => {\n  _s();\n\n  const [isLoading, setLoading] = useState(true);\n  const [assignedQuizzes, setAssignedQuiz] = useState([]);\n  useEffect(() => {\n    console.log('use effect assign quiz');\n\n    try {\n      setLoading(true);\n      axios.get('http://localhost:8080/api/v1/member/quiz/assigned', {\n        headers: {\n          \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\n        }\n      }).then(resp => {\n        console.log(\"get data\");\n\n        if (resp.status === 200) {\n          console.log(resp.data);\n          setAssignedQuiz(resp.data);\n          setLoading(false);\n        }\n      });\n    } catch (e) {}\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      textAlign: 'center',\n      children: \"Assigned quizess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      my: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      size: 'lg',\n      variant: 'striped',\n      colorScheme: 'teal',\n      children: [/*#__PURE__*/_jsxDEV(TableCaption, {\n        children: \"Assigned Quizzes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Thead, {\n        children: /*#__PURE__*/_jsxDEV(Tr, {\n          children: [/*#__PURE__*/_jsxDEV(Th, {\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Quiz Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n        children: [1, 2, 3, 4, 5].map((item, i) => /*#__PURE__*/_jsxDEV(Tr, {\n          children: [/*#__PURE__*/_jsxDEV(Td, {\n            children: i + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: \"Spring boot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AssignedQuizPage, \"hxo0LZv4rWXnBaOylcnmj/MekbA=\");\n\n_c = AssignedQuizPage;\nexport default AssignedQuizPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignedQuizPage\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/components/admin/assigned/AssignedQuizPage.js"],"names":["React","useEffect","useState","Divider","Heading","Table","TableCaption","Tbody","Td","Th","Thead","Tr","axios","AssignedQuizPage","isLoading","setLoading","assignedQuizzes","setAssignedQuiz","console","log","get","headers","localStorage","getItem","then","resp","status","data","e","map","item","i"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Divider, Heading, Table, TableCaption, Tbody, Td, Th, Thead, Tr} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\n\r\nconst AssignedQuizPage = () => {\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [assignedQuizzes, setAssignedQuiz] = useState([]);\r\n    useEffect(() => {\r\n        console.log('use effect assign quiz');\r\n        try {\r\n            setLoading(true);\r\n            axios.get('http://localhost:8080/api/v1/member/quiz/assigned', {\r\n                    headers: {\r\n                        \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\r\n                    }})\r\n                .then((resp) => {\r\n                    console.log(\"get data\")\r\n                    if (resp.status === 200) {\r\n                        console.log(resp.data);\r\n                        setAssignedQuiz(resp.data);\r\n                        setLoading(false);\r\n                    }\r\n                })\r\n\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Heading textAlign={'center'}>Assigned quizess</Heading>\r\n            <Divider my={5}/>\r\n\r\n            <Table size={'lg'} variant={'striped'} colorScheme={'teal'}>\r\n                <TableCaption>Assigned Quizzes</TableCaption>\r\n                <Thead>\r\n                    <Tr>\r\n                        <Th>No</Th>\r\n                        <Th>Quiz Name</Th>\r\n                        <Th>Date</Th>\r\n                        <Th>Action</Th>\r\n                    </Tr>\r\n                </Thead>\r\n\r\n                <Tbody>\r\n                    {\r\n                        [1, 2, 3, 4, 5].map((item, i) => (\r\n                            <Tr key={i}>\r\n                                <Td>{i + 1}</Td>\r\n                                <Td>Spring boot</Td>\r\n                                <Td>Date</Td>\r\n                                <Td>Action</Td>\r\n                            </Tr>\r\n                        ))\r\n                    }\r\n\r\n                </Tbody>\r\n\r\n            </Table>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AssignedQuizPage;"]},"metadata":{},"sourceType":"module"}