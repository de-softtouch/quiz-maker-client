{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\pages\\\\admin\\\\library\\\\ShareDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Button, CloseButton, Divider, HStack, IconButton, Input, Spacer, Tag, TagCloseButton, TagLabel, Text, useToast, VStack, Wrap, WrapItem } from \"@chakra-ui/react\";\nimport { AiOutlineUsergroupAdd, MdPublic } from \"react-icons/all\";\nimport { CopyIcon } from \"@chakra-ui/icons\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ShareDialog = ({\n  setVisible,\n  quizId\n}) => {\n  _s();\n\n  const [emails, setEmails] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const toast = useToast();\n  useEffect(() => {\n    console.log(quizId);\n  }, []);\n\n  const onSubmit = async () => {\n    console.log(startDate);\n    console.log(finishDate); // try {\n    //     const data = {\n    //         quizId: quizId,\n    //         emails: emails,\n    //         startDate: startDate,\n    //         finishDate: finishDate\n    //     }\n    //     let url = \"http://localhost:8080/api/v1/admin/quiz-assignment/assign-quizzes\";\n    //     const resp = await axios.post(url, data,\n    //         {\n    //             headers: {\n    //                 \"Content-Type\": \"application/json\",\n    //                 \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\n    //             }\n    //         })\n    //     if (resp.status === 200) {\n    //         toast({\n    //             position: \"bottom-left\",\n    //             duration: 2000,\n    //             status: \"success\",\n    //             render: () => (\n    //                 <Box color=\"white\" p={3} bg=\"blue.500\">\n    //                     Share via emails success!\n    //                 </Box>\n    //             ),\n    //         })\n    //     }\n    // } catch (e) {\n    //     console.log(\"Failed to assign quiz to student \", e);\n    // } finally {\n    //     setVisible(false);\n    // }\n  };\n\n  const [startDate, setStartDate] = useState(new Date());\n  const [finishDate, setFinishDate] = useState();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      bg: \"gray.400\",\n      opacity: 0.8,\n      position: \"fixed\",\n      top: 0,\n      minH: \"100vh\",\n      right: 0,\n      onClick: () => setVisible(false),\n      minW: \"100vw\",\n      zIndex: 900\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      p: 5,\n      w: 500,\n      bg: \"white\",\n      borderRadius: \"md\",\n      boxShadow: \"md\",\n      transform: \"translate(50%,-50%)\",\n      position: \"fixed\",\n      top: \"40%\",\n      right: \"50%\",\n      height: \"auto\",\n      zIndex: 901,\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 5,\n        w: \"100%\",\n        children: [/*#__PURE__*/_jsxDEV(HStack, {\n          w: \"100%\",\n          children: [/*#__PURE__*/_jsxDEV(AiOutlineUsergroupAdd, {\n            size: \"20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"xl\",\n            fontWeight: \"medium\",\n            children: \"Invite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CloseButton, {\n            borderRadius: \"100px\",\n            bg: \"teal\",\n            color: \"white\",\n            onClick: () => setVisible(false),\n            size: \"md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n          w: \"100%\",\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: startDate,\n            onChange: date => setStartDate(date),\n            timeInputLabel: \"Time:\",\n            dateFormat: \"MM/dd/yyyy h:mm aa\",\n            showTimeInput: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          w: \"100%\",\n          align: \"start\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: \"medium\",\n            color: \"gray.600\",\n            children: \"Share public link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            w: \"100%\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              icon: /*#__PURE__*/_jsxDEV(CopyIcon, {\n                size: 30\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          w: \"100%\",\n          align: \"start\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: \"medium\",\n            color: \"gray.600\",\n            children: \"Share using emails\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Wrap, {\n            w: \"100%\",\n            children: emails.map(email => /*#__PURE__*/_jsxDEV(WrapItem, {\n              children: /*#__PURE__*/_jsxDEV(Tag, {\n                size: \"sm\",\n                borderRadius: \"full\",\n                variant: \"solid\",\n                colorScheme: \"green\",\n                children: [/*#__PURE__*/_jsxDEV(TagLabel, {\n                  children: email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TagCloseButton, {\n                  onClick: () => {\n                    let filteredEmail = emails.filter(e => e != email);\n                    setEmails(filteredEmail);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 37\n              }, this)\n            }, email, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            w: \"100%\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              size: \"sm\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              placeholder: \"Email to share. Ex: test@gmail.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setEmail(\"\");\n\n                if (!emails.includes(email)) {\n                  setEmails(prevState => [...prevState, email]);\n                }\n              },\n              isDisabled: email.length === 0,\n              size: \"sm\",\n              colorScheme: \"purple\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            w: \"100%\",\n            py: 5,\n            justifyContent: \"end\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onSubmit,\n              colorScheme: \"teal\",\n              children: \"Share invite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ShareDialog, \"nQtUMqimpVeZWHogiDTDh1mq83A=\", false, function () {\n  return [useToast];\n});\n\n_c = ShareDialog;\nexport default ShareDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShareDialog\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/pages/admin/library/ShareDialog.js"],"names":["React","useEffect","useState","Box","Button","CloseButton","Divider","HStack","IconButton","Input","Spacer","Tag","TagCloseButton","TagLabel","Text","useToast","VStack","Wrap","WrapItem","AiOutlineUsergroupAdd","MdPublic","CopyIcon","axios","DatePicker","ShareDialog","setVisible","quizId","emails","setEmails","email","setEmail","toast","console","log","onSubmit","startDate","finishDate","setStartDate","Date","setFinishDate","date","map","filteredEmail","filter","e","target","value","includes","prevState","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    CloseButton,\r\n    Divider,\r\n    HStack,\r\n    IconButton,\r\n    Input,\r\n    Spacer,\r\n    Tag,\r\n    TagCloseButton,\r\n    TagLabel,\r\n    Text,\r\n    useToast,\r\n    VStack,\r\n    Wrap,\r\n    WrapItem,\r\n} from \"@chakra-ui/react\";\r\nimport { AiOutlineUsergroupAdd, MdPublic } from \"react-icons/all\";\r\nimport { CopyIcon } from \"@chakra-ui/icons\";\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst ShareDialog = ({ setVisible, quizId }) => {\r\n    const [emails, setEmails] = useState([]);\r\n    const [email, setEmail] = useState(\"\");\r\n    const toast = useToast();\r\n    useEffect(() => {\r\n        console.log(quizId);\r\n    }, []);\r\n    const onSubmit = async () => {\r\n        console.log(startDate);\r\n        console.log(finishDate);\r\n        // try {\r\n        //     const data = {\r\n        //         quizId: quizId,\r\n        //         emails: emails,\r\n        //         startDate: startDate,\r\n        //         finishDate: finishDate\r\n        //     }\r\n        //     let url = \"http://localhost:8080/api/v1/admin/quiz-assignment/assign-quizzes\";\r\n        //     const resp = await axios.post(url, data,\r\n        //         {\r\n        //             headers: {\r\n        //                 \"Content-Type\": \"application/json\",\r\n        //                 \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\r\n        //             }\r\n        //         })\r\n        //     if (resp.status === 200) {\r\n        //         toast({\r\n        //             position: \"bottom-left\",\r\n        //             duration: 2000,\r\n        //             status: \"success\",\r\n        //             render: () => (\r\n        //                 <Box color=\"white\" p={3} bg=\"blue.500\">\r\n        //                     Share via emails success!\r\n        //                 </Box>\r\n        //             ),\r\n        //         })\r\n        //     }\r\n        // } catch (e) {\r\n        //     console.log(\"Failed to assign quiz to student \", e);\r\n        // } finally {\r\n        //     setVisible(false);\r\n        // }\r\n    };\r\n\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [finishDate, setFinishDate] = useState();\r\n\r\n    return (\r\n        <>\r\n            <Box\r\n                bg={\"gray.400\"}\r\n                opacity={0.8}\r\n                position={\"fixed\"}\r\n                top={0}\r\n                minH={\"100vh\"}\r\n                right={0}\r\n                onClick={() => setVisible(false)}\r\n                minW={\"100vw\"}\r\n                zIndex={900}\r\n            ></Box>\r\n            <Box\r\n                p={5}\r\n                w={500}\r\n                bg={\"white\"}\r\n                borderRadius={\"md\"}\r\n                boxShadow={\"md\"}\r\n                transform={\"translate(50%,-50%)\"}\r\n                position={\"fixed\"}\r\n                top={\"40%\"}\r\n                right={\"50%\"}\r\n                height={\"auto\"}\r\n                zIndex={901}\r\n            >\r\n                <VStack spacing={5} w={\"100%\"}>\r\n                    {/*TITLE*/}\r\n                    <HStack w={\"100%\"}>\r\n                        <AiOutlineUsergroupAdd size={\"20\"} />\r\n                        <Text fontSize={\"xl\"} fontWeight={\"medium\"}>\r\n                            Invite\r\n                        </Text>\r\n                        <Spacer />\r\n                        <CloseButton\r\n                            borderRadius={\"100px\"}\r\n                            bg={\"teal\"}\r\n                            color={\"white\"}\r\n                            onClick={() => setVisible(false)}\r\n                            size={\"md\"}\r\n                        />\r\n                    </HStack>\r\n                    {/*DATE*/}\r\n                    <HStack w={\"100%\"}>\r\n                        <DatePicker\r\n                            selected={startDate}\r\n                            onChange={(date) => setStartDate(date)}\r\n                            timeInputLabel=\"Time:\"\r\n                            dateFormat=\"MM/dd/yyyy h:mm aa\"\r\n                            showTimeInput\r\n                        />\r\n                    </HStack>\r\n                    <VStack w={\"100%\"} align={\"start\"}>\r\n                        <Text fontWeight={\"medium\"} color={\"gray.600\"}>\r\n                            Share public link\r\n                        </Text>\r\n                        <HStack w={\"100%\"}>\r\n                            <Input size={\"sm\"} />\r\n                            <IconButton icon={<CopyIcon size={30} />} />\r\n                        </HStack>\r\n                    </VStack>\r\n                    <Divider />\r\n                    {/*SHARE WITH EMAILS*/}\r\n                    <VStack w={\"100%\"} align={\"start\"}>\r\n                        <Text fontWeight={\"medium\"} color={\"gray.600\"}>\r\n                            Share using emails\r\n                        </Text>\r\n                        {/*EMAIL*/}\r\n                        <Wrap w={\"100%\"}>\r\n                            {emails.map((email) => (\r\n                                <WrapItem key={email}>\r\n                                    <Tag\r\n                                        size={\"sm\"}\r\n                                        borderRadius=\"full\"\r\n                                        variant=\"solid\"\r\n                                        colorScheme=\"green\"\r\n                                    >\r\n                                        <TagLabel>{email}</TagLabel>\r\n                                        <TagCloseButton\r\n                                            onClick={() => {\r\n                                                let filteredEmail =\r\n                                                    emails.filter(\r\n                                                        (e) => e != email\r\n                                                    );\r\n                                                setEmails(filteredEmail);\r\n                                            }}\r\n                                        />\r\n                                    </Tag>\r\n                                </WrapItem>\r\n                            ))}\r\n                        </Wrap>\r\n                        {/*INPUT & ADD BUTTOn*/}\r\n                        <HStack w={\"100%\"}>\r\n                            <Input\r\n                                size={\"sm\"}\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                                placeholder={\r\n                                    \"Email to share. Ex: test@gmail.com\"\r\n                                }\r\n                            />\r\n                            <Button\r\n                                onClick={() => {\r\n                                    setEmail(\"\");\r\n                                    if (!emails.includes(email)) {\r\n                                        setEmails((prevState) => [\r\n                                            ...prevState,\r\n                                            email,\r\n                                        ]);\r\n                                    }\r\n                                }}\r\n                                isDisabled={email.length === 0}\r\n                                size={\"sm\"}\r\n                                colorScheme={\"purple\"}\r\n                            >\r\n                                Add\r\n                            </Button>\r\n                        </HStack>\r\n\r\n                        <HStack w={\"100%\"} py={5} justifyContent={\"end\"}>\r\n                            <Button onClick={onSubmit} colorScheme={\"teal\"}>\r\n                                Share invite\r\n                            </Button>\r\n                        </HStack>\r\n                    </VStack>\r\n                </VStack>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ShareDialog;\r\n"]},"metadata":{},"sourceType":"module"}