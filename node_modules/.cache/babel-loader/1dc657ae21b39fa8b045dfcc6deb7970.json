{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\pages\\\\admin\\\\quiz_edit\\\\components\\\\NewQuestionDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box, Button, Container, Heading, HStack, Input, ModalOverlay, Spacer, Text, Textarea, VStack } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewQuestionDialog = ({\n  visible,\n  setVisible\n}) => {\n  _s();\n\n  const option = {\n    content: \"option contnt\"\n  };\n  const [question, setQuestion] = useState(null);\n  const [options, setOptions] = useState([option, option]);\n\n  const onOptionChange = (e, index) => {\n    //push new option if it is the last index option\n    if (index === options.length - 1) {\n      options.push({});\n    }\n\n    setOptions(prevState => prevState.map((option, i) => i === index ? { ...option,\n      content: e.target.value\n    } : option));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      onClick: () => {\n        setVisible(false);\n      },\n      zIndex: 1000,\n      bg: 'gray.600',\n      opacity: .5,\n      position: 'fixed',\n      right: 0,\n      top: 0,\n      minW: '100vw',\n      minH: '100vh'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      zIndex: 1001,\n      borderRadius: 'md',\n      boxShadow: 'md',\n      position: 'fixed',\n      right: '50%',\n      top: '50%',\n      bg: 'gray.100',\n      transform: \"translate(50%,-50%)\",\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        minW: 800,\n        p: 5,\n        spacing: 5,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: '20',\n          fontWeight: 'medium',\n          textAlign: 'start',\n          w: '100%',\n          children: \"Add questionss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          w: '100%',\n          children: /*#__PURE__*/_jsxDEV(Textarea, {\n            borderColor: 'black',\n            placeholder: \"Here is a sample placeholder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          Æ°: '100%',\n          children: /*#__PURE__*/_jsxDEV(VStack, {\n            w: '100%',\n            children: options.map((option, index) => /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => onOptionChange(e, index),\n              isFullWidth: true,\n              placeholder: \"option\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 36\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n          w: '100%',\n          children: [/*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: 'outline',\n            colorScheme: 'gray',\n            onClick: () => setVisible(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: 'solid',\n            colorScheme: 'blue',\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewQuestionDialog, \"yz0a/yz1blrajPP+jjUttVrOthA=\");\n\n_c = NewQuestionDialog;\nexport default NewQuestionDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewQuestionDialog\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/pages/admin/quiz_edit/components/NewQuestionDialog.js"],"names":["React","useState","Box","Button","Container","Heading","HStack","Input","ModalOverlay","Spacer","Text","Textarea","VStack","NewQuestionDialog","visible","setVisible","option","content","question","setQuestion","options","setOptions","onOptionChange","e","index","length","push","prevState","map","i","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Container,\r\n    Heading,\r\n    HStack,\r\n    Input,\r\n    ModalOverlay,\r\n    Spacer,\r\n    Text,\r\n    Textarea,\r\n    VStack\r\n} from \"@chakra-ui/react\";\r\n\r\nconst NewQuestionDialog = ({visible, setVisible}) => {\r\n\r\n    const option = {\r\n        content: \"option contnt\"\r\n    }\r\n    const [question, setQuestion] = useState(null);\r\n    const [options, setOptions] = useState([option, option]);\r\n\r\n    const onOptionChange = (e, index) => {\r\n        //push new option if it is the last index option\r\n        if (index === options.length - 1) {\r\n            options.push({});\r\n        }\r\n        setOptions((prevState) => (\r\n            prevState.map((option, i) => i === index\r\n                ? {\r\n                    ...option,\r\n                    content: e.target.value\r\n                }\r\n                : option)\r\n        ));\r\n    }\r\n    return (\r\n        <>\r\n            <Box\r\n                onClick={() => {\r\n                    setVisible(false)\r\n\r\n                }}\r\n                zIndex={1000}\r\n                bg={'gray.600'}\r\n                opacity={.5}\r\n                position={'fixed'}\r\n                right={0}\r\n                top={0}\r\n                minW={'100vw'}\r\n                minH={'100vh'}/>\r\n            <Box zIndex={1001}\r\n                 borderRadius={'md'}\r\n                 boxShadow={'md'}\r\n                 position={'fixed'}\r\n                 right={'50%'}\r\n                 top={'50%'}\r\n                 bg={'gray.100'}\r\n                 transform={\"translate(50%,-50%)\"}\r\n            >\r\n                <VStack minW={800} p={5} spacing={5}>\r\n                    <Text fontSize={'20'} fontWeight={'medium'} textAlign={'start'} w={'100%'}>Add questionss</Text>\r\n                    <Box w={'100%'}>\r\n                        <Textarea borderColor={'black'} placeholder=\"Here is a sample placeholder\"/>\r\n                    </Box>\r\n                   <Container Æ°={'100%'}>\r\n                       <VStack  w={'100%'}>\r\n                           {\r\n                               options.map((option, index) => (\r\n                                   <Input\r\n                                       onChange={(e) => onOptionChange(e, index)}\r\n                                       key={index}\r\n                                       isFullWidth={true} placeholder={\"option\"}/>\r\n                               ))\r\n                           }\r\n                       </VStack>\r\n                   </Container>\r\n                    <HStack w={'100%'}>\r\n                        <Spacer/>\r\n                        <Button variant={'outline'} colorScheme={'gray'}\r\n                                onClick={() => setVisible(false)}>Cancel</Button>\r\n                        <Button variant={'solid'} colorScheme={'blue'}>Save</Button>\r\n                    </HStack>\r\n                </VStack>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NewQuestionDialog;"]},"metadata":{},"sourceType":"module"}