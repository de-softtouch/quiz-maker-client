{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\quiz maker client\\\\src\\\\pages\\\\admin\\\\assigment\\\\AssignmentReport.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AdminContext } from \"../../../providers/AdminSettingProvider\";\nimport { useParams } from \"react-router-dom\";\nimport UserService from \"../../../service/UserService\";\nimport { Flex, HStack, Text, VStack } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AssignmentReport = () => {\n  _s();\n\n  const {\n    isLoading,\n    setLoading\n  } = useContext(AdminContext);\n  const [reports, setReports] = useState({});\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getReport();\n  }, []);\n\n  const getReport = async () => {\n    setLoading(true);\n\n    try {\n      const resp = await UserService.getAssignmentReport(id);\n      console.log(resp.data);\n    } catch (e) {} finally {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      direction: 'column',\n      children: [/*#__PURE__*/_jsxDEV(HStack, {\n        children: \"Quiz Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), !isLoading && reports && reports.map(report => /*#__PURE__*/_jsxDEV(HStack, {\n        children: /*#__PURE__*/_jsxDEV(VStack, {\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            children: report.quiz.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AssignmentReport, \"PdzElQEjbQJjV2AXhOiex/xh16U=\", false, function () {\n  return [useParams];\n});\n\n_c = AssignmentReport;\nexport default AssignmentReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignmentReport\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/quiz maker client/src/pages/admin/assigment/AssignmentReport.js"],"names":["React","useContext","useEffect","useState","AdminContext","useParams","UserService","Flex","HStack","Text","VStack","AssignmentReport","isLoading","setLoading","reports","setReports","id","getReport","resp","getAssignmentReport","console","log","data","e","map","report","quiz","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAAQC,YAAR,QAA2B,yCAA3B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAAQC,IAAR,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,MAA5B,QAAyC,kBAAzC;;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAA0BZ,UAAU,CAACG,YAAD,CAA1C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAACa,IAAAA;AAAD,MAAOX,SAAS,EAAtB;AACAH,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMA,SAAS,GAAG,YAAY;AAC1BJ,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAI;AACA,YAAMK,IAAI,GAAG,MAAMZ,WAAW,CAACa,mBAAZ,CAAgCH,EAAhC,CAAnB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,IAAjB;AACH,KAHD,CAGE,OAAOC,CAAP,EAAU,CAEX,CALD,SAKU;AACNV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAXD;;AAYA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAE,QAAjB;AAAA,8BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAGQ,CAACD,SAAD,IAAcE,OAAd,IAAyBA,OAAO,CAACU,GAAR,CAAaC,MAAD,iBACjC,QAAC,MAAD;AAAA,+BACI,QAAC,MAAD;AAAA,iCACI,QAAC,IAAD;AAAA,sBAAOA,MAAM,CAACC,IAAP,CAAYC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADqB,CAHjC;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAgBH,CAnCD;;GAAMhB,gB;UAGWN,S;;;KAHXM,gB;AAqCN,eAAeA,gBAAf","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {AdminContext} from \"../../../providers/AdminSettingProvider\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport UserService from \"../../../service/UserService\";\r\nimport {Flex, HStack, Text, VStack} from \"@chakra-ui/react\";\r\n\r\nconst AssignmentReport = () => {\r\n    const {isLoading, setLoading} = useContext(AdminContext);\r\n    const [reports, setReports] = useState({});\r\n    const {id} = useParams();\r\n    useEffect(() => {\r\n        getReport();\r\n    }, []);\r\n    const getReport = async () => {\r\n        setLoading(true);\r\n\r\n        try {\r\n            const resp = await UserService.getAssignmentReport(id);\r\n            console.log(resp.data);\r\n        } catch (e) {\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Flex direction={'column'}>\r\n                <HStack>Quiz Info</HStack>\r\n                {\r\n                    !isLoading && reports && reports.map((report) => (\r\n                        <HStack>\r\n                            <VStack>\r\n                                <Text>{report.quiz.title}</Text>\r\n                            </VStack>\r\n                        </HStack>\r\n                    ))\r\n                }\r\n            </Flex>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AssignmentReport;"]},"metadata":{},"sourceType":"module"}