{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\providers\\\\AuthProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setAuthenticated] = useState(false);\n  const [isLoading, setLoading] = useState(true); //login\n\n  const login = async (email, password, remember) => {\n    await Axios.post(\"http://localhost:8080/api/v1/auth/login\", {\n      \"email\": email,\n      \"password\": password\n    }).then(resp => {\n      if (resp.status === 200) {\n        if (remember) {\n          localStorage.setItem(\"accessToken\", resp.data.access_token);\n          localStorage.setItem(\"refreshToken\", resp.data.refresh_token);\n        }\n\n        console.log('login success');\n        return true;\n      }\n    }).catch(error => {\n      return false;\n    });\n  }; //logout\n\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n  };\n\n  const getUserDetails = () => {\n    if (localStorage.getItem('accessToken') != null) {\n      setLoading(true);\n      let url = \"http://localhost:8080/api/v1/member/users/user-details\";\n      axios.get(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`\n        }\n      }).then(resp => {\n        if (resp.status === 200) {\n          setUser(resp.data);\n          console.log(resp.data);\n          localStorage.setItem(\"user\", JSON.stringify(resp.data));\n          return;\n        } else if (resp.status === 401) {//refresh token\n        } else {\n          logout();\n        }\n      }).catch(() => {\n        logout();\n        setLoading(false);\n      }).finally(() => {\n        setLoading(false);\n      });\n    }\n  }; //create value\n\n\n  const value = {\n    user,\n    setUser,\n    login,\n    logout,\n    isAuthenticated,\n    setAuthenticated,\n    getUserDetails\n  };\n  useEffect(() => {\n    setLoading(true);\n    const accessToken = localStorage.getItem(\"accessToken\");\n\n    if (accessToken != null) {\n      setLoading(true);\n      let url = \"http://localhost:8080/api/v1/member/users/user-details\";\n      axios.get(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${accessToken}`\n        }\n      }).then(resp => {\n        if (resp.status === 200) {\n          setUser(resp.data);\n          console.log(resp.data);\n          localStorage.setItem(\"user\", JSON.stringify(resp.data));\n          return;\n        } else if (resp.status === 401) {//refresh token\n        } else {\n          logout();\n        }\n      }).catch(() => {\n        logout();\n        setLoading(false);\n      }).finally(() => {\n        setLoading(false);\n      });\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isLoading && /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: value,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 31\n    }, this)\n  }, void 0, false);\n};\n\n_s(AuthProvider, \"mG/s7ak7DGhM5YnK01dXLhLFAeA=\");\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/providers/AuthProvider.js"],"names":["React","createContext","useEffect","useState","Axios","axios","AuthContext","AuthProvider","children","user","setUser","isAuthenticated","setAuthenticated","isLoading","setLoading","login","email","password","remember","post","then","resp","status","localStorage","setItem","data","access_token","refresh_token","console","log","catch","error","logout","removeItem","getUserDetails","getItem","url","get","headers","JSON","stringify","finally","value","accessToken"],"mappings":"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","sourcesContent":["import React, {createContext, useEffect, useState} from \"react\";\r\nimport Axios from \"axios\";\r\nimport axios from \"axios\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({children}) => {\r\n\r\n    const [user, setUser] = useState(null);\r\n    const [isAuthenticated, setAuthenticated] = useState(false);\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n    //login\r\n    const login = async (email, password, remember) => {\r\n        await Axios.post(\"http://localhost:8080/api/v1/auth/login\", {\r\n            \"email\": email,\r\n            \"password\": password\r\n        }).then(resp => {\r\n            if (resp.status === 200) {\r\n                if (remember) {\r\n                    localStorage.setItem(\"accessToken\", resp.data.access_token);\r\n                    localStorage.setItem(\"refreshToken\", resp.data.refresh_token);\r\n                }\r\n                console.log('login success');\r\n                return true;\r\n            }\r\n        }).catch(error => {\r\n            return false;\r\n        })\r\n\r\n    };\r\n\r\n    //logout\r\n    const logout = () => {\r\n        setUser(null);\r\n        localStorage.removeItem('user')\r\n        localStorage.removeItem('accessToken')\r\n        localStorage.removeItem('refreshToken')\r\n    }\r\n    const getUserDetails = () => {\r\n        if (localStorage.getItem('accessToken') != null) {\r\n            setLoading(true);\r\n            let url = \"http://localhost:8080/api/v1/member/users/user-details\";\r\n            axios.get(url, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`\r\n                }\r\n            })\r\n                .then(resp => {\r\n                    if (resp.status === 200) {\r\n                        setUser(resp.data);\r\n                        console.log(resp.data);\r\n                        localStorage.setItem(\"user\", JSON.stringify(resp.data));\r\n                        return;\r\n                    } else if (resp.status === 401) {\r\n                        //refresh token\r\n                    } else {\r\n                        logout();\r\n                    }\r\n                }).catch(\r\n                () => {\r\n                    logout();\r\n                    setLoading(false);\r\n                }\r\n            ).finally(() => {\r\n                setLoading(false);\r\n            })\r\n        }\r\n    }\r\n\r\n    //create value\r\n    const value = {\r\n        user,\r\n        setUser,\r\n        login,\r\n        logout,\r\n        isAuthenticated,\r\n        setAuthenticated,\r\n        getUserDetails,\r\n    };\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const accessToken = localStorage.getItem(\"accessToken\");\r\n        if (accessToken != null) {\r\n            setLoading(true);\r\n            let url = \"http://localhost:8080/api/v1/member/users/user-details\";\r\n            axios.get(url, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${accessToken}`\r\n                }\r\n            })\r\n                .then(resp => {\r\n                    if (resp.status === 200) {\r\n                        setUser(resp.data);\r\n                        console.log(resp.data);\r\n                        localStorage.setItem(\"user\", JSON.stringify(resp.data));\r\n                        return;\r\n                    } else if (resp.status === 401) {\r\n                        //refresh token\r\n                    } else {\r\n                        logout();\r\n                    }\r\n                }).catch(\r\n                () => {\r\n                    logout();\r\n                    setLoading(false);\r\n                }\r\n            ).finally(() => {\r\n                setLoading(false);\r\n            })\r\n\r\n        } else {\r\n            setLoading(false)\r\n        }\r\n    }, []);\r\n    return (\r\n        <>\r\n            {\r\n                !isLoading && <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\r\n            }\r\n        </>\r\n    )\r\n        ;\r\n};"]},"metadata":{},"sourceType":"module"}