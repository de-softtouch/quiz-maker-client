{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\components\\\\admin\\\\quiz_edit\\\\QuizEditor.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { Heading } from \"@chakra-ui/react\";\nimport { HamburgerIcon, CloseIcon, AddIcon, Box, Flex, Avatar, HStack, Link, IconButton, Button, Menu, MenuButton, MenuList, MenuItem, MenuDivider, useDisclosure, useColorModeValue, Stack } from '@chakra-ui/icons';\n/*\r\nEditor Page\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuizEditor = () => {\n  _s();\n\n  //get id of quiz\n  const {\n    id\n  } = useParams();\n  const [visible, setVisible] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Heading, {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuizEditor, \"dCBAJQ34e0cGGslHTIaTdxECC+U=\", false, function () {\n  return [useParams];\n});\n\n_c = QuizEditor;\nexport default QuizEditor;\nconst Links = ['Dashboard', 'Projects', 'Team'];\n\nconst NavLink = ({\n  children\n}) => {\n  _s2();\n\n  return /*#__PURE__*/_jsxDEV(Link, {\n    px: 2,\n    py: 1,\n    rounded: 'md',\n    _hover: {\n      textDecoration: 'none',\n      bg: useColorModeValue('gray.200', 'gray.700')\n    },\n    href: '#',\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(NavLink, \"3skuTHwppfEdh6aKNlffDjyTB8U=\", false, function () {\n  return [useColorModeValue];\n});\n\n_c2 = NavLink;\n\nfunction withAction() {\n  _s3();\n\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      bg: useColorModeValue('gray.100', 'gray.900'),\n      px: 4,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        h: 16,\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          size: 'md',\n          icon: isOpen ? /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(HamburgerIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 56\n          }, this),\n          \"aria-label\": 'Open Menu',\n          display: {\n            md: 'none'\n          },\n          onClick: isOpen ? onClose : onOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n          spacing: 8,\n          alignItems: 'center',\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: \"Logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            as: 'nav',\n            spacing: 4,\n            display: {\n              base: 'none',\n              md: 'flex'\n            },\n            children: Links.map(link => /*#__PURE__*/_jsxDEV(NavLink, {\n              children: link\n            }, link, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: 'center',\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: 'solid',\n            colorScheme: 'teal',\n            size: 'sm',\n            mr: 4,\n            leftIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 39\n            }, this),\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Menu, {\n            children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n              as: Button,\n              rounded: 'full',\n              variant: 'link',\n              cursor: 'pointer',\n              minW: 0,\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                size: 'sm',\n                src: 'https://images.unsplash.com/photo-1493666438817-866a91353ca9?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&fit=crop&h=200&w=200&s=b616b2c5b373a80ffc9636ba24f7a4a9'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuList, {\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                children: \"Link 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                children: \"Link 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuDivider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                children: \"Link 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), isOpen ? /*#__PURE__*/_jsxDEV(Box, {\n        pb: 4,\n        display: {\n          md: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          as: 'nav',\n          spacing: 4,\n          children: Links.map(link => /*#__PURE__*/_jsxDEV(NavLink, {\n            children: link\n          }, link, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      p: 4,\n      children: \"Main Content Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s3(withAction, \"6awIlLqqqpzda2oInKHfZNU7DaE=\", false, function () {\n  return [useDisclosure, useColorModeValue];\n});\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QuizEditor\");\n$RefreshReg$(_c2, \"NavLink\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/components/admin/quiz_edit/QuizEditor.js"],"names":["React","Component","useState","useParams","Heading","HamburgerIcon","CloseIcon","AddIcon","Box","Flex","Avatar","HStack","Link","IconButton","Button","Menu","MenuButton","MenuList","MenuItem","MenuDivider","useDisclosure","useColorModeValue","Stack","QuizEditor","id","visible","setVisible","Links","NavLink","children","textDecoration","bg","withAction","isOpen","onOpen","onClose","md","base","map","link"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\r\n\r\nimport {useParams} from \"react-router-dom\";\r\nimport {Heading} from \"@chakra-ui/react\";\r\nimport { HamburgerIcon, CloseIcon, AddIcon, Box,\r\n    Flex,\r\n    Avatar,\r\n    HStack,\r\n    Link,\r\n    IconButton,\r\n    Button,\r\n    Menu,\r\n    MenuButton,\r\n    MenuList,\r\n    MenuItem,\r\n    MenuDivider,\r\n    useDisclosure,\r\n    useColorModeValue,\r\n    Stack, } from '@chakra-ui/icons';\r\n\r\n/*\r\nEditor Page\r\n */\r\nconst QuizEditor = () => {\r\n\r\n    //get id of quiz\r\n    const {id} = useParams();\r\n\r\n    const [visible,setVisible]  = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <Heading>{id}</Heading>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuizEditor;\r\n\r\n\r\n\r\nconst Links = ['Dashboard', 'Projects', 'Team'];\r\n\r\nconst NavLink = ({ children }) => (\r\n    <Link\r\n        px={2}\r\n        py={1}\r\n        rounded={'md'}\r\n        _hover={{\r\n            textDecoration: 'none',\r\n            bg: useColorModeValue('gray.200', 'gray.700'),\r\n        }}\r\n        href={'#'}>\r\n        {children}\r\n    </Link>\r\n);\r\n\r\n  function withAction() {\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n    return (\r\n        <>\r\n            <Box bg={useColorModeValue('gray.100', 'gray.900')} px={4}>\r\n                <Flex h={16} alignItems={'center'} justifyContent={'space-between'}>\r\n                    <IconButton\r\n                        size={'md'}\r\n                        icon={isOpen ? <CloseIcon /> : <HamburgerIcon />}\r\n                        aria-label={'Open Menu'}\r\n                        display={{ md: 'none' }}\r\n                        onClick={isOpen ? onClose : onOpen}\r\n                    />\r\n                    <HStack spacing={8} alignItems={'center'}>\r\n                        <Box>Logo</Box>\r\n                        <HStack\r\n                            as={'nav'}\r\n                            spacing={4}\r\n                            display={{ base: 'none', md: 'flex' }}>\r\n                            {Links.map((link) => (\r\n                                <NavLink key={link}>{link}</NavLink>\r\n                            ))}\r\n                        </HStack>\r\n                    </HStack>\r\n                    <Flex alignItems={'center'}>\r\n                        <Button\r\n                            variant={'solid'}\r\n                            colorScheme={'teal'}\r\n                            size={'sm'}\r\n                            mr={4}\r\n                            leftIcon={<AddIcon />}>\r\n                            Action\r\n                        </Button>\r\n                        <Menu>\r\n                            <MenuButton\r\n                                as={Button}\r\n                                rounded={'full'}\r\n                                variant={'link'}\r\n                                cursor={'pointer'}\r\n                                minW={0}>\r\n                                <Avatar\r\n                                    size={'sm'}\r\n                                    src={\r\n                                        'https://images.unsplash.com/photo-1493666438817-866a91353ca9?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&fit=crop&h=200&w=200&s=b616b2c5b373a80ffc9636ba24f7a4a9'\r\n                                    }\r\n                                />\r\n                            </MenuButton>\r\n                            <MenuList>\r\n                                <MenuItem>Link 1</MenuItem>\r\n                                <MenuItem>Link 2</MenuItem>\r\n                                <MenuDivider />\r\n                                <MenuItem>Link 3</MenuItem>\r\n                            </MenuList>\r\n                        </Menu>\r\n                    </Flex>\r\n                </Flex>\r\n\r\n                {isOpen ? (\r\n                    <Box pb={4} display={{ md: 'none' }}>\r\n                        <Stack as={'nav'} spacing={4}>\r\n                            {Links.map((link) => (\r\n                                <NavLink key={link}>{link}</NavLink>\r\n                            ))}\r\n                        </Stack>\r\n                    </Box>\r\n                ) : null}\r\n            </Box>\r\n\r\n            <Box p={4}>Main Content Here</Box>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}