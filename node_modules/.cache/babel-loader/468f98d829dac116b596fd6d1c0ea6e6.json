{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\pages\\\\admin\\\\quiz_edit\\\\components\\\\QuizEditDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport { Button, FormControl, FormLabel, Input, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Select } from \"@chakra-ui/react\";\nimport { QuizEditContext } from \"../../../../providers/QuizEditProvider\";\nimport SubjectService from \"../../../../service/SubjectService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuizEditDialog = ({\n  isOpen,\n  setOpen\n}) => {\n  _s();\n\n  const {\n    quiz,\n    setQuiz,\n    isLoading,\n    setLoading\n  } = useContext(QuizEditContext);\n  const [subjects, setSubjects] = useState([]);\n  const [organizations, setOrganizations] = useState([]);\n  const initialRef = useRef();\n  const finalRef = useRef();\n  useEffect(() => {\n    getSubject();\n  }, []);\n\n  const getSubject = async () => {\n    setLoading(true);\n\n    try {\n      const resp = await SubjectService.getSubjects();\n      setSubjects(resp.data);\n    } catch (e) {} finally {\n      setLoading(false);\n    }\n  };\n\n  const changeSubject = e => {\n    setQuiz(prev => ({ ...prev,\n      subject: { ...prev.subject,\n        title: e.target.value\n      }\n    }));\n  };\n\n  const onSaveChange = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      initialFocusRef: initialRef,\n      finalFocusRef: finalRef,\n      isOpen: isOpen,\n      onClose: () => setOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"Edit Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          pb: 6,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Quiz title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              value: quiz && quiz.title,\n              ref: initialRef,\n              placeholder: \"Quiz title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            mt: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              onChange: e => {\n                changeSubject(e);\n              },\n              defaultValue: quiz.subject.id,\n              size: 'sm',\n              children: !isLoading && subjects && subjects.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.id,\n                children: item.title\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => onSaveChange(),\n            colorScheme: \"blue\",\n            mr: 3,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(QuizEditDialog, \"KfHWG4YxaJL3WKjlLsUdvX4nB2I=\");\n\n_c = QuizEditDialog;\nexport default QuizEditDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizEditDialog\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/pages/admin/quiz_edit/components/QuizEditDialog.js"],"names":["React","useContext","useEffect","useRef","useState","Button","FormControl","FormLabel","Input","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","Select","QuizEditContext","SubjectService","QuizEditDialog","isOpen","setOpen","quiz","setQuiz","isLoading","setLoading","subjects","setSubjects","organizations","setOrganizations","initialRef","finalRef","getSubject","resp","getSubjects","data","e","changeSubject","prev","subject","title","target","value","onSaveChange","id","map","item"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useRef, useState} from 'react';\r\nimport {\r\n    Button,\r\n    FormControl, FormLabel, Input,\r\n    Modal,\r\n    ModalBody,\r\n    ModalCloseButton,\r\n    ModalContent, ModalFooter,\r\n    ModalHeader,\r\n    ModalOverlay, Select\r\n} from \"@chakra-ui/react\";\r\nimport {QuizEditContext} from \"../../../../providers/QuizEditProvider\";\r\nimport SubjectService from \"../../../../service/SubjectService\";\r\n\r\nconst QuizEditDialog = ({isOpen, setOpen}) => {\r\n\r\n    const {quiz, setQuiz, isLoading, setLoading} = useContext(QuizEditContext);\r\n    const [subjects, setSubjects] = useState([]);\r\n    const [organizations, setOrganizations] = useState([]);\r\n    const initialRef = useRef();\r\n    const finalRef = useRef();\r\n    useEffect(() => {\r\n        getSubject();\r\n    }, [])\r\n\r\n    const getSubject = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const resp = await SubjectService.getSubjects();\r\n            setSubjects(resp.data);\r\n        } catch (e) {\r\n\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const changeSubject = (e) => {\r\n        setQuiz((prev) => ({\r\n            ...prev,\r\n            subject: {\r\n                ...prev.subject,\r\n                title: e.target.value\r\n            }\r\n        }))\r\n    }\r\n    const onSaveChange = () => {\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Modal\r\n                initialFocusRef={initialRef}\r\n                finalFocusRef={finalRef}\r\n                isOpen={isOpen}\r\n                onClose={() => setOpen(false)}\r\n            >\r\n                <ModalOverlay/>\r\n                <ModalContent>\r\n                    <ModalHeader>Edit Quiz</ModalHeader>\r\n                    <ModalCloseButton/>\r\n                    <ModalBody pb={6}>\r\n                        <FormControl>\r\n                            <FormLabel>Quiz title</FormLabel>\r\n                            <Input\r\n                                value={quiz && quiz.title}\r\n                                ref={initialRef} placeholder=\"Quiz title\"/>\r\n                        </FormControl>\r\n\r\n\r\n                        <FormControl mt={4}>\r\n                            <FormLabel>Subject</FormLabel>\r\n                            <Select\r\n                                onChange={(e) => {\r\n                                    changeSubject(e);\r\n                                }}\r\n                                defaultValue={quiz.subject.id}\r\n                                size={'sm'}>\r\n                                {!isLoading && subjects && subjects.map(item => (\r\n                                    <option key={item.id} value={item.id}>{item.title}</option>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        <Button\r\n                            onClick={() => onSaveChange()}\r\n                            colorScheme=\"blue\" mr={3}>\r\n                            Save\r\n                        </Button>\r\n                        <Button onClick={() => setOpen(false)}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default QuizEditDialog;"]},"metadata":{},"sourceType":"module"}