{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\pages\\\\admin\\\\library\\\\AssignedUsers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, ListItem, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, OrderedList, Text, useDisclosure } from \"@chakra-ui/react\";\nimport quizApi from \"../../../api/quizApi\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AssignedUsers = ({\n  isOpen\n}) => {\n  _s();\n\n  const [users, setUsers] = useState(null);\n  const {\n    onClose\n  } = useDisclosure();\n  useEffect(() => {\n    console.log(\"ASSIGNED \");\n\n    const fetchUsers = async () => {\n      console.log(\"get userss\");\n\n      try {\n        const resp = await axios.get(`http://localhost:8080/api/v1/admin/quiz-assignment/assign-quizzes/${quizId}/users`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`\n          }\n        });\n\n        if (resp.status === 200) {\n          setUsers(resp.data);\n          console.log(resp.data);\n        }\n      } catch (e) {\n        console.log(\"Failed to fetch assigned users \", e);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      closeOnOverlayClick: true,\n      isOpen: isOpen,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"Assigned users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(OrderedList, {\n            spacing: 4,\n            children: users && users.map((user, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: user.email\n            }, user.email, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onClose,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AssignedUsers, \"gqaXA/ynXsvr1/TzyU8+I/cMrGM=\", false, function () {\n  return [useDisclosure];\n});\n\n_c = AssignedUsers;\nexport default AssignedUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignedUsers\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/pages/admin/library/AssignedUsers.js"],"names":["React","useEffect","useState","Button","ListItem","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","OrderedList","Text","useDisclosure","quizApi","axios","AssignedUsers","isOpen","users","setUsers","onClose","console","log","fetchUsers","resp","get","quizId","headers","localStorage","getItem","status","data","e","map","user","i","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SACIC,MADJ,EACYC,QADZ,EAEIC,KAFJ,EAEWC,SAFX,EAGIC,gBAHJ,EAIIC,YAJJ,EAIkBC,WAJlB,EAKIC,WALJ,EAMIC,YANJ,EAMkBC,WANlB,EAM+BC,IAN/B,EAOIC,aAPJ,QAQO,kBARP;AASA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA;;AAEhC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAM;AAACmB,IAAAA;AAAD,MAAYP,aAAa,EAA/B;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AACA,UAAMC,UAAU,GAAG,YAAY;AAC3BF,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AACA,UAAI;AACA,cAAME,IAAI,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,qEAAoEC,MAAO,QAAtF,EAA+F;AAC9GC,UAAAA,OAAO,EAAE;AACL,4BAAgB,kBADX;AAEL,6BAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAoC;AAF1D;AADqG,SAA/F,CAAnB;;AAMA,YAAIL,IAAI,CAACM,MAAL,KAAgB,GAApB,EAAyB;AACrBX,UAAAA,QAAQ,CAACK,IAAI,CAACO,IAAN,CAAR;AACAV,UAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACO,IAAjB;AACH;AACJ,OAXD,CAWE,OAAOC,CAAP,EAAU;AACRX,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EAA+CU,CAA/C;AACH;AACJ,KAhBD;;AAiBAT,IAAAA,UAAU;AACb,GApBQ,EAoBN,EApBM,CAAT;AAqBA,sBACI;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,mBAAmB,EAAE,IAA5B;AAAkC,MAAA,MAAM,EAAEN,MAA1C;AAAA,8BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,YAAD;AAAA,gCACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,SAAD;AAAA,iCACI,QAAC,WAAD;AAAa,YAAA,OAAO,EAAE,CAAtB;AAAA,sBAEQC,KAAK,IAAIA,KAAK,CAACe,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACf,QAAC,QAAD;AAAA,wBAA4BD,IAAI,CAACE;AAAjC,eAAeF,IAAI,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA,oBADK;AAFjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAcI,QAAC,WAAD;AAAA,iCAII,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEhB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA8BH,CAzDD;;GAAMJ,a;UAIgBH,a;;;KAJhBG,a;AA2DN,eAAeA,aAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {\r\n    Button, ListItem,\r\n    Modal, ModalBody,\r\n    ModalCloseButton,\r\n    ModalContent, ModalFooter,\r\n    ModalHeader,\r\n    ModalOverlay, OrderedList, Text,\r\n    useDisclosure\r\n} from \"@chakra-ui/react\";\r\nimport quizApi from \"../../../api/quizApi\";\r\nimport axios from \"axios\";\r\n\r\nconst AssignedUsers = ({isOpen}) => {\r\n\r\n    const [users, setUsers] = useState(null);\r\n\r\n    const {onClose} = useDisclosure();\r\n\r\n    useEffect(() => {\r\n        console.log(\"ASSIGNED \")\r\n        const fetchUsers = async () => {\r\n            console.log(\"get userss\")\r\n            try {\r\n                const resp = await axios.get(`http://localhost:8080/api/v1/admin/quiz-assignment/assign-quizzes/${quizId}/users`, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`\r\n                    }\r\n                })\r\n                if (resp.status === 200) {\r\n                    setUsers(resp.data);\r\n                    console.log(resp.data);\r\n                }\r\n            } catch (e) {\r\n                console.log(\"Failed to fetch assigned users \", e);\r\n            }\r\n        }\r\n        fetchUsers();\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Modal closeOnOverlayClick={true} isOpen={isOpen}>\r\n                <ModalOverlay/>\r\n                <ModalContent>\r\n                    <ModalHeader>Assigned users</ModalHeader>\r\n                    <ModalCloseButton/>\r\n                    <ModalBody>\r\n                        <OrderedList spacing={4}>\r\n                            {\r\n                                users && users.map((user, i) => (\r\n                                    <ListItem key={user.email}>{user.email}</ListItem>\r\n                                ))\r\n                            }\r\n\r\n                        </OrderedList>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        {/*<Button colorScheme=\"blue\" mr={3}>*/}\r\n                        {/*    Save*/}\r\n                        {/*</Button>*/}\r\n                        <Button onClick={onClose}>Close</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AssignedUsers;"]},"metadata":{},"sourceType":"module"}