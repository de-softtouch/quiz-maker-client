{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\components\\\\grade\\\\GradeQuiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { Box, Button, Center, Checkbox, Container, Divider, Flex, FormControl, FormLabel, GridItem, Heading, HStack, IconButton, Image, Progress, SimpleGrid, Switch, Text, Tooltip, VStack } from \"@chakra-ui/react\";\nimport { useParams } from \"react-router-dom\";\nimport { BiShare, BsSkipStart, FcStart } from \"react-icons/all\";\nimport SettingDialog from \"./SettingDialog\";\nimport { ArrowDownIcon, ArrowUpIcon, TimeIcon } from \"@chakra-ui/icons\";\nimport { useQuiz } from \"../../context/QuizProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GradeQuiz = () => {\n  _s();\n\n  //get id in params\n  const {\n    id\n  } = useParams();\n  const pageRef = useRef(null);\n  const {\n    foundedQuiz\n  } = useQuiz();\n  const [showSetting, setShowSetting] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: pageRef,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      minH: '100vh',\n      bg: 'gray.100',\n      p: 10,\n      align: 'center',\n      children: [showSetting && /*#__PURE__*/_jsxDEV(SettingDialog, {\n        setShow: setShowSetting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        m: 10,\n        bg: 'white',\n        borderRadius: 'md',\n        boxShadow: 'xl',\n        minH: '100vh',\n        maxW: '860px',\n        p: 10,\n        children: /*#__PURE__*/_jsxDEV(VStack, {\n          position: 'relative',\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            fontSize: 25,\n            children: foundedQuiz.title != null ? foundedQuiz.title : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            pb: 10,\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            m: 5,\n            children: [foundedQuiz.questions.length, \" Questions\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), foundedQuiz.questions.map((q, i) => /*#__PURE__*/_jsxDEV(VStack, {\n            w: '100%',\n            align: 'start',\n            textAlign: 'start',\n            p: 2,\n            spacing: 5,\n            children: [/*#__PURE__*/_jsxDEV(Container, {\n              w: '100%',\n              maxW: \"4xl\",\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                maxW: \"4xl\",\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  fontWeight: 'medium',\n                  children: [i + 1, \". \", q.title]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n              w: '100%',\n              columns: 2,\n              spacing: 2,\n              align: 'start',\n              textAlign: 'start',\n              children: q.options.map((option, i) => /*#__PURE__*/_jsxDEV(Container, {\n                w: '100%',\n                minW: 300,\n                maxW: \"xl\",\n                align: 'start',\n                textAlign: 'start',\n                alignItems: 'start' // justifyItems={'start'}\n                ,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  padding: \"1\",\n                  maxW: \"3xl\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    colorScheme: 'teal',\n                    size: 'sm',\n                    children: option.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 53\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 37\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(Box, {\n            py: 5,\n            align: 'end',\n            alignSelf: 'end',\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              alignSelf: 'end',\n              size: 'lg',\n              colorScheme: 'teal',\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        zIndex: 100,\n        position: 'fixed',\n        bottom: 0,\n        right: 0,\n        m: 10,\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          label: \"Scroll to top\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => window.scrollTo(0, 0),\n            colorScheme: 'teal',\n            icon: /*#__PURE__*/_jsxDEV(ArrowUpIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          label: \"Scroll to bottom\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => {\n              pageRef.current.scrollIntoView({\n                behavior: \"smooth\",\n                block: \"end\",\n                inline: \"nearest\"\n              });\n            },\n            colorScheme: 'teal',\n            icon: /*#__PURE__*/_jsxDEV(ArrowDownIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 35\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        p: 1,\n        position: 'fixed',\n        left: 0,\n        top: 0,\n        m: 10,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: 'md',\n          colorScheme: 'teal',\n          variant: 'outline',\n          leftIcon: /*#__PURE__*/_jsxDEV(TimeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 92\n          }, this),\n          children: \"23:00 left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Progress, {\n      size: 'sm',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      minW: '860px',\n      maxW: '860px',\n      position: 'fixed',\n      bottom: 0,\n      value: 64\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GradeQuiz, \"C55SOCK21a5thEWzFseb/BtaNCo=\", false, function () {\n  return [useParams, useQuiz];\n});\n\n_c = GradeQuiz;\nexport default GradeQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"GradeQuiz\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/components/grade/GradeQuiz.js"],"names":["React","useRef","useState","Box","Button","Center","Checkbox","Container","Divider","Flex","FormControl","FormLabel","GridItem","Heading","HStack","IconButton","Image","Progress","SimpleGrid","Switch","Text","Tooltip","VStack","useParams","BiShare","BsSkipStart","FcStart","SettingDialog","ArrowDownIcon","ArrowUpIcon","TimeIcon","useQuiz","GradeQuiz","id","pageRef","foundedQuiz","showSetting","setShowSetting","title","questions","length","map","q","i","options","option","content","window","scrollTo","current","scrollIntoView","behavior","block","inline"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Center, Checkbox, Container,\r\n    Divider,\r\n    Flex, FormControl, FormLabel,\r\n    GridItem,\r\n    Heading,\r\n    HStack, IconButton,\r\n    Image, Progress,\r\n    SimpleGrid, Switch,\r\n    Text, Tooltip,\r\n    VStack\r\n} from \"@chakra-ui/react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {BiShare, BsSkipStart, FcStart} from \"react-icons/all\";\r\nimport SettingDialog from \"./SettingDialog\";\r\nimport {ArrowDownIcon, ArrowUpIcon, TimeIcon} from \"@chakra-ui/icons\";\r\nimport {useQuiz} from \"../../context/QuizProvider\";\r\n\r\nconst GradeQuiz = () => {\r\n\r\n    //get id in params\r\n    const {id} = useParams();\r\n    const pageRef = useRef(null);\r\n    const {foundedQuiz} = useQuiz();\r\n    const [showSetting, setShowSetting] = useState(false);\r\n\r\n    return (\r\n        <div ref={pageRef}>\r\n            <Box\r\n                minH={'100vh'}\r\n                bg={'gray.100'}\r\n                p={10}\r\n                align={'center'}>\r\n\r\n                {/*<Box minH={'80px'}></Box>*/}\r\n                {showSetting && <SettingDialog setShow={setShowSetting}/>}\r\n                <Box\r\n                    m={10}\r\n                    bg={'white'}\r\n                    borderRadius={'md'}\r\n                    boxShadow={'xl'}\r\n                    minH={'100vh'}\r\n                    maxW={'860px'}\r\n                    p={10}>\r\n                    <VStack position={'relative'}>\r\n                        {/*\r\n                        QUIZ TITLE\r\n                        */}\r\n                        <Heading\r\n                            fontSize={25}>\r\n                            {foundedQuiz.title != null ? foundedQuiz.title : ''}\r\n                        </Heading>\r\n                        <Text\r\n                            pb={10}\r\n                            position={'absolute'}\r\n                            top={0}\r\n                            right={0}\r\n                            m={5}>\r\n                            {foundedQuiz.questions.length} Questions\r\n                        </Text>\r\n                        {/*QUESTIONS*/}\r\n                        {\r\n                            foundedQuiz.questions.map((q, i) => (\r\n                                <VStack\r\n                                    w={'100%'}\r\n                                    align={'start'}\r\n                                    textAlign={'start'\r\n                                    } key={i}\r\n                                    p={2}\r\n                                    spacing={5}>\r\n                                    {/*\r\n                                    QUESTION TITLE\r\n                                    */}\r\n                                    <Container w={'100%'} maxW=\"4xl\">\r\n                                        <Box maxW=\"4xl\">\r\n                                            <Text fontWeight={'medium'}>\r\n                                                {i + 1}. {q.title}\r\n                                            </Text>\r\n                                        </Box>\r\n                                    </Container>\r\n                                    {/*OPTIONS*/}\r\n                                    <SimpleGrid\r\n                                        w={'100%'}\r\n                                        columns={2}\r\n                                        spacing={2}\r\n                                        align={'start'}\r\n                                        textAlign={'start'}>\r\n                                        {\r\n                                            q.options.map((option, i) => (\r\n                                                <Container\r\n                                                    w={'100%'}\r\n                                                    minW={300}\r\n                                                    key={i}\r\n                                                    maxW=\"xl\"\r\n                                                    align={'start'}\r\n                                                    textAlign={'start'}\r\n                                                    alignItems={'start'}\r\n                                                    // justifyItems={'start'}\r\n                                                >\r\n                                                    <Box padding=\"1\" maxW=\"3xl\">\r\n                                                        <Checkbox colorScheme={'teal'} size={'sm'}>\r\n                                                            {option.content}\r\n                                                        </Checkbox>\r\n                                                    </Box>\r\n                                                </Container>\r\n                                            ))\r\n                                        }\r\n                                    </SimpleGrid>\r\n                                    <Divider/>\r\n                                </VStack>\r\n                            ))\r\n                        }\r\n                        {/* Submit button*/}\r\n                        <Box py={5} align={'end'} alignSelf={'end'}>\r\n                            <Button alignSelf={'end'} size={'lg'} colorScheme={'teal'}>Submit</Button>\r\n                        </Box>\r\n                    </VStack>\r\n                </Box>\r\n\r\n                {/*Fixed action buttons*/}\r\n                <HStack zIndex={100} position={'fixed'} bottom={0} right={0} m={10}>\r\n                    <Tooltip label={\"Scroll to top\"}>\r\n                        <IconButton\r\n                            onClick={() => window.scrollTo(0, 0)}\r\n                            colorScheme={'teal'}\r\n                            icon={<ArrowUpIcon/>}/>\r\n                    </Tooltip>\r\n                    <Tooltip label={\"Scroll to bottom\"}>\r\n                        <IconButton\r\n                            onClick={() => {\r\n                                pageRef.current.scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"})\r\n                            }}\r\n                            colorScheme={'teal'}\r\n                            icon={<ArrowDownIcon/>}/>\r\n                    </Tooltip>\r\n                </HStack>\r\n\r\n\r\n                <Flex p={1} position={'fixed'} left={0} top={0} m={10}>\r\n                    <Button size={'md'} colorScheme={'teal'} variant={'outline'} leftIcon={<TimeIcon/>}>23:00\r\n                        left</Button>\r\n                </Flex>\r\n\r\n\r\n            </Box>\r\n            <Progress\r\n                size={'sm'}\r\n                left={'50%'}\r\n                transform={'translateX(-50%)'}\r\n                minW={'860px'}\r\n                maxW={'860px'}\r\n                position={'fixed'} bottom={0} value={64}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GradeQuiz;"]},"metadata":{},"sourceType":"module"}