{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\components\\\\home\\\\CreateQuizDialog.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Box, Button, FormControl, FormHelperText, FormLabel, HStack, Input, Radio, RadioGroup, Select, Text, useRadio, useRadioGroup, VStack, Wrap, WrapItem } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useQuiz } from \"../../context/QuizProvider\";\nimport { MdArrowDropDown } from \"react-icons/all\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreateQuizDialog = ({\n  setShow,\n  onClose\n}) => {\n  _s();\n\n  const [quizName, setQuizName] = useState('');\n  const [subject, setSubject] = useState('');\n  const [quizNameError, setQuizNameError] = useState(null);\n  const [subjectError, setSubjectError] = useState(null);\n  const history = useHistory();\n  const {\n    quizNew,\n    createQuiz\n  } = useQuiz();\n  useEffect(() => {\n    if (quizNew != null) {\n      if (quizNew.title != null) {\n        setQuizName(quizNew.title);\n      }\n\n      if (quizNew.subject != null) {\n        setSubject(quizNew.subject);\n      }\n    }\n  }, [quizNew]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      bg: 'gray.100' // bg={'teal.500'}\n      ,\n      zIndex: 1000,\n      position: 'fixed',\n      top: '50%',\n      boxShadow: 'xl',\n      right: '50%',\n      align: 'start',\n      borderRadius: 'xl',\n      transform: 'translate(50%,-50%)',\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        align: 'start',\n        p: 4,\n        width: '500px',\n        maxW: ['360px', '500px'],\n        children: [/*#__PURE__*/_jsxDEV(HStack, {\n          align: 'start',\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: '20px',\n            fontWeight: 'medium',\n            children: \"Create a Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          color: 'gray.600',\n          align: 'start',\n          w: '100%',\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              fontWeight: 'normal',\n              children: \"1. Name this quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => {\n                setQuizName(e.target.value);\n                setQuizNameError(null);\n              },\n              value: quizName,\n              isInvalid: quizNameError != null,\n              borderColor: 'grey.600',\n              width: '100%',\n              variant: \"outline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), quizNameError && /*#__PURE__*/_jsxDEV(FormHelperText, {\n              color: 'crimson',\n              children: quizNameError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(VStack, {\n            w: '100%',\n            align: 'start',\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              fontWeight: 'normal',\n              children: \"2. Choose revelant subjects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), subjectError != null && /*#__PURE__*/_jsxDEV(Text, {\n              color: 'red',\n              fontSize: 12,\n              fontStyle: 'italic',\n              children: \"Please select one subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              icon: /*#__PURE__*/_jsxDEV(MdArrowDropDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 43\n              }, this),\n              placeholder: \"Woohoo! A new icon\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"option1\",\n                children: \"Option 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"option2\",\n                children: \"Option 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"option3\",\n                children: \"Option 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            pt: 5,\n            w: '100%',\n            justify: 'end',\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setShow(false);\n              },\n              colorScheme: \"gray\",\n              fontWeight: 'normal',\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"teal\",\n              fontWeight: 'normal',\n              onClick: () => {\n                if (quizName == null || quizName.length === 0) {\n                  setQuizNameError(\"Please enter a quiz name\");\n                  return;\n                }\n\n                if (subject == null || subject.length === 0) {\n                  setSubjectError('Please select a subject');\n                  return;\n                }\n\n                setShow(false);\n                createQuiz({ ...quizNew,\n                  title: quizName,\n                  subject: subject\n                });\n                onClose(); // history.push(\"/admin/quiz\");\n              },\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}; // 1. Create a component that consumes the `useRadio` hook\n\n\n_s(CreateQuizDialog, \"uUOf0ESW5Zg5gjOE7IKvrUwKgPU=\", false, function () {\n  return [useHistory, useQuiz];\n});\n\n_c = CreateQuizDialog;\n\nfunction CustomRadioCard(props) {\n  _s2();\n\n  const {\n    getInputProps,\n    getCheckboxProps\n  } = useRadio(props);\n  const input = getInputProps();\n  const checkbox = getCheckboxProps();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    as: \"label\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      fontSize: 12,\n      ...checkbox,\n      cursor: \"pointer\",\n      borderWidth: \"1px\",\n      borderRadius: \"xl\" // boxShadow=\"md\"\n      ,\n      _checked: {\n        bg: \"teal.600\",\n        color: \"white\",\n        borderColor: \"teal.600\"\n      },\n      _focus: {\n        boxShadow: \"outline\"\n      } // px={5}\n      // py={3}\n      ,\n      p: .5,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n} // Step 2: Use the `useRadioGroup` hook to control a group of custom radios.\n\n\n_s2(CustomRadioCard, \"gen7hu+mcPHaCS2zuUrnEuwfIMc=\", false, function () {\n  return [useRadio];\n});\n\n_c2 = CustomRadioCard;\n\nfunction RadioGrouppp({\n  setSubject,\n  setSubjectError,\n  defaultValue\n}) {\n  _s3();\n\n  const options = [\"react\", \"vue\", \"svelte\", 'asdsad', 'rere', 'sf34', '3434', 'sdfsf'];\n  console.log('default value is ', defaultValue);\n  const {\n    getRootProps,\n    getRadioProps\n  } = useRadioGroup({\n    name: \"subject\",\n    defaultValue: defaultValue,\n    defaultChecked: true,\n    onChange: e => {\n      setSubject(e);\n      setSubjectError(null);\n    }\n  });\n  const group = getRootProps();\n  return /*#__PURE__*/_jsxDEV(Wrap, { ...group,\n    children: options.map((value, i) => {\n      const radio = getRadioProps({\n        value\n      });\n      return /*#__PURE__*/_jsxDEV(WrapItem, {\n        children: /*#__PURE__*/_jsxDEV(CustomRadioCard, { ...radio,\n          children: value\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(RadioGrouppp, \"+EnqeV2mLMw6l+1ol7KVAd+sDqU=\", false, function () {\n  return [useRadioGroup];\n});\n\n_c3 = RadioGrouppp;\nexport default CreateQuizDialog;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CreateQuizDialog\");\n$RefreshReg$(_c2, \"CustomRadioCard\");\n$RefreshReg$(_c3, \"RadioGrouppp\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/components/home/CreateQuizDialog.js"],"names":["React","useContext","useEffect","useState","Box","Button","FormControl","FormHelperText","FormLabel","HStack","Input","Radio","RadioGroup","Select","Text","useRadio","useRadioGroup","VStack","Wrap","WrapItem","useHistory","useQuiz","MdArrowDropDown","CreateQuizDialog","setShow","onClose","quizName","setQuizName","subject","setSubject","quizNameError","setQuizNameError","subjectError","setSubjectError","history","quizNew","createQuiz","title","e","target","value","length","CustomRadioCard","props","getInputProps","getCheckboxProps","input","checkbox","bg","color","borderColor","boxShadow","children","RadioGrouppp","defaultValue","options","console","log","getRootProps","getRadioProps","name","defaultChecked","onChange","group","map","i","radio"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    FormControl, FormHelperText,\r\n    FormLabel,\r\n    HStack,\r\n    Input, Radio, RadioGroup, Select,\r\n    Text,\r\n    useRadio, useRadioGroup,\r\n    VStack,\r\n    Wrap,\r\n    WrapItem\r\n} from \"@chakra-ui/react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {useQuiz} from \"../../context/QuizProvider\";\r\nimport {MdArrowDropDown} from \"react-icons/all\";\r\n\r\nconst CreateQuizDialog = ({setShow, onClose}) => {\r\n\r\n    const [quizName, setQuizName] = useState('');\r\n    const [subject, setSubject] = useState('');\r\n    const [quizNameError, setQuizNameError] = useState(null);\r\n    const [subjectError, setSubjectError] = useState(null);\r\n\r\n    const history = useHistory();\r\n    const {quizNew, createQuiz} = useQuiz();\r\n\r\n    useEffect(() => {\r\n        if (quizNew != null) {\r\n            if (quizNew.title != null) {\r\n                setQuizName(quizNew.title);\r\n            }\r\n            if (quizNew.subject != null) {\r\n                setSubject(quizNew.subject);\r\n            }\r\n        }\r\n    }, [quizNew]);\r\n    return (\r\n        <>\r\n            <Box\r\n                bg={'gray.100'}\r\n                // bg={'teal.500'}\r\n                zIndex={1000}\r\n                position={'fixed'}\r\n                top={'50%'}\r\n                boxShadow={'xl'}\r\n                right={'50%'}\r\n                align={'start'}\r\n                borderRadius={'xl'}\r\n                transform={\r\n                    'translate(50%,-50%)'\r\n                }\r\n            >\r\n                <VStack align={'start'} p={4} width={'500px'} maxW={['360px', '500px']}>\r\n                    <HStack align={'start'}>\r\n                        <Text fontSize={'20px'} fontWeight={'medium'}>Create a Quiz</Text>\r\n                    </HStack>\r\n\r\n                    <VStack color={'gray.600'} align={'start'} w={'100%'}>\r\n                        <FormControl>\r\n                            <FormLabel fontWeight={'normal'}>\r\n                                1. Name this quiz\r\n                            </FormLabel>\r\n                            {/*1. quiz name*/}\r\n                            <Input\r\n                                onChange={(e) => {\r\n                                    setQuizName(e.target.value);\r\n                                    setQuizNameError(null);\r\n                                }}\r\n                                value={quizName}\r\n                                isInvalid={quizNameError != null}\r\n                                borderColor={'grey.600'}\r\n                                width={'100%'}\r\n                                variant=\"outline\"/>\r\n                            {\r\n                                quizNameError && <FormHelperText color={'crimson'}>{quizNameError}</FormHelperText>\r\n                            }\r\n                        </FormControl>\r\n                        {/*2. Choose a subject*/}\r\n                        <VStack w={'100%'} align={'start'}>\r\n                            <FormLabel fontWeight={'normal'}>\r\n                                2. Choose revelant subjects\r\n                            </FormLabel>\r\n                            {/*<RadioGrouppp defaultValue={subject} setSubject={setSubject}*/}\r\n                            {/*            setSubjectError={setSubjectError}/>*/}\r\n                            {subjectError != null\r\n                            && <Text color={'red'} fontSize={12} fontStyle={'italic'}>Please select one subject</Text>\r\n                            }\r\n                            <Select icon={<MdArrowDropDown />} placeholder=\"Woohoo! A new icon\">\r\n                                <option value=\"option1\">Option 1</option>\r\n                                <option value=\"option2\">Option 2</option>\r\n                                <option value=\"option3\">Option 3</option>\r\n                            </Select>\r\n                        </VStack>\r\n                        <HStack pt={5} w={'100%'} justify={'end'}>\r\n                            <Button\r\n                                onClick={() => {\r\n                                    setShow(false);\r\n                                }}\r\n                                colorScheme=\"gray\" fontWeight={'normal'}>Cancel</Button>\r\n                            <Button\r\n                                colorScheme=\"teal\"\r\n                                fontWeight={'normal'}\r\n                                onClick={() => {\r\n                                    if (quizName == null || quizName.length === 0) {\r\n                                        setQuizNameError(\"Please enter a quiz name\");\r\n                                        return;\r\n                                    }\r\n                                    if (subject == null || subject.length === 0) {\r\n                                        setSubjectError('Please select a subject');\r\n                                        return;\r\n                                    }\r\n                                    setShow(false);\r\n\r\n                                    createQuiz({\r\n                                        ...quizNew,\r\n                                        title: quizName,\r\n                                        subject: subject,\r\n                                    });\r\n                                    onClose();\r\n                                    // history.push(\"/admin/quiz\");\r\n                                }}\r\n                            >\r\n                                Next\r\n                            </Button>\r\n                        </HStack>\r\n                    </VStack>\r\n\r\n\r\n                </VStack>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\n// 1. Create a component that consumes the `useRadio` hook\r\nfunction CustomRadioCard(props) {\r\n    const {getInputProps, getCheckboxProps} = useRadio(props)\r\n\r\n    const input = getInputProps()\r\n    const checkbox = getCheckboxProps()\r\n\r\n    return (\r\n        <Box as=\"label\">\r\n            <input {...input} />\r\n            <Box\r\n\r\n                fontSize={12}\r\n                {...checkbox}\r\n                cursor=\"pointer\"\r\n                borderWidth=\"1px\"\r\n                borderRadius=\"xl\"\r\n                // boxShadow=\"md\"\r\n                _checked={{\r\n                    bg: \"teal.600\",\r\n                    color: \"white\",\r\n                    borderColor: \"teal.600\",\r\n                }}\r\n                _focus={{\r\n                    boxShadow: \"outline\",\r\n                }}\r\n                // px={5}\r\n                // py={3}\r\n                p={.5}\r\n            >\r\n                {props.children}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\n// Step 2: Use the `useRadioGroup` hook to control a group of custom radios.\r\nfunction RadioGrouppp({setSubject, setSubjectError, defaultValue}) {\r\n    const options = [\"react\", \"vue\", \"svelte\", 'asdsad', 'rere', 'sf34', '3434', 'sdfsf']\r\n    console.log('default value is ', defaultValue);\r\n    const {getRootProps, getRadioProps} = useRadioGroup({\r\n        name: \"subject\",\r\n        defaultValue: defaultValue,\r\n        defaultChecked: true,\r\n        onChange: (e) => {\r\n            setSubject(e);\r\n            setSubjectError(null);\r\n        },\r\n    })\r\n\r\n    const group = getRootProps()\r\n\r\n    return (\r\n        <Wrap {...group}>\r\n            {options.map((value, i) => {\r\n                const radio = getRadioProps({value})\r\n                return (\r\n                    <WrapItem key={i}>\r\n                        <CustomRadioCard key={i} {...radio}>\r\n                            {value}\r\n                        </CustomRadioCard>\r\n                    </WrapItem>\r\n                )\r\n            })}\r\n        </Wrap>\r\n    )\r\n}\r\n\r\n\r\nexport default CreateQuizDialog;"]},"metadata":{},"sourceType":"module"}