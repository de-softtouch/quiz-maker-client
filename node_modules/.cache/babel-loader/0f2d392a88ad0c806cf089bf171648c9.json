{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\pages\\\\admin\\\\quiz_edit\\\\QuizEditor.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Checkbox, CircularProgress, Code, Container, Divider, Flex, HStack, IconButton, Input, InputGroup, InputRightAddon, Select, SimpleGrid, Spacer, Stack, Text, Tooltip, VStack } from \"@chakra-ui/react\";\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { AddIcon, ArrowDownIcon, ArrowUpIcon, CopyIcon, DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\nimport { QuizEditContext } from \"../../../providers/QuizEditProvider\";\nimport { AiOutlineTag, BiSave, BsPen, HiDocumentDuplicate, MdArrowDropDown, MdEdit } from \"react-icons/all\";\nimport NewQuestionDialog from \"./components/NewQuestionDialog\";\nimport QuizEditDialog from \"./components/QuizEditDialog\";\nimport { AlertDialog, AlertDialogBody, AlertDialogFooter, AlertDialogHeader, AlertDialogContent, AlertDialogOverlay } from \"@chakra-ui/react\";\nimport EditQuestionDialog from \"./components/EditQuestionDialog\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuizEditor = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    quiz,\n    setQuiz,\n    isLoading,\n    setLoading\n  } = useContext(QuizEditContext);\n  const [selectedQuestion, setSelectedQuestion] = useState(null);\n  const [sort, setSort] = useState('column'); //\n\n  const [isOpen, setOpen] = useState(false);\n  const [showNewQuestionDialog, setShowNewQuestionDialog] = useState(false);\n  const [showEditQuestionDialog, setShowEditQuestionDialog] = useState(false);\n  const [showQuickEditQuiz, setShowQuickEditQuiz] = useState(false); //\n\n  const [size, setSize] = useState('full');\n  const cancelRef = useRef(); //fetch quiz details\n\n  const fetchQuizDetails = async () => {\n    const url = `http://localhost:8080/api/v1/admin/quiz-management/managed-quizzes/${id}`;\n\n    try {\n      const resp = await axios.get(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\n        }\n      });\n      resp.status === 200 && setQuiz(resp.data);\n      console.log(resp.data);\n    } catch (e) {\n      console.log(\"Failed to get quiz details with id \" + id);\n    }\n  };\n\n  useEffect(() => {\n    console.log('quiz editor render');\n    fetchQuizDetails();\n  }, []);\n\n  const handleSaveQuiz = async () => {\n    try {\n      setLoading(true);\n      const url = `http://localhost:8080/api/v1/admin/quiz-management/managed-quizzes`;\n      const resp = await axios.post(url, quiz, {\n        headers: {\n          \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          \"Content-Type\": \"application/json\"\n        }\n      }); // setQuiz(resp.data);\n\n      fetchQuizDetails();\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const onRemoveQuestion = async () => {\n    const url = `http://localhost:8080/api/v1/admin/quiz-management/managed-quizzes/questions/${selectedQuestion.id}`;\n\n    try {\n      const resp = await axios.delete(url, {\n        headers: {\n          \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`,\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      if (resp.status === 200) {\n        setQuiz(prev => ({ ...prev,\n          questions: prev.questions.filter(question => question.id !== selectedQuestion.id)\n        }));\n      }\n    } catch (e) {} finally {\n      setSelectedQuestion(null);\n      setOpen(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      justifyContent: 'center',\n      justifyItems: 'center',\n      alignContent: 'center',\n      direction: 'row',\n      children: [/*#__PURE__*/_jsxDEV(VStack, {\n        align: 'center',\n        w: '100%',\n        minH: '100vh',\n        children: [/*#__PURE__*/_jsxDEV(HStack, {\n          mb: 4,\n          align: 'start',\n          alignSelf: 'start',\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: 'sm',\n            onClick: () => setShowNewQuestionDialog(true),\n            px: 4,\n            colorScheme: 'linkedin',\n            leftIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 43\n            }, this),\n            children: \"New Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            size: 'sm',\n            onChange: e => {\n              setSort(e.target.value);\n              const reversed = quiz.questions.reverse();\n              setQuiz(prevState => ({ ...prevState,\n                questions: reversed\n              }));\n            },\n            bg: \"tomato\",\n            borderColor: \"tomato\",\n            maxW: 100,\n            icon: /*#__PURE__*/_jsxDEV(MdArrowDropDown, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 35\n            }, this) // variant=\"filled\"\n            ,\n            defaultValue: sort,\n            placeholder: \"Sort by\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: 'column',\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 'column-reverse',\n              children: \"Reverse\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"droppable-1\",\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            style: {\n              backgroundColor: snapshot.isDraggingOver ? 'blue' : 'grey'\n            },\n            ...provided.droppableProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        minW: '300px',\n        children: /*#__PURE__*/_jsxDEV(VStack, {\n          w: '100%',\n          p: 4,\n          bg: 'white',\n          h: '300px',\n          children: [/*#__PURE__*/_jsxDEV(HStack, {\n            w: '100%',\n            children: [/*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              placeholder: quiz && !quiz.visibility ? 'Visibility' : '',\n              defaultValue: quiz && quiz.visibility ? quiz.visibility : 0,\n              onChange: e => setQuiz(prevState => ({ ...prevState,\n                visibility: e.target.value\n              })),\n              size: 'sm',\n              maxW: 40,\n              bg: 'blue.200',\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                selected: quiz && quiz.visibility === 0 && 'selected',\n                value: \"0\",\n                children: \"Draft\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                selected: quiz && quiz.visibility === 1 && 'selected',\n                value: \"1\",\n                children: \"Private\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                selected: quiz && quiz.visibility === 2 && 'selected',\n                value: \"2\",\n                children: \"Public\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            w: '100%',\n            size: 'sm',\n            onClick: () => {\n              setShowQuickEditQuiz(true);\n            },\n            colorScheme: 'gray',\n            leftIcon: /*#__PURE__*/_jsxDEV(MdEdit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 60\n            }, this),\n            children: quiz && quiz.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: \"Limit Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n              size: \"sm\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: 'number',\n                value: quiz && quiz.limitTime ? quiz.limitTime : 'No Limit Time',\n                onChange: e => setQuiz(prev => ({ ...prev,\n                  limitTime: e.target.value\n                })),\n                placeholder: \"default no limit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(InputRightAddon, {\n                children: \"mins\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            justifyContent: 'space-between',\n            w: '100%',\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: \"Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Code, {\n              children: quiz && quiz.code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleSaveQuiz(),\n            alignSelf: 'end',\n            leftIcon: /*#__PURE__*/_jsxDEV(BiSave, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 57\n            }, this),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NewQuestionDialog, {\n      size: size,\n      setSize: setSize,\n      visible: showNewQuestionDialog,\n      setVisible: setShowNewQuestionDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }, this), showEditQuestionDialog && /*#__PURE__*/_jsxDEV(EditQuestionDialog, {\n      size: size,\n      setSize: setSize,\n      selectedQuestion: selectedQuestion,\n      visible: showEditQuestionDialog,\n      setVisible: setShowEditQuestionDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 40\n    }, this), showQuickEditQuiz && /*#__PURE__*/_jsxDEV(QuizEditDialog, {\n      isOpen: showQuickEditQuiz,\n      setOpen: setShowQuickEditQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(HStack, {\n      position: 'fixed',\n      bottom: 10,\n      right: '10',\n      zIndex: 800,\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        bg: 'teal',\n        color: 'white',\n        icon: /*#__PURE__*/_jsxDEV(ArrowUpIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        bg: 'teal',\n        color: 'white',\n        icon: /*#__PURE__*/_jsxDEV(ArrowDownIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        left: 0,\n        position: 'fixed',\n        top: 0,\n        minW: '100vw',\n        minH: '100vh',\n        zIndex: 100000,\n        bg: 'gray.100',\n        opacity: .5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CircularProgress, {\n        transform: 'translate(50%,-50%)',\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        isIndeterminate: true,\n        color: \"green.300\",\n        zIndex: 100001,\n        align: 'center'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(AlertDialog, {\n      isOpen: isOpen,\n      leastDestructiveRef: cancelRef,\n      onClose: () => {\n        setOpen(false);\n        setSelectedQuestion(null);\n      },\n      children: /*#__PURE__*/_jsxDEV(AlertDialogOverlay, {\n        children: /*#__PURE__*/_jsxDEV(AlertDialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(AlertDialogHeader, {\n            fontSize: \"lg\",\n            fontWeight: \"bold\",\n            children: \"Remove Question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AlertDialogBody, {\n            children: \"Are you sure? You can't undo this action afterwards.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AlertDialogFooter, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              ref: cancelRef,\n              onClick: () => {\n                setOpen(false);\n                setSelectedQuestion(null);\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"red\",\n              onClick: onRemoveQuestion,\n              ml: 3,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuizEditor, \"OI8I8X/zqxCYog/UsqA1LIWEwN8=\", false, function () {\n  return [useParams];\n});\n\n_c = QuizEditor;\nexport default QuizEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizEditor\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/pages/admin/quiz_edit/QuizEditor.js"],"names":["Box","Button","Checkbox","CircularProgress","Code","Container","Divider","Flex","HStack","IconButton","Input","InputGroup","InputRightAddon","Select","SimpleGrid","Spacer","Stack","Text","Tooltip","VStack","React","useContext","useEffect","useRef","useState","axios","useParams","AddIcon","ArrowDownIcon","ArrowUpIcon","CopyIcon","DeleteIcon","EditIcon","QuizEditContext","AiOutlineTag","BiSave","BsPen","HiDocumentDuplicate","MdArrowDropDown","MdEdit","NewQuestionDialog","QuizEditDialog","AlertDialog","AlertDialogBody","AlertDialogFooter","AlertDialogHeader","AlertDialogContent","AlertDialogOverlay","EditQuestionDialog","DragDropContext","Droppable","QuizEditor","id","quiz","setQuiz","isLoading","setLoading","selectedQuestion","setSelectedQuestion","sort","setSort","isOpen","setOpen","showNewQuestionDialog","setShowNewQuestionDialog","showEditQuestionDialog","setShowEditQuestionDialog","showQuickEditQuiz","setShowQuickEditQuiz","size","setSize","cancelRef","fetchQuizDetails","url","resp","get","headers","localStorage","getItem","status","data","console","log","e","handleSaveQuiz","post","error","response","onRemoveQuestion","delete","prev","questions","filter","question","target","value","reversed","reverse","prevState","provided","snapshot","innerRef","backgroundColor","isDraggingOver","droppableProps","visibility","title","limitTime","code"],"mappings":"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","sourcesContent":["import {\r\n    Box,\r\n    Button, Checkbox, CircularProgress, Code,\r\n    Container, Divider, Flex,\r\n    HStack,\r\n    IconButton, Input, InputGroup, InputRightAddon, Select,\r\n    SimpleGrid,\r\n    Spacer, Stack,\r\n    Text,\r\n    Tooltip,\r\n    VStack\r\n} from \"@chakra-ui/react\";\r\nimport React, {useContext, useEffect, useRef, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {AddIcon, ArrowDownIcon, ArrowUpIcon, CopyIcon, DeleteIcon, EditIcon} from \"@chakra-ui/icons\";\r\nimport {QuizEditContext} from \"../../../providers/QuizEditProvider\";\r\nimport {AiOutlineTag, BiSave, BsPen, HiDocumentDuplicate, MdArrowDropDown, MdEdit} from \"react-icons/all\";\r\nimport NewQuestionDialog from \"./components/NewQuestionDialog\";\r\nimport QuizEditDialog from \"./components/QuizEditDialog\";\r\nimport {\r\n    AlertDialog,\r\n    AlertDialogBody,\r\n    AlertDialogFooter,\r\n    AlertDialogHeader,\r\n    AlertDialogContent,\r\n    AlertDialogOverlay,\r\n} from \"@chakra-ui/react\"\r\nimport EditQuestionDialog from \"./components/EditQuestionDialog\";\r\nimport {DragDropContext, Droppable} from \"react-beautiful-dnd\";\r\n\r\nconst QuizEditor = () => {\r\n    const {id} = useParams();\r\n    const {quiz, setQuiz, isLoading, setLoading} = useContext(QuizEditContext);\r\n    const [selectedQuestion, setSelectedQuestion] = useState(null);\r\n    const [sort, setSort] = useState('column');\r\n    //\r\n    const [isOpen, setOpen] = useState(false);\r\n    const [showNewQuestionDialog, setShowNewQuestionDialog] = useState(false);\r\n    const [showEditQuestionDialog, setShowEditQuestionDialog] = useState(false);\r\n    const [showQuickEditQuiz, setShowQuickEditQuiz] = useState(false);\r\n    //\r\n    const [size, setSize] = useState('full');\r\n    const cancelRef = useRef();\r\n    //fetch quiz details\r\n    const fetchQuizDetails = async () => {\r\n        const url = `http://localhost:8080/api/v1/admin/quiz-management/managed-quizzes/${id}`;\r\n        try {\r\n            const resp = await axios.get(url, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`,\r\n\r\n                }\r\n            })\r\n            resp.status === 200 && setQuiz(resp.data);\r\n            console.log(resp.data)\r\n        } catch (e) {\r\n            console.log(\"Failed to get quiz details with id \" + id);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        console.log('quiz editor render')\r\n        fetchQuizDetails();\r\n    }, [])\r\n\r\n    const handleSaveQuiz = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const url = `http://localhost:8080/api/v1/admin/quiz-management/managed-quizzes`\r\n            const resp = await axios.post(url, quiz, {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`,\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n            // setQuiz(resp.data);\r\n            fetchQuizDetails();\r\n\r\n        } catch (error) {\r\n            if (error.response) {\r\n                console.log(error.response.data);\r\n                console.log(error.response.status);\r\n                console.log(error.response.headers);\r\n            }\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n    const onRemoveQuestion = async () => {\r\n        const url = `http://localhost:8080/api/v1/admin/quiz-management/managed-quizzes/questions/${selectedQuestion.id}`\r\n        try {\r\n            const resp = await axios.delete(url, {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`,\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            })\r\n            if (resp.status === 200) {\r\n                setQuiz((prev) => ({\r\n                    ...prev,\r\n                    questions: prev.questions.filter((question) => question.id !== selectedQuestion.id)\r\n                }))\r\n            }\r\n        } catch (e) {\r\n\r\n        } finally {\r\n            setSelectedQuestion(null);\r\n            setOpen(false);\r\n        }\r\n    }\r\n    return (\r\n        <DragDropContext>\r\n            <Flex justifyContent={'center'} justifyItems={'center'} alignContent={'center'} direction={'row'}>\r\n                {/*QUESTIONS EDITOR*/}\r\n                <VStack align={'center'} w={'100%'} minH={'100vh'}>\r\n                    <HStack mb={4} align={'start'} alignSelf={'start'} spacing={4}>\r\n\r\n                        <Button size={'sm'} onClick={() => setShowNewQuestionDialog(true)} px={4}\r\n                                colorScheme={'linkedin'}\r\n                                leftIcon={<AddIcon/>}>\r\n                            New Question\r\n                        </Button>\r\n\r\n                        <Select\r\n                            size={'sm'}\r\n                            onChange={(e) => {\r\n                                setSort(e.target.value);\r\n                                const reversed = quiz.questions.reverse();\r\n                                setQuiz((prevState) => ({\r\n                                    ...prevState,\r\n                                    questions: reversed,\r\n                                }))\r\n\r\n                            }}\r\n                            bg=\"tomato\"\r\n                            borderColor=\"tomato\"\r\n                            maxW={100}\r\n                            icon={<MdArrowDropDown/>}\r\n                            // variant=\"filled\"\r\n                            defaultValue={sort}\r\n                            placeholder=\"Sort by\"\r\n                        >\r\n                            <option value={'column'}>Position</option>\r\n                            <option value={'column-reverse'}>Reverse</option>\r\n                        </Select>\r\n                    </HStack>\r\n                    {/*    QUESTIONS*/}\r\n                    <Droppable droppableId=\"droppable-1\">\r\n                        {\r\n                            (provided, snapshot) => (\r\n                                <div\r\n                                    ref={provided.innerRef}\r\n                                    style={{backgroundColor: snapshot.isDraggingOver ? 'blue' : 'grey'}}\r\n                                    {...provided.droppableProps}\r\n                                >\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </Droppable>\r\n                </VStack>\r\n\r\n                {/*ACTION SIDEBAR*/}\r\n                <Box minW={'300px'}>\r\n                    <VStack w={'100%'} p={4} bg={'white'} h={'300px'}>\r\n                        {/*PUBLIC*/}\r\n                        <HStack w={'100%'}>\r\n                            <Spacer/>\r\n                            <Select\r\n                                placeholder={quiz && !quiz.visibility ? 'Visibility' : ''}\r\n                                defaultValue={quiz && quiz.visibility ? quiz.visibility : 0}\r\n                                onChange={(e) => setQuiz(prevState => ({\r\n                                    ...prevState,\r\n                                    visibility: e.target.value\r\n                                }))}\r\n                                size={'sm'} maxW={40}\r\n                                bg={'blue.200'}>\r\n                                <option selected={quiz && quiz.visibility === 0 && 'selected'} value=\"0\">Draft</option>\r\n                                <option selected={quiz && quiz.visibility === 1 && 'selected'} value=\"1\">Private\r\n                                </option>\r\n                                <option selected={quiz && quiz.visibility === 2 && 'selected'} value=\"2\">Public</option>\r\n                            </Select>\r\n                        </HStack>\r\n                        {/*    */}\r\n                        <Button\r\n                            w={'100%'}\r\n                            size={'sm'}\r\n                            onClick={() => {\r\n                                setShowQuickEditQuiz(true)\r\n                            }}\r\n                            colorScheme={'gray'} leftIcon={<MdEdit/>}>\r\n                            {quiz && quiz.title}\r\n                        </Button>\r\n                        <HStack>\r\n                            <Text>Limit Time</Text>\r\n                            <InputGroup size=\"sm\">\r\n                                <Input\r\n                                    type={'number'}\r\n                                    value={quiz && quiz.limitTime ? quiz.limitTime : 'No Limit Time'}\r\n                                    onChange={(e) => setQuiz((prev) => ({\r\n                                        ...prev,\r\n                                        limitTime: e.target.value\r\n                                    }))}\r\n                                    placeholder=\"default no limit\"/>\r\n                                <InputRightAddon children=\"mins\"/>\r\n                            </InputGroup>\r\n                        </HStack>\r\n                        <Divider/>\r\n                        <HStack justifyContent={'space-between'} w={'100%'}>\r\n                            <Text>Code</Text>\r\n                            <Code>{quiz && quiz.code}</Code>\r\n                        </HStack>\r\n                        <Spacer/>\r\n                        <Button\r\n                            onClick={() => handleSaveQuiz()}\r\n                            alignSelf={'end'} leftIcon={<BiSave/>}>Save</Button>\r\n                    </VStack>\r\n                </Box>\r\n            </Flex>\r\n\r\n            {/*DIAlOGS*/}\r\n            <NewQuestionDialog size={size} setSize={setSize}\r\n                               visible={showNewQuestionDialog}\r\n                               setVisible={setShowNewQuestionDialog}/>\r\n            {showEditQuestionDialog && <EditQuestionDialog size={size} setSize={setSize}\r\n                                                           selectedQuestion={selectedQuestion}\r\n                                                           visible={showEditQuestionDialog}\r\n                                                           setVisible={setShowEditQuestionDialog}/>}\r\n            {\r\n                showQuickEditQuiz && <QuizEditDialog isOpen={showQuickEditQuiz} setOpen={setShowQuickEditQuiz}/>\r\n\r\n            }\r\n\r\n            <HStack position={'fixed'} bottom={10} right={'10'} zIndex={800}>\r\n                <IconButton bg={'teal'} color={'white'} icon={<ArrowUpIcon/>}/>\r\n                <IconButton bg={'teal'} color={'white'} icon={<ArrowDownIcon/>}/>\r\n            </HStack>\r\n\r\n            {\r\n                isLoading && <>\r\n                    <Box\r\n                        left={0}\r\n                        position={'fixed'} top={0} minW={'100vw'} minH={'100vh'} zIndex={100000} bg={'gray.100'}\r\n                        opacity={.5}>\r\n\r\n                    </Box>\r\n                    <CircularProgress\r\n                        transform={\r\n                            'translate(50%,-50%)'\r\n                        }\r\n                        position={'fixed'} top={'50%'}\r\n                        left={'50%'}\r\n                        isIndeterminate color=\"green.300\" zIndex={100001} align={'center'}/>\r\n                </>\r\n            }\r\n\r\n            <AlertDialog\r\n                isOpen={isOpen}\r\n                leastDestructiveRef={cancelRef}\r\n                onClose={() => {\r\n                    setOpen(false)\r\n                    setSelectedQuestion(null)\r\n                }}\r\n            >\r\n                <AlertDialogOverlay>\r\n                    <AlertDialogContent>\r\n                        <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                            Remove Question\r\n                        </AlertDialogHeader>\r\n\r\n                        <AlertDialogBody>\r\n                            Are you sure? You can't undo this action afterwards.\r\n                        </AlertDialogBody>\r\n\r\n                        <AlertDialogFooter>\r\n                            <Button\r\n                                ref={cancelRef}\r\n                                onClick={() => {\r\n                                    setOpen(false)\r\n                                    setSelectedQuestion(null)\r\n                                }}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button colorScheme=\"red\"\r\n                                    onClick={onRemoveQuestion}\r\n                                    ml={3}>\r\n                                Delete\r\n                            </Button>\r\n                        </AlertDialogFooter>\r\n                    </AlertDialogContent>\r\n                </AlertDialogOverlay>\r\n            </AlertDialog>\r\n        </DragDropContext>\r\n    );\r\n}\r\n\r\nexport default QuizEditor;"]},"metadata":{},"sourceType":"module"}