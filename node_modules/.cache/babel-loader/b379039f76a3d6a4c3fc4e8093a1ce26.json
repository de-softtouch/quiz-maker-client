{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\pages\\\\admin\\\\library\\\\QuizEntry.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { AlertDialogBody, AlertDialogContent, AlertDialogFooter, AlertDialogHeader, AlertDialogOverlay, Box, Button, HStack, IconButton, Image, Menu, MenuButton, MenuItem, MenuList, Text, Tooltip, VStack, AlertDialog } from \"@chakra-ui/react\";\nimport { BsListCheck, BsPlay, MdAssignment, RiDeviceRecoverLine } from \"react-icons/all\";\nimport { ChevronDownIcon, EditIcon, TimeIcon } from \"@chakra-ui/icons\";\nimport dateFormat from \"dateformat\";\nimport UserService from \"../../../service/UserService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst QuizEntry = ({\n  i,\n  createDate,\n  id,\n  title,\n  playedCount,\n  limitTime,\n  numOfQuestions,\n  recover\n}) => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const onClose = () => setIsOpen(false);\n\n  const cancelRef = useRef();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      my: 2,\n      p: 5,\n      minW: \"100\",\n      bg: \"white\",\n      maxW: 800,\n      position: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 5,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          boxSize: \"100px\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: \"https://cdn-icons-png.flaticon.com/512/1205/1205526.png\",\n            alt: \"Q\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VStack, {\n          align: \"start\",\n          children: [/*#__PURE__*/_jsxDEV(HStack, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              color: \"gray.500\",\n              fontSize: 12,\n              children: \"Quiz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              bg: \"teal.100\",\n              px: 2,\n              color: \"gray.500\",\n              fontSize: 12\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: \"medium\",\n            fontSize: 18,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            spacing: 4,\n            children: [/*#__PURE__*/_jsxDEV(HStack, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"xs\",\n                icon: /*#__PURE__*/_jsxDEV(BsListCheck, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 43\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: 12,\n                children: [numOfQuestions, \" Q\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(HStack, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"xs\",\n                icon: /*#__PURE__*/_jsxDEV(TimeIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 43\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: 12,\n                children: [limitTime, \" mins\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(HStack, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"xs\",\n                icon: /*#__PURE__*/_jsxDEV(BsPlay, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 43\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: 12,\n                children: [\"Played \", playedCount, \" times\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: [\"Create At \", \": \", /*#__PURE__*/_jsxDEV(Tooltip, {\n              label: \"Created date\",\n              children: dateFormat(createDate, \"dd-mm-yyyy, h:MM TT\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 5,\n        position: \"absolute\",\n        top: 5,\n        right: 5,\n        children: [/*#__PURE__*/_jsxDEV(IconButton // onClick={handleEdit}\n        , {\n          size: \"sx\",\n          icon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n            bg: \"white\",\n            size: \"sm\",\n            as: Button,\n            rightIcon: /*#__PURE__*/_jsxDEV(ChevronDownIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuList, {\n            children: [/*#__PURE__*/_jsxDEV(MenuItem // onClick={() => {\n            //     setSelectedQuiz(\n            //         item\n            //     );\n            //     setOpen(true);\n            // }}\n            , {\n              children: \"Assigned users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem // onClick={() => {\n            //     setSelectedQuiz(\n            //         item\n            //     );\n            //     setShare(true)\n            // }}\n            , {\n              children: \"Share\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem // onClick={handleEdit}\n            , {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              onClick: () => {// updateQuizActive(0)\n              },\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => {\n          recover(id);\n        },\n        position: \"absolute\",\n        bottom: 10,\n        right: 5,\n        size: \"md\",\n        icon: /*#__PURE__*/_jsxDEV(RiDeviceRecoverLine, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AlertDialog, {\n      isOpen: isOpen,\n      leastDestructiveRef: cancelRef,\n      onClose: onClose,\n      children: /*#__PURE__*/_jsxDEV(AlertDialogOverlay, {\n        children: /*#__PURE__*/_jsxDEV(AlertDialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(AlertDialogHeader, {\n            fontSize: \"lg\",\n            fontWeight: \"bold\",\n            children: [\"Recover quiz : \", title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AlertDialogBody, {\n            children: \"Are you sure? You can't undo this action afterwards.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(AlertDialogFooter, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              ref: cancelRef,\n              onClick: onClose,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"red\",\n              onClick: onClose,\n              ml: 3,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(QuizEntry, \"blVwWFQSbUiu38AVOHb5IEpEmLs=\");\n\n_c = QuizEntry;\nexport default QuizEntry;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizEntry\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/pages/admin/library/QuizEntry.js"],"names":["React","useRef","useState","AlertDialogBody","AlertDialogContent","AlertDialogFooter","AlertDialogHeader","AlertDialogOverlay","Box","Button","HStack","IconButton","Image","Menu","MenuButton","MenuItem","MenuList","Text","Tooltip","VStack","AlertDialog","BsListCheck","BsPlay","MdAssignment","RiDeviceRecoverLine","ChevronDownIcon","EditIcon","TimeIcon","dateFormat","UserService","QuizEntry","i","createDate","id","title","playedCount","limitTime","numOfQuestions","recover","isOpen","setIsOpen","onClose","cancelRef"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\r\nimport {\r\n    AlertDialogBody,\r\n    AlertDialogContent, AlertDialogFooter, AlertDialogHeader,\r\n    AlertDialogOverlay,\r\n    Box,\r\n    Button,\r\n    HStack,\r\n    IconButton,\r\n    Image,\r\n    Menu,\r\n    MenuButton, MenuItem,\r\n    MenuList,\r\n    Text,\r\n    Tooltip,\r\n    VStack,\r\n    AlertDialog\r\n} from \"@chakra-ui/react\";\r\nimport {BsListCheck, BsPlay, MdAssignment, RiDeviceRecoverLine} from \"react-icons/all\";\r\nimport {ChevronDownIcon, EditIcon, TimeIcon} from \"@chakra-ui/icons\";\r\nimport dateFormat from \"dateformat\";\r\nimport UserService from \"../../../service/UserService\";\r\n\r\nconst QuizEntry = ({i, createDate, id, title, playedCount, limitTime, numOfQuestions, recover}) => {\r\n    const [isOpen, setIsOpen] = useState(false)\r\n    const onClose = () => setIsOpen(false)\r\n    const cancelRef = useRef()\r\n    return (\r\n        <>\r\n            <Box\r\n                my={2}\r\n                key={i}\r\n                p={5}\r\n                minW={\"100\"}\r\n                bg={\"white\"}\r\n                maxW={800}\r\n                position={\"relative\"}\r\n            >\r\n                <HStack spacing={5}>\r\n                    {/*IMAGE*/}\r\n                    <Box boxSize=\"100px\">\r\n                        <Image\r\n                            src=\"https://cdn-icons-png.flaticon.com/512/1205/1205526.png\"\r\n                            alt=\"Q\"\r\n                        />\r\n                    </Box>\r\n                    {/*INFO*/}\r\n                    <VStack align={\"start\"}>\r\n                        {/*STATUS*/}\r\n                        <HStack>\r\n                            <Text\r\n                                color={\"gray.500\"}\r\n                                fontSize={12}\r\n                            >\r\n                                Quiz\r\n                            </Text>\r\n                            <Text\r\n                                bg={\"teal.100\"}\r\n                                px={2}\r\n                                color={\"gray.500\"}\r\n                                fontSize={12}\r\n                            >\r\n                                {\r\n                                    // getStatus(item.status)\r\n                                }\r\n                            </Text>\r\n                        </HStack>\r\n                        {/*TITLE*/}\r\n                        <Text\r\n                            fontWeight={\"medium\"}\r\n                            fontSize={18}\r\n                        >\r\n                            {title}\r\n                        </Text>\r\n                        {/*PLAYED*/}\r\n                        <HStack spacing={4}>\r\n                            <HStack>\r\n                                <IconButton\r\n                                    size={\"xs\"}\r\n                                    icon={<BsListCheck/>}\r\n                                />\r\n                                <Text fontSize={12}>\r\n                                    {numOfQuestions} Q\r\n                                </Text>\r\n                            </HStack>\r\n\r\n                            <HStack>\r\n                                <IconButton\r\n                                    size={\"xs\"}\r\n                                    icon={<TimeIcon/>}\r\n                                />\r\n                                <Text fontSize={12}>\r\n                                    {limitTime} mins\r\n                                </Text>\r\n                            </HStack>\r\n                            <HStack>\r\n                                <IconButton\r\n                                    size={\"xs\"}\r\n                                    icon={<BsPlay/>}\r\n                                />\r\n                                <Text fontSize={12}>\r\n                                    Played {playedCount} times\r\n                                </Text>\r\n                            </HStack>\r\n                        </HStack>\r\n                        {/*CREATED DATE*/}\r\n                        <Text>\r\n                            Create At {\": \"}\r\n                            <Tooltip label={\"Created date\"}>\r\n                                {dateFormat(\r\n                                    createDate,\r\n                                    \"dd-mm-yyyy, h:MM TT\"\r\n                                )}\r\n                            </Tooltip>\r\n                        </Text>\r\n\r\n                    </VStack>\r\n                </HStack>\r\n                <HStack\r\n                    spacing={5}\r\n                    position={\"absolute\"}\r\n                    top={5}\r\n                    right={5}\r\n                >\r\n                    <IconButton\r\n                        // onClick={handleEdit}\r\n                        size={\"sx\"}\r\n                        icon={<EditIcon/>}\r\n                    />\r\n                    <Menu>\r\n                        <MenuButton\r\n                            bg={\"white\"}\r\n                            size={\"sm\"}\r\n                            as={Button}\r\n                            rightIcon={<ChevronDownIcon/>}\r\n                        >\r\n                            {/*Actions*/}\r\n                        </MenuButton>\r\n                        <MenuList>\r\n                            <MenuItem\r\n                                // onClick={() => {\r\n                                //     setSelectedQuiz(\r\n                                //         item\r\n                                //     );\r\n                                //     setOpen(true);\r\n                                // }}\r\n                            >\r\n                                Assigned users\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                // onClick={() => {\r\n                                //     setSelectedQuiz(\r\n                                //         item\r\n                                //     );\r\n                                //     setShare(true)\r\n                                // }}\r\n                            >\r\n                                Share\r\n                            </MenuItem>\r\n                            <MenuItem\r\n                                // onClick={handleEdit}\r\n                            >\r\n                                Edit\r\n                            </MenuItem>\r\n                            <MenuItem onClick={() => {\r\n                                // updateQuizActive(0)\r\n                            }}>Remove</MenuItem>\r\n                        </MenuList>\r\n                    </Menu>\r\n                </HStack>\r\n                <IconButton\r\n                    onClick={() => {\r\n\r\n                        recover(id);\r\n\r\n                    }}\r\n                    position={\"absolute\"}\r\n                    bottom={10}\r\n                    right={5}\r\n                    size={\"md\"}\r\n                    icon={<RiDeviceRecoverLine/>}\r\n                />\r\n            </Box>\r\n            <AlertDialog\r\n                isOpen={isOpen}\r\n                leastDestructiveRef={cancelRef}\r\n                onClose={onClose}\r\n            >\r\n                <AlertDialogOverlay>\r\n                    <AlertDialogContent>\r\n                        <AlertDialogHeader fontSize='lg' fontWeight='bold'>\r\n                            Recover quiz : {title}\r\n                        </AlertDialogHeader>\r\n\r\n                        <AlertDialogBody>\r\n                            Are you sure? You can't undo this action afterwards.\r\n                        </AlertDialogBody>\r\n\r\n                        <AlertDialogFooter>\r\n                            <Button ref={cancelRef} onClick={onClose}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button colorScheme='red' onClick={onClose} ml={3}>\r\n                                Delete\r\n                            </Button>\r\n                        </AlertDialogFooter>\r\n                    </AlertDialogContent>\r\n                </AlertDialogOverlay>\r\n            </AlertDialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default QuizEntry;"]},"metadata":{},"sourceType":"module"}