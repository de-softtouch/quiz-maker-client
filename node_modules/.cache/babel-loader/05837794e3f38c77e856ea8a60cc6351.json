{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\pages\\\\admin\\\\library\\\\RemovedQuizzes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Box, Button, Flex, HStack, IconButton, Image, Menu, MenuButton, MenuItem, MenuList, Text, Tooltip, useDisclosure, VStack } from \"@chakra-ui/react\";\nimport { BsListCheck, BsPlay, MdAssignment } from \"react-icons/all\";\nimport { ChevronDownIcon, EditIcon, TimeIcon } from \"@chakra-ui/icons\";\nimport dateFormat from \"dateformat\";\nimport UserService from \"../../../service/UserService\";\nimport QuizEntry from \"./QuizEntry\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RemovedQuizzes = ({\n  i,\n  createDate,\n  title,\n  playedCount,\n  limitTime,\n  numOfQuestions\n}) => {\n  _s();\n\n  const [quizzes, setQuizzes] = useState([]); // const [] =  useDisclosure();\n\n  useEffect(async () => {\n    try {\n      const data = await UserService.getUserQuizzes({\n        active: 0\n      });\n      console.log('removed quizzes: ', data.data);\n      setQuizzes(data.data);\n    } catch (e) {}\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      direction: 'column',\n      w: '100%',\n      children: quizzes && quizzes.map((item, i) => /*#__PURE__*/_jsxDEV(QuizEntry, { ...item\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(RemovedQuizzes, \"d94n4itHLWY9isuanVBP5l9H7dQ=\");\n\n_c = RemovedQuizzes;\nexport default RemovedQuizzes;\n\nvar _c;\n\n$RefreshReg$(_c, \"RemovedQuizzes\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/pages/admin/library/RemovedQuizzes.js"],"names":["React","useEffect","useState","Box","Button","Flex","HStack","IconButton","Image","Menu","MenuButton","MenuItem","MenuList","Text","Tooltip","useDisclosure","VStack","BsListCheck","BsPlay","MdAssignment","ChevronDownIcon","EditIcon","TimeIcon","dateFormat","UserService","QuizEntry","RemovedQuizzes","i","createDate","title","playedCount","limitTime","numOfQuestions","quizzes","setQuizzes","data","getUserQuizzes","active","console","log","e","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SACIC,GADJ,EAEIC,MAFJ,EAEYC,IAFZ,EAGIC,MAHJ,EAIIC,UAJJ,EAKIC,KALJ,EAMIC,IANJ,EAOIC,UAPJ,EAOgBC,QAPhB,EAQIC,QARJ,EASIC,IATJ,EAUIC,OAVJ,EAUaC,aAVb,EAWIC,MAXJ,QAYO,kBAZP;AAaA,SAAQC,WAAR,EAAqBC,MAArB,EAA6BC,YAA7B,QAAgD,iBAAhD;AACA,SAAQC,eAAR,EAAyBC,QAAzB,EAAmCC,QAAnC,QAAkD,kBAAlD;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,CAAD;AAAIC,EAAAA,UAAJ;AAAgBC,EAAAA,KAAhB;AAAuBC,EAAAA,WAAvB;AAAoCC,EAAAA,SAApC;AAA+CC,EAAAA;AAA/C,CAAD,KAAoE;AAAA;;AAEvF,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhC,QAAQ,CAAC,EAAD,CAAtC,CAFuF,CAGvF;;AACAD,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAI;AACA,YAAMkC,IAAI,GAAG,MAAMX,WAAW,CAACY,cAAZ,CAA2B;AAC1CC,QAAAA,MAAM,EAAE;AADkC,OAA3B,CAAnB;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCJ,IAAI,CAACA,IAAtC;AACAD,MAAAA,UAAU,CAACC,IAAI,CAACA,IAAN,CAAV;AACH,KAND,CAME,OAAOK,CAAP,EAAU,CAEX;AACJ,GAVQ,EAUN,EAVM,CAAT;AAWA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAE,QAAjB;AAA2B,MAAA,CAAC,EAAE,MAA9B;AAAA,gBAEQP,OAAO,IAAIA,OAAO,CAACQ,GAAR,CAAY,CAACC,IAAD,EAAOf,CAAP,kBACnB,QAAC,SAAD,OAEkBe;AAFlB,SAAgBf,CAAhB;AAAA;AAAA;AAAA;AAAA,cADO;AAFnB;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAeH,CA9BD;;GAAMD,c;;KAAAA,c;AAgCN,eAAeA,cAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {\r\n    Box,\r\n    Button, Flex,\r\n    HStack,\r\n    IconButton,\r\n    Image,\r\n    Menu,\r\n    MenuButton, MenuItem,\r\n    MenuList,\r\n    Text,\r\n    Tooltip, useDisclosure,\r\n    VStack\r\n} from \"@chakra-ui/react\";\r\nimport {BsListCheck, BsPlay, MdAssignment} from \"react-icons/all\";\r\nimport {ChevronDownIcon, EditIcon, TimeIcon} from \"@chakra-ui/icons\";\r\nimport dateFormat from \"dateformat\";\r\nimport UserService from \"../../../service/UserService\";\r\nimport QuizEntry from \"./QuizEntry\";\r\n\r\nconst RemovedQuizzes = ({i, createDate, title, playedCount, limitTime, numOfQuestions}) => {\r\n\r\n    const [quizzes, setQuizzes] = useState([]);\r\n    // const [] =  useDisclosure();\r\n    useEffect(async () => {\r\n        try {\r\n            const data = await UserService.getUserQuizzes({\r\n                active: 0\r\n            })\r\n            console.log('removed quizzes: ', data.data);\r\n            setQuizzes(data.data);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Flex direction={'column'} w={'100%'}>\r\n                {\r\n                    quizzes && quizzes.map((item, i) => (\r\n                        <QuizEntry key={i}\r\n                                   {\r\n                                       ...item\r\n                                   }\r\n                        />\r\n                    ))\r\n                }\r\n            </Flex>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RemovedQuizzes;"]},"metadata":{},"sourceType":"module"}