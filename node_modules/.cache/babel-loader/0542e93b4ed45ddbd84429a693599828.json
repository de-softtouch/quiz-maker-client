{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\components\\\\public\\\\start_quiz\\\\StartQuiz.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Box, Button, Checkbox, Container, Divider, Flex, Heading, HStack, IconButton, SimpleGrid, Text, Tooltip, VStack } from \"@chakra-ui/react\";\nimport { ArrowDownIcon, ArrowUpIcon, TimeIcon } from \"@chakra-ui/icons\";\nimport { useQuiz } from \"../../../context/QuizProvider\";\nimport axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport quizApi from \"../../../api/quizApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StartQuiz = () => {\n  _s();\n\n  const {\n    foundedQuiz,\n    setFoundedQuiz\n  } = useQuiz();\n  const {\n    code\n  } = useParams();\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    const getQuizDetails = async () => {\n      setLoading(true);\n\n      try {\n        const data = await quizApi.getQuizDetailsByCode(code);\n        setFoundedQuiz(data);\n        setLoading(false);\n        console.log(data);\n      } catch (e) {\n        setLoading(false);\n        console.log('Failed to get quiz details');\n      }\n    };\n\n    getQuizDetails();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    minH: '100vh',\n    bg: 'blue.100',\n    p: 10,\n    align: 'center',\n    children: !isLoading && /*#__PURE__*/_jsxDEV(Box, {\n      bg: 'white',\n      borderRadius: 'md',\n      boxShadow: 'xl',\n      minH: '100vh',\n      maxW: '860px',\n      p: 10,\n      children: [/*#__PURE__*/_jsxDEV(VStack, {\n        position: 'relative',\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          pb: 10,\n          fontSize: 25,\n          children: foundedQuiz != null ? foundedQuiz.title : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontWeight: 'medium',\n          color: 'teal',\n          letterSpacing: 1,\n          fontStyle: 'italic',\n          position: 'absolute',\n          top: 0,\n          right: 0,\n          m: 5,\n          children: [foundedQuiz.questions.length, \" Questions\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), foundedQuiz.questions.map((question, i) => /*#__PURE__*/_jsxDEV(VStack, {\n          w: '100%',\n          align: 'start',\n          textAlign: 'start',\n          p: 2,\n          spacing: 5,\n          children: [/*#__PURE__*/_jsxDEV(Container, {\n            w: '100%',\n            maxW: \"4xl\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              maxW: \"4xl\",\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: 'medium',\n                children: [i + 1, \". \", question.title, \" \\\\t QuestionID : \", question.questionId]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n            w: '100%',\n            columns: 2,\n            spacing: 2,\n            align: 'start',\n            textAlign: 'start',\n            children: question.options.map((option, i) => /*#__PURE__*/_jsxDEV(Container, {\n              w: '100%',\n              minW: 300,\n              maxW: \"xl\",\n              align: 'start',\n              textAlign: 'start',\n              alignItems: 'start',\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                padding: \"1\",\n                maxW: \"3xl\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox // onChange={(e) => onSelectedOption(e, option.optionId, question.questionId)}\n                , {\n                  value: option.optionId,\n                  colorScheme: 'teal',\n                  size: 'md',\n                  children: [option.content, \" \\\\t OptionID : \", option.optionId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 57\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 53\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 49\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 37\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 33\n        }, this)), /*#__PURE__*/_jsxDEV(Box, {\n          py: 5,\n          align: 'end',\n          alignSelf: 'end',\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            alignSelf: 'end',\n            size: 'lg',\n            colorScheme: 'teal',\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        zIndex: 100,\n        position: 'fixed',\n        bottom: 10,\n        right: 20,\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          label: \"Scroll to top\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => window.scrollTo(0, 0),\n            colorScheme: 'teal',\n            icon: /*#__PURE__*/_jsxDEV(ArrowUpIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          label: \"Scroll to bottom\",\n          children: /*#__PURE__*/_jsxDEV(IconButton // aria-label={\"\"}\n          , {\n            onClick: () => {// pageRef.current.scrollIntoView({\n              //     behavior: \"smooth\",\n              //     block: \"end\",\n              //     inline: \"nearest\"\n              // })\n            },\n            colorScheme: 'teal',\n            icon: /*#__PURE__*/_jsxDEV(ArrowDownIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        p: 1,\n        position: 'fixed',\n        left: 0,\n        top: 0,\n        m: 10,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: 'md',\n          colorScheme: 'teal',\n          variant: 'outline',\n          leftIcon: /*#__PURE__*/_jsxDEV(TimeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 96\n          }, this),\n          children: \"23:00 left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 31\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StartQuiz, \"TZiJKzmn1Ptql1NfxlLLyy3OyF8=\", false, function () {\n  return [useQuiz, useParams];\n});\n\n_c = StartQuiz;\nexport default StartQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartQuiz\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/components/public/start_quiz/StartQuiz.js"],"names":["React","useEffect","useState","Box","Button","Checkbox","Container","Divider","Flex","Heading","HStack","IconButton","SimpleGrid","Text","Tooltip","VStack","ArrowDownIcon","ArrowUpIcon","TimeIcon","useQuiz","axios","useParams","quizApi","StartQuiz","foundedQuiz","setFoundedQuiz","code","isLoading","setLoading","getQuizDetails","data","getQuizDetailsByCode","console","log","e","title","questions","length","map","question","i","questionId","options","option","optionId","content","window","scrollTo"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Container,\r\n    Divider, Flex,\r\n    Heading,\r\n    HStack, IconButton,\r\n    SimpleGrid,\r\n    Text,\r\n    Tooltip,\r\n    VStack\r\n} from \"@chakra-ui/react\";\r\nimport {ArrowDownIcon, ArrowUpIcon, TimeIcon} from \"@chakra-ui/icons\";\r\nimport {useQuiz} from \"../../../context/QuizProvider\";\r\nimport axios from \"axios\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport quizApi from \"../../../api/quizApi\";\r\n\r\nconst StartQuiz = () => {\r\n\r\n    const {foundedQuiz, setFoundedQuiz} = useQuiz();\r\n    const {code} = useParams();\r\n    const [isLoading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        const getQuizDetails = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const data =await quizApi.getQuizDetailsByCode(code);\r\n                setFoundedQuiz(data);\r\n                setLoading(false);\r\n                console.log(data);\r\n            } catch (e) {\r\n                setLoading(false);\r\n                console.log('Failed to get quiz details');\r\n            }\r\n        }\r\n        getQuizDetails();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Box minH={'100vh'} bg={'blue.100'} p={10}\r\n             align={'center'}>\r\n            {\r\n                !isLoading && <Box\r\n                    bg={'white'}\r\n                    borderRadius={'md'}\r\n                    boxShadow={'xl'}\r\n                    minH={'100vh'}\r\n                    maxW={'860px'}\r\n                    p={10}>\r\n                    <VStack position={'relative'}>\r\n                        {/*\r\n                           QUIZ TITLE\r\n                           */}\r\n                        <Heading\r\n                            pb={10}\r\n                            fontSize={25}>\r\n                            {foundedQuiz != null ? foundedQuiz.title : ''}\r\n                        </Heading>\r\n                        <Text\r\n                            fontWeight={'medium'}\r\n                            color={'teal'}\r\n                            letterSpacing={1}\r\n                            fontStyle={'italic'}\r\n                            position={'absolute'}\r\n                            top={0}\r\n                            right={0}\r\n                            m={5}>\r\n                            {foundedQuiz.questions.length} Questions\r\n                        </Text>\r\n                        {/*QUESTIONS*/}\r\n                        {\r\n                            foundedQuiz.questions.map((question, i) => (\r\n                                <VStack\r\n                                    w={'100%'}\r\n                                    align={'start'}\r\n                                    textAlign={'start'\r\n                                    } key={i}\r\n                                    p={2}\r\n                                    spacing={5}>\r\n                                    {/*\r\n                                    QUESTION TITLE\r\n                                    */}\r\n                                    <Container w={'100%'} maxW=\"4xl\">\r\n                                        <Box maxW=\"4xl\">\r\n                                            <Text fontWeight={'medium'}>\r\n                                                {i + 1}. {question.title} \\t QuestionID : {question.questionId}\r\n                                            </Text>\r\n                                        </Box>\r\n                                    </Container>\r\n                                    {/*OPTIONS*/}\r\n                                    <SimpleGrid\r\n                                        w={'100%'}\r\n                                        columns={2}\r\n                                        spacing={2}\r\n                                        align={'start'}\r\n                                        textAlign={'start'}>\r\n                                        {\r\n                                            question.options.map((option, i) => (\r\n                                                <Container\r\n                                                    w={'100%'}\r\n                                                    minW={300}\r\n                                                    key={i}\r\n                                                    maxW=\"xl\"\r\n                                                    align={'start'}\r\n                                                    textAlign={'start'}\r\n                                                    alignItems={'start'}\r\n                                                >\r\n                                                    <Box padding=\"1\" maxW=\"3xl\">\r\n                                                        <Checkbox\r\n                                                            // onChange={(e) => onSelectedOption(e, option.optionId, question.questionId)}\r\n                                                            value={option.optionId}\r\n                                                            colorScheme={'teal'}\r\n                                                            size={'md'}>\r\n                                                            {option.content} \\t OptionID : {option.optionId}\r\n                                                        </Checkbox>\r\n                                                    </Box>\r\n                                                </Container>\r\n                                            ))\r\n                                        }\r\n                                    </SimpleGrid>\r\n                                    <Divider/>\r\n                                </VStack>\r\n                            ))\r\n                        }\r\n                        {/* Submit button*/}\r\n                        <Box py={5} align={'end'} alignSelf={'end'}>\r\n                            <Button alignSelf={'end'} size={'lg'} colorScheme={'teal'}>Submit</Button>\r\n                        </Box>\r\n                    </VStack>\r\n\r\n                    {/* FIXED CONTENTS*/}\r\n                    <HStack zIndex={100} position={'fixed'} bottom={10} right={20}>\r\n                        <Tooltip label={\"Scroll to top\"}>\r\n                            <IconButton\r\n                                onClick={() => window.scrollTo(0, 0)}\r\n                                colorScheme={'teal'}\r\n                                icon={<ArrowUpIcon/>}/>\r\n                        </Tooltip>\r\n                        <Tooltip label={\"Scroll to bottom\"}>\r\n                            <IconButton\r\n                                // aria-label={\"\"}\r\n                                onClick={() => {\r\n                                    // pageRef.current.scrollIntoView({\r\n                                    //     behavior: \"smooth\",\r\n                                    //     block: \"end\",\r\n                                    //     inline: \"nearest\"\r\n                                    // })\r\n                                }}\r\n                                colorScheme={'teal'}\r\n                                icon={<ArrowDownIcon/>}/>\r\n                        </Tooltip>\r\n                    </HStack>\r\n                    <Flex p={1} position={'fixed'} left={0} top={0} m={10}>\r\n                        <Button size={'md'} colorScheme={'teal'} variant={'outline'} leftIcon={<TimeIcon/>}>23:00\r\n                            left</Button>\r\n                    </Flex>\r\n                </Box>\r\n            }\r\n\r\n\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default StartQuiz;"]},"metadata":{},"sourceType":"module"}