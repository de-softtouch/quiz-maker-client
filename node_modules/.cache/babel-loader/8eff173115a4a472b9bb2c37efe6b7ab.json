{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\pages\\\\admin\\\\assign\\\\Assignment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box, Button, Flex, FormControl, FormLabel, Heading, HStack, Input, Tag, TagCloseButton, TagLabel, Text, Textarea, useToast, VStack, Wrap, WrapItem } from \"@chakra-ui/react\";\nimport DatePicker from \"react-datepicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Assignment = () => {\n  _s();\n\n  const [emails, setEmails] = useState([]);\n  const [email, setEmail] = useState(\"\");\n  const [finishDate, setFinishDate] = useState(new Date());\n  const toast = useToast();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    w: '100%',\n    minH: '100vh',\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      w: '100%',\n      children: [/*#__PURE__*/_jsxDEV(VStack, {\n        flex: 8,\n        w: '100%',\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(HStack, {\n          w: '100%',\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"title\",\n            isRequired: true,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              bg: 'white',\n              placeholder: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          id: \"Description\",\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n            bg: 'white',\n            placeholder: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        flex: 3,\n        bg: 'white',\n        p: 2,\n        mx: 2,\n        children: /*#__PURE__*/_jsxDEV(VStack, {\n          align: 'start',\n          w: '100%',\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            alignSelf: 'end',\n            colorScheme: 'blue',\n            children: \"Giao B\\xE0i\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(VStack, {\n            w: '100%',\n            align: 'start',\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: \"Deadline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: finishDate,\n              onChange: date => setFinishDate(date),\n              timeInputLabel: \"Time:\",\n              dateFormat: \"MM/dd/yyyy h:mm aa\",\n              showTimeInput: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(VStack, {\n            children: [/*#__PURE__*/_jsxDEV(Wrap, {\n              w: \"100%\",\n              children: emails.map(email => /*#__PURE__*/_jsxDEV(WrapItem, {\n                children: /*#__PURE__*/_jsxDEV(Tag, {\n                  size: \"sm\",\n                  borderRadius: \"full\",\n                  variant: \"solid\",\n                  colorScheme: \"green\",\n                  children: [/*#__PURE__*/_jsxDEV(TagLabel, {\n                    children: email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TagCloseButton, {\n                    onClick: () => {\n                      let filteredEmail = emails.filter(e => e != email);\n                      setEmails(filteredEmail);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 41\n                }, this)\n              }, email, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(HStack, {\n              w: \"100%\",\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                size: \"sm\",\n                value: email,\n                onChange: e => setEmail(e.target.value),\n                placeholder: \"Email to share. Ex: test@gmail.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  setEmail(\"\");\n\n                  if (!emails.includes(email)) {\n                    setEmails(prevState => [...prevState, email]);\n                  }\n                },\n                isDisabled: email.length === 0,\n                size: \"sm\",\n                colorScheme: \"purple\",\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Assignment, \"NqJ3xRy6JvS/VBPUyf8YEMZGqyw=\", false, function () {\n  return [useToast];\n});\n\n_c = Assignment;\nexport default Assignment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Assignment\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/pages/admin/assign/Assignment.js"],"names":["React","useState","Box","Button","Flex","FormControl","FormLabel","Heading","HStack","Input","Tag","TagCloseButton","TagLabel","Text","Textarea","useToast","VStack","Wrap","WrapItem","DatePicker","Assignment","emails","setEmails","email","setEmail","finishDate","setFinishDate","Date","toast","date","map","filteredEmail","filter","e","target","value","includes","prevState","length"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Flex,\r\n    FormControl,\r\n    FormLabel,\r\n    Heading,\r\n    HStack,\r\n    Input, Tag, TagCloseButton, TagLabel, Text,\r\n    Textarea,\r\n    useToast,\r\n    VStack, Wrap, WrapItem\r\n} from \"@chakra-ui/react\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nconst Assignment = () => {\r\n\r\n    const [emails, setEmails] = useState([]);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [finishDate,setFinishDate] = useState(new Date());\r\n    const toast = useToast();\r\n\r\n    return (\r\n        <Box w={'100%'} minH={'100vh'}>\r\n            <Flex w={'100%'}>\r\n                <VStack flex={8} w={'100%'} spacing={2}>\r\n                    {/*TITLE*/}\r\n                    <HStack w={'100%'}>\r\n                        <FormControl id=\"title\" isRequired>\r\n                            <FormLabel>Title</FormLabel>\r\n                            <Input bg={'white'} placeholder=\"Title\"/>\r\n                        </FormControl>\r\n                    </HStack>\r\n                    {/*    DESCRIPTION*/}\r\n                    <FormControl id=\"Description\" isRequired>\r\n                        <FormLabel>Description</FormLabel>\r\n                        <Textarea bg={'white'} placeholder=\"Description\"/>\r\n                    </FormControl>\r\n                </VStack>\r\n                <Box flex={3} bg={'white'} p={2} mx={2}>\r\n                    <VStack align={'start'} w={'100%'}>\r\n                        <Button alignSelf={'end'} colorScheme={'blue'}>Giao Bài</Button>\r\n                        <VStack w={'100%'} align={'start'}>\r\n                            <Text>Deadline</Text>\r\n                            <DatePicker\r\n                                selected={finishDate}\r\n                                onChange={(date) => setFinishDate(date)}\r\n                                timeInputLabel=\"Time:\"\r\n                                dateFormat=\"MM/dd/yyyy h:mm aa\"\r\n                                showTimeInput\r\n                            />\r\n                        </VStack>\r\n                        <VStack>\r\n                            <Wrap w={\"100%\"}>\r\n                                {emails.map((email) => (\r\n                                    <WrapItem key={email}>\r\n                                        <Tag\r\n                                            size={\"sm\"}\r\n                                            borderRadius=\"full\"\r\n                                            variant=\"solid\"\r\n                                            colorScheme=\"green\"\r\n                                        >\r\n                                            <TagLabel>{email}</TagLabel>\r\n                                            <TagCloseButton\r\n                                                onClick={() => {\r\n                                                    let filteredEmail =\r\n                                                        emails.filter(\r\n                                                            (e) => e != email\r\n                                                        );\r\n                                                    setEmails(filteredEmail);\r\n                                                }}\r\n                                            />\r\n                                        </Tag>\r\n                                    </WrapItem>\r\n                                ))}\r\n                            </Wrap>\r\n                            {/*INPUT & ADD BUTTOn*/}\r\n                            <HStack w={\"100%\"}>\r\n                                <Input\r\n                                    size={\"sm\"}\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                    placeholder={\r\n                                        \"Email to share. Ex: test@gmail.com\"\r\n                                    }\r\n                                />\r\n                                <Button\r\n                                    onClick={() => {\r\n                                        setEmail(\"\");\r\n                                        if (!emails.includes(email)) {\r\n                                            setEmails((prevState) => [\r\n                                                ...prevState,\r\n                                                email,\r\n                                            ]);\r\n                                        }\r\n                                    }}\r\n                                    isDisabled={email.length === 0}\r\n                                    size={\"sm\"}\r\n                                    colorScheme={\"purple\"}\r\n                                >\r\n                                    Add\r\n                                </Button>\r\n                            </HStack>\r\n                        </VStack>\r\n                    </VStack>\r\n                </Box>\r\n            </Flex>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Assignment;"]},"metadata":{},"sourceType":"module"}