{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\quiz maker client\\\\src\\\\pages\\\\admin\\\\assigned\\\\AssignedInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Box, Button, Divider, Flex, Heading, HStack, SimpleGrid, Text } from \"@chakra-ui/react\";\nimport UserService from \"../../../service/UserService\";\nimport { useParams } from \"react-router-dom\";\nimport { AdminContext } from \"../../../providers/AdminSettingProvider\";\nimport { formatDateDisplay, isOutDate } from \"../../../utils/ApplicationUtils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AssignedInfo = () => {\n  _s();\n\n  const {\n    isLoading,\n    setLoading\n  } = useContext(AdminContext);\n  const {\n    id\n  } = useParams();\n  const [info, setInfo] = useState({});\n  useEffect(() => {\n    getInfo();\n  }, []);\n\n  const getInfo = async () => {\n    try {\n      setLoading(true);\n      const resp = await UserService.getAssignedQuizInfo(id);\n      console.log(resp.data);\n      setInfo(resp.data);\n    } catch (e) {} finally {\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    direction: 'column',\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        bg: 'white',\n        p: '5',\n        direction: 'column',\n        flex: 7,\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          children: \"TITLE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(HStack, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: info && info.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: info && info.createDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: info && info.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          py: '2'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Flex, {\n          py: 2,\n          justifyContent: 'end',\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: \"Den han\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            w: '20px'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            children: formatDateDisplay(info && info.finishDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        w: '20px'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), !isLoading && info && /*#__PURE__*/_jsxDEV(Flex, {\n        bg: 'white',\n        p: '5',\n        direction: 'column',\n        justifyContent: 'space-between',\n        flex: 3,\n        children: [/*#__PURE__*/_jsxDEV(Flex, {\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            fontWeight: 'medium',\n            children: info.status === 1 ? 'Da nop' : info.status === 0 && isOutDate(info.finishDate) ? 'Thieu' : 'Da giao'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          w: '100%',\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            disabled: info.status == 1 || isOutDate(info.finishDate),\n            colorScheme: 'blue',\n            w: '100%',\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), !isLoading && info && /*#__PURE__*/_jsxDEV(Flex, {\n      p: '5',\n      bg: 'white',\n      my: 5,\n      direction: 'column',\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: info.quiz.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n        columns: 3,\n        spacing: 5,\n        children: /*#__PURE__*/_jsxDEV(HStack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AssignedInfo, \"ApRtzSVBZn2ZDqaZWQr9WQfzfsA=\", false, function () {\n  return [useParams];\n});\n\n_c = AssignedInfo;\nexport default AssignedInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignedInfo\");","map":{"version":3,"sources":["C:/Users/Admin/Documents/quiz maker client/src/pages/admin/assigned/AssignedInfo.js"],"names":["React","useContext","useEffect","useState","Box","Button","Divider","Flex","Heading","HStack","SimpleGrid","Text","UserService","useParams","AdminContext","formatDateDisplay","isOutDate","AssignedInfo","isLoading","setLoading","id","info","setInfo","getInfo","resp","getAssignedQuizInfo","console","log","data","e","title","createDate","description","finishDate","status","quiz"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {Box, Button, Divider, Flex, Heading, HStack, SimpleGrid, Text} from \"@chakra-ui/react\";\r\nimport UserService from \"../../../service/UserService\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {AdminContext} from \"../../../providers/AdminSettingProvider\";\r\nimport {formatDateDisplay, isOutDate} from \"../../../utils/ApplicationUtils\";\r\n\r\nconst AssignedInfo = () => {\r\n    const {isLoading, setLoading} = useContext(AdminContext);\r\n    const {id} = useParams();\r\n\r\n    const [info, setInfo] = useState({});\r\n    useEffect(() => {\r\n        getInfo();\r\n    }, []);\r\n\r\n    const getInfo = async () => {\r\n        try {\r\n            setLoading(true)\r\n            const resp = await UserService.getAssignedQuizInfo(id);\r\n            console.log(resp.data);\r\n            setInfo(resp.data);\r\n        } catch (e) {\r\n\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n    return (\r\n        <Flex direction={'column'}>\r\n            <Flex>\r\n                <Flex bg={'white'} p={'5'} direction={'column'} flex={7}>\r\n                    <Heading>TITLE</Heading>\r\n                    <HStack>\r\n                        <Text>{info && info.title}</Text>\r\n                        <Text>{info && info.createDate}</Text>\r\n                    </HStack>\r\n                    <Text>{info && info.description}</Text>\r\n                    <Divider py={'2'}/>\r\n                    <Flex py={2} justifyContent={'end'}>\r\n                        <Text>Den han</Text>\r\n                        <Box w={'20px'}/>\r\n                        <Text>{formatDateDisplay(info && info.finishDate)}</Text>\r\n                    </Flex>\r\n                </Flex>\r\n                <Box w={'20px'}></Box>\r\n                {!isLoading && info &&\r\n                <Flex bg={'white'} p={'5'} direction={'column'} justifyContent={'space-between'} flex={3}>\r\n                    <Flex justifyContent={\"space-between\"}>\r\n                        <Text>Status</Text>\r\n                        <Text\r\n                            fontWeight={'medium'}>{info.status === 1 ? 'Da nop'\r\n                            : (info.status === 0 && isOutDate(info.finishDate) ? 'Thieu' : 'Da giao')}</Text>\r\n                    </Flex>\r\n                    <Box w={'100%'}>\r\n                        <Button\r\n                            disabled={info.status == 1 || isOutDate(info.finishDate)}\r\n                            colorScheme={'blue'} w={'100%'}>Start</Button>\r\n                    </Box>\r\n                </Flex>\r\n\r\n                }\r\n            </Flex>\r\n            {\r\n                !isLoading && info && (\r\n                    <Flex p={'5'} bg={'white'} my={5} direction={'column'}>\r\n                        <Heading>\r\n                            {info.quiz.title}\r\n                        </Heading>\r\n                        <SimpleGrid columns={3} spacing={5}>\r\n                            <HStack>\r\n                                \r\n                            </HStack>\r\n                        </SimpleGrid>\r\n                    </Flex>\r\n                )\r\n            }\r\n        </Flex>\r\n    );\r\n};\r\n\r\nexport default AssignedInfo;"]},"metadata":{},"sourceType":"module"}