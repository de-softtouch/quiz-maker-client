{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\components\\\\admin\\\\assigned\\\\AssignedQuizPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Box, Divider, Heading, HStack, Table, TableCaption, Tbody, Td, Text, Th, Thead, Tr } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport dateFormat from 'dateformat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AssignedQuizPage = () => {\n  _s();\n\n  const [isLoading, setLoading] = useState(true);\n  const [assignedQuizzes, setAssignedQuiz] = useState([]);\n  useEffect(() => {\n    console.log('use effect assign quiz');\n\n    try {\n      setLoading(true);\n      axios.get('http://localhost:8080/api/v1/member/user/assigned-quizzes', {\n        headers: {\n          \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\n        }\n      }).then(resp => {\n        if (resp.status === 200) {\n          console.log(resp.data);\n          setAssignedQuiz(resp.data);\n          setLoading(false);\n        }\n      });\n    } catch (e) {}\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      textAlign: 'center',\n      children: \"Assigned quizess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      my: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      size: 'lg',\n      variant: 'striped',\n      colorScheme: 'blue',\n      children: [/*#__PURE__*/_jsxDEV(Thead, {\n        children: /*#__PURE__*/_jsxDEV(Tr, {\n          children: [/*#__PURE__*/_jsxDEV(Th, {\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Quiz Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Th, {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n        children: [assignedQuizzes.length == 0 && /*#__PURE__*/_jsxDEV(Tr, {\n          children: /*#__PURE__*/_jsxDEV(Td, {\n            colSpan: 4,\n            py: 5,\n            my: 5,\n            children: \"Your dont have any assigned quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 56\n        }, this), assignedQuizzes.length > 0 && assignedQuizzes.map((quizInfo, index) => /*#__PURE__*/_jsxDEV(Tr, {\n          children: [/*#__PURE__*/_jsxDEV(Td, {\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: /*#__PURE__*/_jsxDEV(HStack, {\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                children: quizInfo.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                bg: 'teal.700',\n                px: 2,\n                color: 'white',\n                fontSize: 'sm',\n                children: \"new\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: dateFormat(quizInfo.createdDate, \"dddd, mmmm, yyyy, h:MM:ss TT\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Td, {\n            children: \"Start now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), assignedQuizzes.length > 0 && /*#__PURE__*/_jsxDEV(TableCaption, {\n        children: \"Assigned Quizzes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AssignedQuizPage, \"hxo0LZv4rWXnBaOylcnmj/MekbA=\");\n\n_c = AssignedQuizPage;\nexport default AssignedQuizPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignedQuizPage\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/components/admin/assigned/AssignedQuizPage.js"],"names":["React","useEffect","useState","Box","Divider","Heading","HStack","Table","TableCaption","Tbody","Td","Text","Th","Thead","Tr","axios","dateFormat","AssignedQuizPage","isLoading","setLoading","assignedQuizzes","setAssignedQuiz","console","log","get","headers","localStorage","getItem","then","resp","status","data","e","length","map","quizInfo","index","title","createdDate"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {Box, Divider, Heading, HStack, Table, TableCaption, Tbody, Td, Text, Th, Thead, Tr} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport dateFormat from 'dateformat';\r\nconst AssignedQuizPage = () => {\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [assignedQuizzes, setAssignedQuiz] = useState([]);\r\n    useEffect(() => {\r\n        console.log('use effect assign quiz');\r\n        try {\r\n            setLoading(true);\r\n            axios.get('http://localhost:8080/api/v1/member/user/assigned-quizzes', {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\r\n                }\r\n            })\r\n                .then((resp) => {\r\n                    if (resp.status === 200) {\r\n                        console.log(resp.data);\r\n                        setAssignedQuiz(resp.data);\r\n                        setLoading(false);\r\n                    }\r\n                })\r\n\r\n        } catch (e) {\r\n\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Heading textAlign={'center'}>Assigned quizess</Heading>\r\n            <Divider my={5}/>\r\n\r\n            <Table size={'lg'} variant={'striped'} colorScheme={'blue'}>\r\n                <Thead>\r\n                    <Tr>\r\n                        <Th>No</Th>\r\n                        <Th>Quiz Name</Th>\r\n                        <Th>Date</Th>\r\n                        <Th>Action</Th>\r\n                    </Tr>\r\n                </Thead>\r\n\r\n                <Tbody>\r\n\r\n                    {\r\n                        assignedQuizzes.length == 0 && <Tr>\r\n                            <Td colSpan={4} py={5} my={5}>\r\n                                Your dont have any assigned quiz\r\n                            </Td>\r\n                        </Tr>\r\n\r\n                    }\r\n                    {\r\n                        assignedQuizzes.length>0&&\r\n                        assignedQuizzes.map((quizInfo,index)=>(\r\n                            <Tr key={index}>\r\n                                <Td>1</Td>\r\n                                <Td>\r\n                                    <HStack>\r\n                                        <Text>{quizInfo.title}</Text>\r\n                                        <Text bg={'teal.700'} px={2} color={'white'} fontSize={'sm'}>new</Text>\r\n                                    </HStack>\r\n                                </Td>\r\n                                <Td>{dateFormat(quizInfo.createdDate, \"dddd, mmmm, yyyy, h:MM:ss TT\")}</Td>\r\n                                <Td>Start now</Td>\r\n\r\n                            </Tr>\r\n                        ))\r\n                    }\r\n\r\n                </Tbody>\r\n                {\r\n                    assignedQuizzes.length > 0 && <TableCaption>Assigned Quizzes</TableCaption>\r\n                }\r\n\r\n            </Table>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AssignedQuizPage;"]},"metadata":{},"sourceType":"module"}