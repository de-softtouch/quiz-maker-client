{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\pages\\\\admin\\\\library\\\\LibraryPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Button, Flex, FormControl, Heading, HStack, IconButton, Image, Input, ListIcon, Menu, MenuButton, MenuItem, MenuList, Select, Text, Tooltip, useDisclosure, VStack } from \"@chakra-ui/react\";\nimport { AddIcon, ChevronDownIcon, DeleteIcon, EditIcon, TimeIcon } from \"@chakra-ui/icons\";\nimport { BiShare, BsListCheck, BsPlay, MdAssignment } from \"react-icons/all\";\nimport quizApi from \"../../../api/quizApi\";\nimport dateFormat from \"dateformat\";\nimport AssignedUsers from \"./AssignedUsers\";\nimport { useHistory } from \"react-router-dom\";\nimport ShareDialog from \"./ShareDialog\";\nimport UserService from \"../../../service/UserService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LibraryPage = () => {\n  _s();\n\n  const [share, setShare] = useState(false);\n  const [quizzes, setQuizzes] = useState([]);\n  const [filteredQuizzes, setFilteredQuizzes] = useState(null);\n  const [selectedQuiz, setSelectedQuiz] = useState(null);\n  const [isOpen, setOpen] = useState(false);\n  const [params, setParams] = useState(1);\n  const history = useHistory();\n  useEffect(() => {\n    console.log(\"rendering............\");\n    getCreatedQuizzesInfo(params);\n  }, [params, setParams]);\n\n  const getCreatedQuizzesInfo = async params => {\n    try {\n      const data = await UserService.getUserQuizzes(params);\n      setQuizzes(data.data);\n      setFilteredQuizzes(data.data);\n      console.log(data.data);\n    } catch (e) {\n      console.log(\"Failed to fetch created quizzes info\");\n    }\n  };\n\n  const getStatus = status => {\n    switch (status) {\n      case 0:\n        return \"draft\";\n\n      case 1:\n        return \"private\";\n\n      case 2:\n        return \"public\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      w: \"100%\",\n      bg: \"gray.100\",\n      direction: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(HStack, {\n        w: '100%',\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          w: '100%',\n          fontWeight: \"medium\",\n          children: [quizzes && quizzes.length, \" Quizzes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            onChange: e => {\n              const value = e.target.value.toLowerCase();\n\n              if (value && value.length > 0) {\n                setFilteredQuizzes(quizzes.filter(item => item.title.toLowerCase().includes(value)));\n              } else {\n                setFilteredQuizzes(quizzes);\n              }\n            },\n            placeholder: \"enter quiz title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: \"Sort\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          defaultValue: 0,\n          onChange: e => {\n            const value = parseInt(e.target.value);\n\n            switch (value) {\n              case 0:\n                {\n                  setParams(prev => ({ ...prev,\n                    direction: \"DESC\"\n                  }));\n                  break;\n                }\n\n              case 1:\n                {\n                  setParams(prev => ({ ...prev,\n                    direction: \"ASC\"\n                  }));\n                  break;\n                }\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: 0,\n            children: \"Create Date - DESC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: 1,\n            children: \"Create Date - ASC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), filteredQuizzes && filteredQuizzes.map((item, i) => {\n        const handleEdit = () => {\n          history.push(`/admin/quiz/${item.id}/edit`);\n        };\n\n        const updateQuizActive = async active => {\n          console.log(item.id);\n\n          try {\n            const resp = await UserService.updateQuizActive(item.id, active);\n            const q = quizzes.filter(quiz => quiz.id !== item.id);\n            setQuizzes(q);\n            setFilteredQuizzes(q);\n            console.log(\"Remove quiz id : \" + item.id + \" success\");\n          } catch (e) {\n            console.log(\"Failed to update quiz active status\", e);\n          }\n        };\n\n        return /*#__PURE__*/_jsxDEV(Box, {\n          my: 2,\n          p: 5,\n          minW: \"100\",\n          bg: \"white\",\n          maxW: 600,\n          position: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(HStack, {\n            spacing: 5,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              boxSize: \"100px\",\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                src: \"https://cdn-icons-png.flaticon.com/512/1205/1205526.png\",\n                alt: \"Q\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(VStack, {\n              align: \"start\",\n              children: [/*#__PURE__*/_jsxDEV(HStack, {\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  color: \"gray.500\",\n                  fontSize: 12,\n                  children: \"Quiz\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  bg: \"teal.100\",\n                  px: 2,\n                  color: \"gray.500\",\n                  fontSize: 12,\n                  children: getStatus(item.status)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: \"medium\",\n                fontSize: 18,\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(HStack, {\n                spacing: 4,\n                children: [/*#__PURE__*/_jsxDEV(HStack, {\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"xs\",\n                    icon: /*#__PURE__*/_jsxDEV(BsListCheck, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 55\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: 12,\n                    children: [item.numOfQuestions, \" Q\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(HStack, {\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"xs\",\n                    icon: /*#__PURE__*/_jsxDEV(TimeIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 55\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: 12,\n                    children: [item.limitTime, \" mins\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(HStack, {\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"xs\",\n                    icon: /*#__PURE__*/_jsxDEV(BsPlay, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 55\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: 12,\n                    children: [\"Played \", item.playedCount, \" times\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                children: [\"Create At \", \": \", /*#__PURE__*/_jsxDEV(Tooltip, {\n                  label: \"Created date\",\n                  children: dateFormat(item.createDate, \"dd-mm-yyyy, h:MM TT\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(HStack, {\n            spacing: 5,\n            position: \"absolute\",\n            top: 5,\n            right: 5,\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleEdit,\n              size: \"sx\",\n              icon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 43\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {\n              children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n                bg: \"white\",\n                size: \"sm\",\n                as: Button,\n                rightIcon: /*#__PURE__*/_jsxDEV(ChevronDownIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 52\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(MenuList, {\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: () => {\n                    setSelectedQuiz(item);\n                    setOpen(true);\n                  },\n                  children: \"Assigned users\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: () => {\n                    setSelectedQuiz(item);\n                    setShare(true);\n                  },\n                  children: \"Share\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: handleEdit,\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: () => {\n                    updateQuizActive(0);\n                  },\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => {\n              // setSelectedQuiz(item.quizId);\n              // setShare(true);\n              history.push(\"/admin/assignment\");\n            },\n            position: \"absolute\",\n            bottom: 10,\n            right: 5,\n            size: \"md\",\n            icon: /*#__PURE__*/_jsxDEV(MdAssignment, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 29\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), share && /*#__PURE__*/_jsxDEV(ShareDialog, {\n      quizId: selectedQuiz.id,\n      setVisible: setShare\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 17\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(AssignedUsers, {\n      quizId: selectedQuiz.id,\n      isOpen: isOpen,\n      setOpen: setOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(LibraryPage, \"kxTe5echCbZIUU8hQk9wDV4FJ2c=\", false, function () {\n  return [useHistory];\n});\n\n_c = LibraryPage;\nexport default LibraryPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LibraryPage\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/pages/admin/library/LibraryPage.js"],"names":["React","useEffect","useState","Box","Button","Flex","FormControl","Heading","HStack","IconButton","Image","Input","ListIcon","Menu","MenuButton","MenuItem","MenuList","Select","Text","Tooltip","useDisclosure","VStack","AddIcon","ChevronDownIcon","DeleteIcon","EditIcon","TimeIcon","BiShare","BsListCheck","BsPlay","MdAssignment","quizApi","dateFormat","AssignedUsers","useHistory","ShareDialog","UserService","LibraryPage","share","setShare","quizzes","setQuizzes","filteredQuizzes","setFilteredQuizzes","selectedQuiz","setSelectedQuiz","isOpen","setOpen","params","setParams","history","console","log","getCreatedQuizzesInfo","data","getUserQuizzes","e","getStatus","status","length","value","target","toLowerCase","filter","item","title","includes","parseInt","prev","direction","map","i","handleEdit","push","id","updateQuizActive","active","resp","q","quiz","numOfQuestions","limitTime","playedCount","createDate"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Flex, FormControl,\r\n    Heading,\r\n    HStack,\r\n    IconButton,\r\n    Image, Input,\r\n    ListIcon,\r\n    Menu,\r\n    MenuButton,\r\n    MenuItem,\r\n    MenuList, Select,\r\n    Text,\r\n    Tooltip,\r\n    useDisclosure,\r\n    VStack,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n    AddIcon,\r\n    ChevronDownIcon,\r\n    DeleteIcon,\r\n    EditIcon,\r\n    TimeIcon,\r\n} from \"@chakra-ui/icons\";\r\nimport {BiShare, BsListCheck, BsPlay, MdAssignment} from \"react-icons/all\";\r\nimport quizApi from \"../../../api/quizApi\";\r\nimport dateFormat from \"dateformat\";\r\nimport AssignedUsers from \"./AssignedUsers\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport ShareDialog from \"./ShareDialog\";\r\nimport UserService from \"../../../service/UserService\";\r\n\r\nconst LibraryPage = () => {\r\n    const [share, setShare] = useState(false);\r\n\r\n    const [quizzes, setQuizzes] = useState([]);\r\n    const [filteredQuizzes, setFilteredQuizzes] = useState(null);\r\n    const [selectedQuiz, setSelectedQuiz] = useState(null);\r\n    const [isOpen, setOpen] = useState(false);\r\n    const [params, setParams] = useState(1);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        console.log(\"rendering............\")\r\n        getCreatedQuizzesInfo(params);\r\n    }, [params, setParams]);\r\n    const getCreatedQuizzesInfo = async (params) => {\r\n        try {\r\n            const data = await UserService.getUserQuizzes(params);\r\n            setQuizzes(data.data);\r\n            setFilteredQuizzes(data.data);\r\n            console.log(data.data);\r\n        } catch (e) {\r\n            console.log(\"Failed to fetch created quizzes info\");\r\n        }\r\n    };\r\n\r\n    const getStatus = (status) => {\r\n        switch (status) {\r\n            case 0:\r\n                return \"draft\"\r\n            case 1:\r\n                return \"private\"\r\n            case 2 :\r\n                return \"public\"\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Flex w={\"100%\"} bg={\"gray.100\"} direction={\"column\"}>\r\n                {/**/}\r\n                <HStack w={'100%'}>\r\n                    <Text w={'100%'} fontWeight={\"medium\"}>\r\n                        {quizzes && quizzes.length} Quizzes\r\n                    </Text>\r\n                    <FormControl>\r\n                        <Input\r\n                            onChange={(e) => {\r\n                                const value = e.target.value.toLowerCase();\r\n                                if (value && value.length > 0) {\r\n                                    setFilteredQuizzes(quizzes.filter(item => item.title.toLowerCase().includes(value)))\r\n                                } else {\r\n                                    setFilteredQuizzes(quizzes);\r\n                                }\r\n                            }}\r\n                            placeholder={\"enter quiz title\"}/>\r\n                    </FormControl>\r\n                </HStack>\r\n                <HStack>\r\n                    <Text>Sort</Text>\r\n                    <Select defaultValue={0}\r\n                            onChange={(e) => {\r\n                                const value = parseInt(e.target.value);\r\n                                switch (value) {\r\n                                    case 0: {\r\n                                        setParams(prev => ({\r\n                                            ...prev,\r\n                                            direction: \"DESC\"\r\n                                        }))\r\n                                        break\r\n                                    }\r\n\r\n                                    case 1: {\r\n                                        setParams(prev => ({\r\n                                            ...prev,\r\n                                            direction: \"ASC\"\r\n                                        }))\r\n                                        break\r\n                                    }\r\n                                }\r\n                            }}\r\n                    >\r\n                        <option value={0}>Create Date - DESC</option>\r\n                        <option value={1}>Create Date - ASC</option>\r\n                    </Select>\r\n\r\n                </HStack>\r\n                {/*CREATED QUIZZES*/}\r\n                {filteredQuizzes &&\r\n                filteredQuizzes.map((item, i) => {\r\n                    const handleEdit = () => {\r\n                        history.push(`/admin/quiz/${item.id}/edit`);\r\n                    };\r\n                    const updateQuizActive = async (active) => {\r\n                        console.log(item.id);\r\n                        try {\r\n                            const resp = await UserService.updateQuizActive(item.id, active);\r\n                            const q = quizzes.filter(quiz => quiz.id !== item.id);\r\n                            setQuizzes(q);\r\n                            setFilteredQuizzes(q);\r\n                            console.log(\"Remove quiz id : \" + item.id + \" success\");\r\n                        } catch (e) {\r\n                            console.log(\"Failed to update quiz active status\", e);\r\n                        }\r\n\r\n                    }\r\n                    return (\r\n                        <Box\r\n                            my={2}\r\n                            key={i}\r\n                            p={5}\r\n                            minW={\"100\"}\r\n                            bg={\"white\"}\r\n                            maxW={600}\r\n                            position={\"relative\"}\r\n                        >\r\n                            <HStack spacing={5}>\r\n                                {/*IMAGE*/}\r\n                                <Box boxSize=\"100px\">\r\n                                    <Image\r\n                                        src=\"https://cdn-icons-png.flaticon.com/512/1205/1205526.png\"\r\n                                        alt=\"Q\"\r\n                                    />\r\n                                </Box>\r\n                                {/*INFO*/}\r\n                                <VStack align={\"start\"}>\r\n                                    {/*STATUS*/}\r\n                                    <HStack>\r\n                                        <Text\r\n                                            color={\"gray.500\"}\r\n                                            fontSize={12}\r\n                                        >\r\n                                            Quiz\r\n                                        </Text>\r\n                                        <Text\r\n                                            bg={\"teal.100\"}\r\n                                            px={2}\r\n                                            color={\"gray.500\"}\r\n                                            fontSize={12}\r\n                                        >\r\n                                            {\r\n                                                getStatus(item.status)\r\n                                            }\r\n                                        </Text>\r\n                                    </HStack>\r\n                                    {/*TITLE*/}\r\n                                    <Text\r\n                                        fontWeight={\"medium\"}\r\n                                        fontSize={18}\r\n                                    >\r\n                                        {item.title}\r\n                                    </Text>\r\n                                    {/*PLAYED*/}\r\n                                    <HStack spacing={4}>\r\n                                        <HStack>\r\n                                            <IconButton\r\n                                                size={\"xs\"}\r\n                                                icon={<BsListCheck/>}\r\n                                            />\r\n                                            <Text fontSize={12}>\r\n                                                {item.numOfQuestions} Q\r\n                                            </Text>\r\n                                        </HStack>\r\n\r\n                                        <HStack>\r\n                                            <IconButton\r\n                                                size={\"xs\"}\r\n                                                icon={<TimeIcon/>}\r\n                                            />\r\n                                            <Text fontSize={12}>\r\n                                                {item.limitTime} mins\r\n                                            </Text>\r\n                                        </HStack>\r\n                                        <HStack>\r\n                                            <IconButton\r\n                                                size={\"xs\"}\r\n                                                icon={<BsPlay/>}\r\n                                            />\r\n                                            <Text fontSize={12}>\r\n                                                Played {item.playedCount} times\r\n                                            </Text>\r\n                                        </HStack>\r\n                                    </HStack>\r\n                                    {/*CREATED DATE*/}\r\n                                    <Text>\r\n                                        Create At {\": \"}\r\n                                        <Tooltip label={\"Created date\"}>\r\n                                            {dateFormat(\r\n                                                item.createDate,\r\n                                                \"dd-mm-yyyy, h:MM TT\"\r\n                                            )}\r\n                                        </Tooltip>\r\n                                    </Text>\r\n\r\n                                </VStack>\r\n                            </HStack>\r\n                            <HStack\r\n                                spacing={5}\r\n                                position={\"absolute\"}\r\n                                top={5}\r\n                                right={5}\r\n                            >\r\n                                <IconButton\r\n                                    onClick={handleEdit}\r\n                                    size={\"sx\"}\r\n                                    icon={<EditIcon/>}\r\n                                />\r\n                                <Menu>\r\n                                    <MenuButton\r\n                                        bg={\"white\"}\r\n                                        size={\"sm\"}\r\n                                        as={Button}\r\n                                        rightIcon={<ChevronDownIcon/>}\r\n                                    >\r\n                                        {/*Actions*/}\r\n                                    </MenuButton>\r\n                                    <MenuList>\r\n                                        <MenuItem\r\n                                            onClick={() => {\r\n                                                setSelectedQuiz(\r\n                                                    item\r\n                                                );\r\n                                                setOpen(true);\r\n                                            }}\r\n                                        >\r\n                                            Assigned users\r\n                                        </MenuItem>\r\n                                        <MenuItem\r\n                                            onClick={() => {\r\n                                                setSelectedQuiz(\r\n                                                    item\r\n                                                );\r\n                                                setShare(true)\r\n                                            }}\r\n                                        >\r\n                                            Share\r\n                                        </MenuItem>\r\n                                        <MenuItem onClick={handleEdit}>\r\n                                            Edit\r\n                                        </MenuItem>\r\n                                        <MenuItem onClick={() => {\r\n\r\n                                            updateQuizActive(0)\r\n                                        }}>Remove</MenuItem>\r\n                                    </MenuList>\r\n                                </Menu>\r\n                            </HStack>\r\n                            <IconButton\r\n                                onClick={() => {\r\n                                    // setSelectedQuiz(item.quizId);\r\n                                    // setShare(true);\r\n                                    history.push(\"/admin/assignment\");\r\n                                }}\r\n                                position={\"absolute\"}\r\n                                bottom={10}\r\n                                right={5}\r\n                                size={\"md\"}\r\n                                icon={<MdAssignment/>}\r\n                            />\r\n                        </Box>\r\n                    );\r\n                })}\r\n            </Flex>\r\n\r\n            {share && (\r\n                <ShareDialog quizId={selectedQuiz.id} setVisible={setShare}/>\r\n            )}\r\n            {isOpen && (\r\n                <AssignedUsers\r\n                    quizId={selectedQuiz.id}\r\n                    isOpen={isOpen}\r\n                    setOpen={setOpen}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LibraryPage;\r\n"]},"metadata":{},"sourceType":"module"}