{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\create_grade_quizzes\\\\src\\\\pages\\\\admin\\\\library\\\\AssignedUsers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, HStack, IconButton, ListItem, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, OrderedList, Spacer, Text, useDisclosure } from \"@chakra-ui/react\";\nimport quizApi from \"../../../api/quizApi\";\nimport axios from \"axios\";\nimport { DeleteIcon } from \"@chakra-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AssignedUsers = ({\n  isOpen,\n  quizId,\n  setOpen\n}) => {\n  _s();\n\n  const [users, setUsers] = useState(null);\n  useEffect(() => {\n    console.log(\"ASSIGNED \");\n\n    const fetchUsers = async () => {\n      console.log(\"get userss\");\n\n      try {\n        const resp = await axios.get(`http://localhost:8080/api/v1/admin/quiz-assignment/assign-quizzes/${quizId}/users`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`\n          }\n        });\n\n        if (resp.status === 200) {\n          setUsers(resp.data);\n          console.log(resp.data);\n        }\n      } catch (e) {\n        console.log(\"Failed to fetch assigned users \", e);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  const onRemoveUser = async (userId, quizId) => {\n    const url = `http://localhost:8080/api/v1/admin/quiz-assignment/assign-quizzes?uid=${userId}&qid=${quizId}`;\n\n    try {\n      const response = await axios.delete(url, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"*/*\",\n          \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\n          \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\n        }\n      });\n\n      if (response.status === 200) {\n        console.log(\"remove success\");\n        const filteredList = users.filter(user => user.userId != userId);\n        setUsers(filteredList);\n      }\n    } catch (e) {\n      console.log(\"Failed to remove assigned user \", e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      size: 'md',\n      onClose: () => {},\n      closeOnOverlayClick: true,\n      isOpen: isOpen,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"Assigned users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {\n          onClick: () => setOpen(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(OrderedList, {\n            children: users && users.map((user, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(HStack, {\n                w: '100%',\n                children: [/*#__PURE__*/_jsxDEV(Text, {\n                  children: user.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => onRemoveUser(user.userId, quizId),\n                  bg: 'white',\n                  color: 'gray.500',\n                  icon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 87\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 41\n              }, this)\n            }, user.email, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpen(false),\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AssignedUsers, \"agkcAITZm3jfJZtUcsWKkI40X24=\");\n\n_c = AssignedUsers;\nexport default AssignedUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignedUsers\");","map":{"version":3,"sources":["C:/Users/Admin/create_grade_quizzes/src/pages/admin/library/AssignedUsers.js"],"names":["React","useEffect","useState","Button","HStack","IconButton","ListItem","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","OrderedList","Spacer","Text","useDisclosure","quizApi","axios","DeleteIcon","AssignedUsers","isOpen","quizId","setOpen","users","setUsers","console","log","fetchUsers","resp","get","headers","localStorage","getItem","status","data","e","onRemoveUser","userId","url","response","delete","filteredList","filter","user","map","i","email"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {\r\n    Button, HStack, IconButton, ListItem,\r\n    Modal, ModalBody,\r\n    ModalCloseButton,\r\n    ModalContent, ModalFooter,\r\n    ModalHeader,\r\n    ModalOverlay, OrderedList, Spacer, Text,\r\n    useDisclosure\r\n} from \"@chakra-ui/react\";\r\nimport quizApi from \"../../../api/quizApi\";\r\nimport axios from \"axios\";\r\nimport {DeleteIcon} from \"@chakra-ui/icons\";\r\n\r\nconst AssignedUsers = ({isOpen, quizId, setOpen}) => {\r\n\r\n    const [users, setUsers] = useState(null);\r\n\r\n    useEffect(() => {\r\n        console.log(\"ASSIGNED \")\r\n        const fetchUsers = async () => {\r\n            console.log(\"get userss\")\r\n            try {\r\n                const resp = await axios.get(`http://localhost:8080/api/v1/admin/quiz-assignment/assign-quizzes/${quizId}/users`, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`\r\n                    }\r\n                })\r\n                if (resp.status === 200) {\r\n                    setUsers(resp.data);\r\n                    console.log(resp.data);\r\n                }\r\n            } catch (e) {\r\n                console.log(\"Failed to fetch assigned users \", e);\r\n            }\r\n        }\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    const onRemoveUser = async (userId, quizId) => {\r\n        const url = `http://localhost:8080/api/v1/admin/quiz-assignment/assign-quizzes?uid=${userId}&qid=${quizId}`;\r\n        try {\r\n            const response = await axios.delete(url, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Accept\": \"*/*\",\r\n                    \"Access-Control-Allow-Origin\": \"http://localhost:3000\",\r\n                    \"Authorization\": `Bearer ${localStorage.getItem(\"accessToken\")}`\r\n                }\r\n            })\r\n            if (response.status === 200) {\r\n                console.log(\"remove success\");\r\n                const filteredList = users.filter(user => user.userId != userId);\r\n                setUsers(filteredList);\r\n            }\r\n        } catch (e) {\r\n            console.log(\"Failed to remove assigned user \", e)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Modal size={'md'} onClose={() => {\r\n            }} closeOnOverlayClick={true} isOpen={isOpen}>\r\n                <ModalOverlay/>\r\n                <ModalContent>\r\n                    <ModalHeader>Assigned users</ModalHeader>\r\n                    <ModalCloseButton onClick={() => setOpen(false)}/>\r\n                    <ModalBody>\r\n                        <OrderedList>\r\n                            {\r\n                                users && users.map((user, i) => (\r\n                                    <ListItem key={user.email}>\r\n                                        <HStack w={'100%'}>\r\n                                            <Text>{user.email}</Text>\r\n                                            <Spacer/>\r\n                                            <IconButton\r\n                                                onClick={() => onRemoveUser(user.userId, quizId)}\r\n                                                bg={'white'} color={'gray.500'} icon={<DeleteIcon/>}/>\r\n                                        </HStack>\r\n                                    </ListItem>\r\n                                ))\r\n                            }\r\n\r\n                        </OrderedList>\r\n                    </ModalBody>\r\n\r\n                    <ModalFooter>\r\n                        {/*<Button colorScheme=\"blue\" mr={3}>*/}\r\n                        {/*    Save*/}\r\n                        {/*</Button>*/}\r\n                        <Button onClick={() => setOpen(false)}>Close</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AssignedUsers;"]},"metadata":{},"sourceType":"module"}